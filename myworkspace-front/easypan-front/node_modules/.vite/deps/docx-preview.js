import {
  __commonJS,
  __require
} from "./chunk-AUZ3RYOM.js";

// node_modules/jszip/dist/jszip.min.js
var require_jszip_min = __commonJS({
  "node_modules/jszip/dist/jszip.min.js"(exports, module) {
    !function(e) {
      if ("object" == typeof exports && "undefined" != typeof module)
        module.exports = e();
      else if ("function" == typeof define && define.amd)
        define([], e);
      else {
        ("undefined" != typeof window ? window : "undefined" != typeof global ? global : "undefined" != typeof self ? self : this).JSZip = e();
      }
    }(function() {
      return function s(a, o, h) {
        function u(r, e2) {
          if (!o[r]) {
            if (!a[r]) {
              var t = "function" == typeof __require && __require;
              if (!e2 && t)
                return t(r, true);
              if (l)
                return l(r, true);
              var n = new Error("Cannot find module '" + r + "'");
              throw n.code = "MODULE_NOT_FOUND", n;
            }
            var i = o[r] = { exports: {} };
            a[r][0].call(i.exports, function(e3) {
              var t2 = a[r][1][e3];
              return u(t2 || e3);
            }, i, i.exports, s, a, o, h);
          }
          return o[r].exports;
        }
        for (var l = "function" == typeof __require && __require, e = 0; e < h.length; e++)
          u(h[e]);
        return u;
      }({ 1: [function(e, t, r) {
        "use strict";
        var d = e("./utils"), c = e("./support"), p = "ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=";
        r.encode = function(e2) {
          for (var t2, r2, n, i, s, a, o, h = [], u = 0, l = e2.length, f = l, c2 = "string" !== d.getTypeOf(e2); u < e2.length; )
            f = l - u, n = c2 ? (t2 = e2[u++], r2 = u < l ? e2[u++] : 0, u < l ? e2[u++] : 0) : (t2 = e2.charCodeAt(u++), r2 = u < l ? e2.charCodeAt(u++) : 0, u < l ? e2.charCodeAt(u++) : 0), i = t2 >> 2, s = (3 & t2) << 4 | r2 >> 4, a = 1 < f ? (15 & r2) << 2 | n >> 6 : 64, o = 2 < f ? 63 & n : 64, h.push(p.charAt(i) + p.charAt(s) + p.charAt(a) + p.charAt(o));
          return h.join("");
        }, r.decode = function(e2) {
          var t2, r2, n, i, s, a, o = 0, h = 0, u = "data:";
          if (e2.substr(0, u.length) === u)
            throw new Error("Invalid base64 input, it looks like a data url.");
          var l, f = 3 * (e2 = e2.replace(/[^A-Za-z0-9+/=]/g, "")).length / 4;
          if (e2.charAt(e2.length - 1) === p.charAt(64) && f--, e2.charAt(e2.length - 2) === p.charAt(64) && f--, f % 1 != 0)
            throw new Error("Invalid base64 input, bad content length.");
          for (l = c.uint8array ? new Uint8Array(0 | f) : new Array(0 | f); o < e2.length; )
            t2 = p.indexOf(e2.charAt(o++)) << 2 | (i = p.indexOf(e2.charAt(o++))) >> 4, r2 = (15 & i) << 4 | (s = p.indexOf(e2.charAt(o++))) >> 2, n = (3 & s) << 6 | (a = p.indexOf(e2.charAt(o++))), l[h++] = t2, 64 !== s && (l[h++] = r2), 64 !== a && (l[h++] = n);
          return l;
        };
      }, { "./support": 30, "./utils": 32 }], 2: [function(e, t, r) {
        "use strict";
        var n = e("./external"), i = e("./stream/DataWorker"), s = e("./stream/Crc32Probe"), a = e("./stream/DataLengthProbe");
        function o(e2, t2, r2, n2, i2) {
          this.compressedSize = e2, this.uncompressedSize = t2, this.crc32 = r2, this.compression = n2, this.compressedContent = i2;
        }
        o.prototype = { getContentWorker: function() {
          var e2 = new i(n.Promise.resolve(this.compressedContent)).pipe(this.compression.uncompressWorker()).pipe(new a("data_length")), t2 = this;
          return e2.on("end", function() {
            if (this.streamInfo.data_length !== t2.uncompressedSize)
              throw new Error("Bug : uncompressed data size mismatch");
          }), e2;
        }, getCompressedWorker: function() {
          return new i(n.Promise.resolve(this.compressedContent)).withStreamInfo("compressedSize", this.compressedSize).withStreamInfo("uncompressedSize", this.uncompressedSize).withStreamInfo("crc32", this.crc32).withStreamInfo("compression", this.compression);
        } }, o.createWorkerFrom = function(e2, t2, r2) {
          return e2.pipe(new s()).pipe(new a("uncompressedSize")).pipe(t2.compressWorker(r2)).pipe(new a("compressedSize")).withStreamInfo("compression", t2);
        }, t.exports = o;
      }, { "./external": 6, "./stream/Crc32Probe": 25, "./stream/DataLengthProbe": 26, "./stream/DataWorker": 27 }], 3: [function(e, t, r) {
        "use strict";
        var n = e("./stream/GenericWorker");
        r.STORE = { magic: "\0\0", compressWorker: function() {
          return new n("STORE compression");
        }, uncompressWorker: function() {
          return new n("STORE decompression");
        } }, r.DEFLATE = e("./flate");
      }, { "./flate": 7, "./stream/GenericWorker": 28 }], 4: [function(e, t, r) {
        "use strict";
        var n = e("./utils");
        var o = function() {
          for (var e2, t2 = [], r2 = 0; r2 < 256; r2++) {
            e2 = r2;
            for (var n2 = 0; n2 < 8; n2++)
              e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;
            t2[r2] = e2;
          }
          return t2;
        }();
        t.exports = function(e2, t2) {
          return void 0 !== e2 && e2.length ? "string" !== n.getTypeOf(e2) ? function(e3, t3, r2, n2) {
            var i = o, s = n2 + r2;
            e3 ^= -1;
            for (var a = n2; a < s; a++)
              e3 = e3 >>> 8 ^ i[255 & (e3 ^ t3[a])];
            return -1 ^ e3;
          }(0 | t2, e2, e2.length, 0) : function(e3, t3, r2, n2) {
            var i = o, s = n2 + r2;
            e3 ^= -1;
            for (var a = n2; a < s; a++)
              e3 = e3 >>> 8 ^ i[255 & (e3 ^ t3.charCodeAt(a))];
            return -1 ^ e3;
          }(0 | t2, e2, e2.length, 0) : 0;
        };
      }, { "./utils": 32 }], 5: [function(e, t, r) {
        "use strict";
        r.base64 = false, r.binary = false, r.dir = false, r.createFolders = true, r.date = null, r.compression = null, r.compressionOptions = null, r.comment = null, r.unixPermissions = null, r.dosPermissions = null;
      }, {}], 6: [function(e, t, r) {
        "use strict";
        var n = null;
        n = "undefined" != typeof Promise ? Promise : e("lie"), t.exports = { Promise: n };
      }, { lie: 37 }], 7: [function(e, t, r) {
        "use strict";
        var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Uint32Array, i = e("pako"), s = e("./utils"), a = e("./stream/GenericWorker"), o = n ? "uint8array" : "array";
        function h(e2, t2) {
          a.call(this, "FlateWorker/" + e2), this._pako = null, this._pakoAction = e2, this._pakoOptions = t2, this.meta = {};
        }
        r.magic = "\b\0", s.inherits(h, a), h.prototype.processChunk = function(e2) {
          this.meta = e2.meta, null === this._pako && this._createPako(), this._pako.push(s.transformTo(o, e2.data), false);
        }, h.prototype.flush = function() {
          a.prototype.flush.call(this), null === this._pako && this._createPako(), this._pako.push([], true);
        }, h.prototype.cleanUp = function() {
          a.prototype.cleanUp.call(this), this._pako = null;
        }, h.prototype._createPako = function() {
          this._pako = new i[this._pakoAction]({ raw: true, level: this._pakoOptions.level || -1 });
          var t2 = this;
          this._pako.onData = function(e2) {
            t2.push({ data: e2, meta: t2.meta });
          };
        }, r.compressWorker = function(e2) {
          return new h("Deflate", e2);
        }, r.uncompressWorker = function() {
          return new h("Inflate", {});
        };
      }, { "./stream/GenericWorker": 28, "./utils": 32, pako: 38 }], 8: [function(e, t, r) {
        "use strict";
        function A(e2, t2) {
          var r2, n2 = "";
          for (r2 = 0; r2 < t2; r2++)
            n2 += String.fromCharCode(255 & e2), e2 >>>= 8;
          return n2;
        }
        function n(e2, t2, r2, n2, i2, s2) {
          var a, o, h = e2.file, u = e2.compression, l = s2 !== O.utf8encode, f = I.transformTo("string", s2(h.name)), c = I.transformTo("string", O.utf8encode(h.name)), d = h.comment, p = I.transformTo("string", s2(d)), m = I.transformTo("string", O.utf8encode(d)), _ = c.length !== h.name.length, g = m.length !== d.length, b = "", v = "", y = "", w = h.dir, k = h.date, x = { crc32: 0, compressedSize: 0, uncompressedSize: 0 };
          t2 && !r2 || (x.crc32 = e2.crc32, x.compressedSize = e2.compressedSize, x.uncompressedSize = e2.uncompressedSize);
          var S = 0;
          t2 && (S |= 8), l || !_ && !g || (S |= 2048);
          var z = 0, C = 0;
          w && (z |= 16), "UNIX" === i2 ? (C = 798, z |= function(e3, t3) {
            var r3 = e3;
            return e3 || (r3 = t3 ? 16893 : 33204), (65535 & r3) << 16;
          }(h.unixPermissions, w)) : (C = 20, z |= function(e3) {
            return 63 & (e3 || 0);
          }(h.dosPermissions)), a = k.getUTCHours(), a <<= 6, a |= k.getUTCMinutes(), a <<= 5, a |= k.getUTCSeconds() / 2, o = k.getUTCFullYear() - 1980, o <<= 4, o |= k.getUTCMonth() + 1, o <<= 5, o |= k.getUTCDate(), _ && (v = A(1, 1) + A(B(f), 4) + c, b += "up" + A(v.length, 2) + v), g && (y = A(1, 1) + A(B(p), 4) + m, b += "uc" + A(y.length, 2) + y);
          var E = "";
          return E += "\n\0", E += A(S, 2), E += u.magic, E += A(a, 2), E += A(o, 2), E += A(x.crc32, 4), E += A(x.compressedSize, 4), E += A(x.uncompressedSize, 4), E += A(f.length, 2), E += A(b.length, 2), { fileRecord: R.LOCAL_FILE_HEADER + E + f + b, dirRecord: R.CENTRAL_FILE_HEADER + A(C, 2) + E + A(p.length, 2) + "\0\0\0\0" + A(z, 4) + A(n2, 4) + f + b + p };
        }
        var I = e("../utils"), i = e("../stream/GenericWorker"), O = e("../utf8"), B = e("../crc32"), R = e("../signature");
        function s(e2, t2, r2, n2) {
          i.call(this, "ZipFileWorker"), this.bytesWritten = 0, this.zipComment = t2, this.zipPlatform = r2, this.encodeFileName = n2, this.streamFiles = e2, this.accumulate = false, this.contentBuffer = [], this.dirRecords = [], this.currentSourceOffset = 0, this.entriesCount = 0, this.currentFile = null, this._sources = [];
        }
        I.inherits(s, i), s.prototype.push = function(e2) {
          var t2 = e2.meta.percent || 0, r2 = this.entriesCount, n2 = this._sources.length;
          this.accumulate ? this.contentBuffer.push(e2) : (this.bytesWritten += e2.data.length, i.prototype.push.call(this, { data: e2.data, meta: { currentFile: this.currentFile, percent: r2 ? (t2 + 100 * (r2 - n2 - 1)) / r2 : 100 } }));
        }, s.prototype.openedSource = function(e2) {
          this.currentSourceOffset = this.bytesWritten, this.currentFile = e2.file.name;
          var t2 = this.streamFiles && !e2.file.dir;
          if (t2) {
            var r2 = n(e2, t2, false, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
            this.push({ data: r2.fileRecord, meta: { percent: 0 } });
          } else
            this.accumulate = true;
        }, s.prototype.closedSource = function(e2) {
          this.accumulate = false;
          var t2 = this.streamFiles && !e2.file.dir, r2 = n(e2, t2, true, this.currentSourceOffset, this.zipPlatform, this.encodeFileName);
          if (this.dirRecords.push(r2.dirRecord), t2)
            this.push({ data: function(e3) {
              return R.DATA_DESCRIPTOR + A(e3.crc32, 4) + A(e3.compressedSize, 4) + A(e3.uncompressedSize, 4);
            }(e2), meta: { percent: 100 } });
          else
            for (this.push({ data: r2.fileRecord, meta: { percent: 0 } }); this.contentBuffer.length; )
              this.push(this.contentBuffer.shift());
          this.currentFile = null;
        }, s.prototype.flush = function() {
          for (var e2 = this.bytesWritten, t2 = 0; t2 < this.dirRecords.length; t2++)
            this.push({ data: this.dirRecords[t2], meta: { percent: 100 } });
          var r2 = this.bytesWritten - e2, n2 = function(e3, t3, r3, n3, i2) {
            var s2 = I.transformTo("string", i2(n3));
            return R.CENTRAL_DIRECTORY_END + "\0\0\0\0" + A(e3, 2) + A(e3, 2) + A(t3, 4) + A(r3, 4) + A(s2.length, 2) + s2;
          }(this.dirRecords.length, r2, e2, this.zipComment, this.encodeFileName);
          this.push({ data: n2, meta: { percent: 100 } });
        }, s.prototype.prepareNextSource = function() {
          this.previous = this._sources.shift(), this.openedSource(this.previous.streamInfo), this.isPaused ? this.previous.pause() : this.previous.resume();
        }, s.prototype.registerPrevious = function(e2) {
          this._sources.push(e2);
          var t2 = this;
          return e2.on("data", function(e3) {
            t2.processChunk(e3);
          }), e2.on("end", function() {
            t2.closedSource(t2.previous.streamInfo), t2._sources.length ? t2.prepareNextSource() : t2.end();
          }), e2.on("error", function(e3) {
            t2.error(e3);
          }), this;
        }, s.prototype.resume = function() {
          return !!i.prototype.resume.call(this) && (!this.previous && this._sources.length ? (this.prepareNextSource(), true) : this.previous || this._sources.length || this.generatedError ? void 0 : (this.end(), true));
        }, s.prototype.error = function(e2) {
          var t2 = this._sources;
          if (!i.prototype.error.call(this, e2))
            return false;
          for (var r2 = 0; r2 < t2.length; r2++)
            try {
              t2[r2].error(e2);
            } catch (e3) {
            }
          return true;
        }, s.prototype.lock = function() {
          i.prototype.lock.call(this);
          for (var e2 = this._sources, t2 = 0; t2 < e2.length; t2++)
            e2[t2].lock();
        }, t.exports = s;
      }, { "../crc32": 4, "../signature": 23, "../stream/GenericWorker": 28, "../utf8": 31, "../utils": 32 }], 9: [function(e, t, r) {
        "use strict";
        var u = e("../compressions"), n = e("./ZipFileWorker");
        r.generateWorker = function(e2, a, t2) {
          var o = new n(a.streamFiles, t2, a.platform, a.encodeFileName), h = 0;
          try {
            e2.forEach(function(e3, t3) {
              h++;
              var r2 = function(e4, t4) {
                var r3 = e4 || t4, n3 = u[r3];
                if (!n3)
                  throw new Error(r3 + " is not a valid compression method !");
                return n3;
              }(t3.options.compression, a.compression), n2 = t3.options.compressionOptions || a.compressionOptions || {}, i = t3.dir, s = t3.date;
              t3._compressWorker(r2, n2).withStreamInfo("file", { name: e3, dir: i, date: s, comment: t3.comment || "", unixPermissions: t3.unixPermissions, dosPermissions: t3.dosPermissions }).pipe(o);
            }), o.entriesCount = h;
          } catch (e3) {
            o.error(e3);
          }
          return o;
        };
      }, { "../compressions": 3, "./ZipFileWorker": 8 }], 10: [function(e, t, r) {
        "use strict";
        function n() {
          if (!(this instanceof n))
            return new n();
          if (arguments.length)
            throw new Error("The constructor with parameters has been removed in JSZip 3.0, please check the upgrade guide.");
          this.files = /* @__PURE__ */ Object.create(null), this.comment = null, this.root = "", this.clone = function() {
            var e2 = new n();
            for (var t2 in this)
              "function" != typeof this[t2] && (e2[t2] = this[t2]);
            return e2;
          };
        }
        (n.prototype = e("./object")).loadAsync = e("./load"), n.support = e("./support"), n.defaults = e("./defaults"), n.version = "3.10.1", n.loadAsync = function(e2, t2) {
          return new n().loadAsync(e2, t2);
        }, n.external = e("./external"), t.exports = n;
      }, { "./defaults": 5, "./external": 6, "./load": 11, "./object": 15, "./support": 30 }], 11: [function(e, t, r) {
        "use strict";
        var u = e("./utils"), i = e("./external"), n = e("./utf8"), s = e("./zipEntries"), a = e("./stream/Crc32Probe"), l = e("./nodejsUtils");
        function f(n2) {
          return new i.Promise(function(e2, t2) {
            var r2 = n2.decompressed.getContentWorker().pipe(new a());
            r2.on("error", function(e3) {
              t2(e3);
            }).on("end", function() {
              r2.streamInfo.crc32 !== n2.decompressed.crc32 ? t2(new Error("Corrupted zip : CRC32 mismatch")) : e2();
            }).resume();
          });
        }
        t.exports = function(e2, o) {
          var h = this;
          return o = u.extend(o || {}, { base64: false, checkCRC32: false, optimizedBinaryString: false, createFolders: false, decodeFileName: n.utf8decode }), l.isNode && l.isStream(e2) ? i.Promise.reject(new Error("JSZip can't accept a stream when loading a zip file.")) : u.prepareContent("the loaded zip file", e2, true, o.optimizedBinaryString, o.base64).then(function(e3) {
            var t2 = new s(o);
            return t2.load(e3), t2;
          }).then(function(e3) {
            var t2 = [i.Promise.resolve(e3)], r2 = e3.files;
            if (o.checkCRC32)
              for (var n2 = 0; n2 < r2.length; n2++)
                t2.push(f(r2[n2]));
            return i.Promise.all(t2);
          }).then(function(e3) {
            for (var t2 = e3.shift(), r2 = t2.files, n2 = 0; n2 < r2.length; n2++) {
              var i2 = r2[n2], s2 = i2.fileNameStr, a2 = u.resolve(i2.fileNameStr);
              h.file(a2, i2.decompressed, { binary: true, optimizedBinaryString: true, date: i2.date, dir: i2.dir, comment: i2.fileCommentStr.length ? i2.fileCommentStr : null, unixPermissions: i2.unixPermissions, dosPermissions: i2.dosPermissions, createFolders: o.createFolders }), i2.dir || (h.file(a2).unsafeOriginalName = s2);
            }
            return t2.zipComment.length && (h.comment = t2.zipComment), h;
          });
        };
      }, { "./external": 6, "./nodejsUtils": 14, "./stream/Crc32Probe": 25, "./utf8": 31, "./utils": 32, "./zipEntries": 33 }], 12: [function(e, t, r) {
        "use strict";
        var n = e("../utils"), i = e("../stream/GenericWorker");
        function s(e2, t2) {
          i.call(this, "Nodejs stream input adapter for " + e2), this._upstreamEnded = false, this._bindStream(t2);
        }
        n.inherits(s, i), s.prototype._bindStream = function(e2) {
          var t2 = this;
          (this._stream = e2).pause(), e2.on("data", function(e3) {
            t2.push({ data: e3, meta: { percent: 0 } });
          }).on("error", function(e3) {
            t2.isPaused ? this.generatedError = e3 : t2.error(e3);
          }).on("end", function() {
            t2.isPaused ? t2._upstreamEnded = true : t2.end();
          });
        }, s.prototype.pause = function() {
          return !!i.prototype.pause.call(this) && (this._stream.pause(), true);
        }, s.prototype.resume = function() {
          return !!i.prototype.resume.call(this) && (this._upstreamEnded ? this.end() : this._stream.resume(), true);
        }, t.exports = s;
      }, { "../stream/GenericWorker": 28, "../utils": 32 }], 13: [function(e, t, r) {
        "use strict";
        var i = e("readable-stream").Readable;
        function n(e2, t2, r2) {
          i.call(this, t2), this._helper = e2;
          var n2 = this;
          e2.on("data", function(e3, t3) {
            n2.push(e3) || n2._helper.pause(), r2 && r2(t3);
          }).on("error", function(e3) {
            n2.emit("error", e3);
          }).on("end", function() {
            n2.push(null);
          });
        }
        e("../utils").inherits(n, i), n.prototype._read = function() {
          this._helper.resume();
        }, t.exports = n;
      }, { "../utils": 32, "readable-stream": 16 }], 14: [function(e, t, r) {
        "use strict";
        t.exports = { isNode: "undefined" != typeof Buffer, newBufferFrom: function(e2, t2) {
          if (Buffer.from && Buffer.from !== Uint8Array.from)
            return Buffer.from(e2, t2);
          if ("number" == typeof e2)
            throw new Error('The "data" argument must not be a number');
          return new Buffer(e2, t2);
        }, allocBuffer: function(e2) {
          if (Buffer.alloc)
            return Buffer.alloc(e2);
          var t2 = new Buffer(e2);
          return t2.fill(0), t2;
        }, isBuffer: function(e2) {
          return Buffer.isBuffer(e2);
        }, isStream: function(e2) {
          return e2 && "function" == typeof e2.on && "function" == typeof e2.pause && "function" == typeof e2.resume;
        } };
      }, {}], 15: [function(e, t, r) {
        "use strict";
        function s(e2, t2, r2) {
          var n2, i2 = u.getTypeOf(t2), s2 = u.extend(r2 || {}, f);
          s2.date = s2.date || /* @__PURE__ */ new Date(), null !== s2.compression && (s2.compression = s2.compression.toUpperCase()), "string" == typeof s2.unixPermissions && (s2.unixPermissions = parseInt(s2.unixPermissions, 8)), s2.unixPermissions && 16384 & s2.unixPermissions && (s2.dir = true), s2.dosPermissions && 16 & s2.dosPermissions && (s2.dir = true), s2.dir && (e2 = g(e2)), s2.createFolders && (n2 = _(e2)) && b.call(this, n2, true);
          var a2 = "string" === i2 && false === s2.binary && false === s2.base64;
          r2 && void 0 !== r2.binary || (s2.binary = !a2), (t2 instanceof c && 0 === t2.uncompressedSize || s2.dir || !t2 || 0 === t2.length) && (s2.base64 = false, s2.binary = true, t2 = "", s2.compression = "STORE", i2 = "string");
          var o2 = null;
          o2 = t2 instanceof c || t2 instanceof l ? t2 : p.isNode && p.isStream(t2) ? new m(e2, t2) : u.prepareContent(e2, t2, s2.binary, s2.optimizedBinaryString, s2.base64);
          var h2 = new d(e2, o2, s2);
          this.files[e2] = h2;
        }
        var i = e("./utf8"), u = e("./utils"), l = e("./stream/GenericWorker"), a = e("./stream/StreamHelper"), f = e("./defaults"), c = e("./compressedObject"), d = e("./zipObject"), o = e("./generate"), p = e("./nodejsUtils"), m = e("./nodejs/NodejsStreamInputAdapter"), _ = function(e2) {
          "/" === e2.slice(-1) && (e2 = e2.substring(0, e2.length - 1));
          var t2 = e2.lastIndexOf("/");
          return 0 < t2 ? e2.substring(0, t2) : "";
        }, g = function(e2) {
          return "/" !== e2.slice(-1) && (e2 += "/"), e2;
        }, b = function(e2, t2) {
          return t2 = void 0 !== t2 ? t2 : f.createFolders, e2 = g(e2), this.files[e2] || s.call(this, e2, null, { dir: true, createFolders: t2 }), this.files[e2];
        };
        function h(e2) {
          return "[object RegExp]" === Object.prototype.toString.call(e2);
        }
        var n = { load: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, forEach: function(e2) {
          var t2, r2, n2;
          for (t2 in this.files)
            n2 = this.files[t2], (r2 = t2.slice(this.root.length, t2.length)) && t2.slice(0, this.root.length) === this.root && e2(r2, n2);
        }, filter: function(r2) {
          var n2 = [];
          return this.forEach(function(e2, t2) {
            r2(e2, t2) && n2.push(t2);
          }), n2;
        }, file: function(e2, t2, r2) {
          if (1 !== arguments.length)
            return e2 = this.root + e2, s.call(this, e2, t2, r2), this;
          if (h(e2)) {
            var n2 = e2;
            return this.filter(function(e3, t3) {
              return !t3.dir && n2.test(e3);
            });
          }
          var i2 = this.files[this.root + e2];
          return i2 && !i2.dir ? i2 : null;
        }, folder: function(r2) {
          if (!r2)
            return this;
          if (h(r2))
            return this.filter(function(e3, t3) {
              return t3.dir && r2.test(e3);
            });
          var e2 = this.root + r2, t2 = b.call(this, e2), n2 = this.clone();
          return n2.root = t2.name, n2;
        }, remove: function(r2) {
          r2 = this.root + r2;
          var e2 = this.files[r2];
          if (e2 || ("/" !== r2.slice(-1) && (r2 += "/"), e2 = this.files[r2]), e2 && !e2.dir)
            delete this.files[r2];
          else
            for (var t2 = this.filter(function(e3, t3) {
              return t3.name.slice(0, r2.length) === r2;
            }), n2 = 0; n2 < t2.length; n2++)
              delete this.files[t2[n2].name];
          return this;
        }, generate: function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, generateInternalStream: function(e2) {
          var t2, r2 = {};
          try {
            if ((r2 = u.extend(e2 || {}, { streamFiles: false, compression: "STORE", compressionOptions: null, type: "", platform: "DOS", comment: null, mimeType: "application/zip", encodeFileName: i.utf8encode })).type = r2.type.toLowerCase(), r2.compression = r2.compression.toUpperCase(), "binarystring" === r2.type && (r2.type = "string"), !r2.type)
              throw new Error("No output type specified.");
            u.checkSupport(r2.type), "darwin" !== r2.platform && "freebsd" !== r2.platform && "linux" !== r2.platform && "sunos" !== r2.platform || (r2.platform = "UNIX"), "win32" === r2.platform && (r2.platform = "DOS");
            var n2 = r2.comment || this.comment || "";
            t2 = o.generateWorker(this, r2, n2);
          } catch (e3) {
            (t2 = new l("error")).error(e3);
          }
          return new a(t2, r2.type || "string", r2.mimeType);
        }, generateAsync: function(e2, t2) {
          return this.generateInternalStream(e2).accumulate(t2);
        }, generateNodeStream: function(e2, t2) {
          return (e2 = e2 || {}).type || (e2.type = "nodebuffer"), this.generateInternalStream(e2).toNodejsStream(t2);
        } };
        t.exports = n;
      }, { "./compressedObject": 2, "./defaults": 5, "./generate": 9, "./nodejs/NodejsStreamInputAdapter": 12, "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31, "./utils": 32, "./zipObject": 35 }], 16: [function(e, t, r) {
        "use strict";
        t.exports = e("stream");
      }, { stream: void 0 }], 17: [function(e, t, r) {
        "use strict";
        var n = e("./DataReader");
        function i(e2) {
          n.call(this, e2);
          for (var t2 = 0; t2 < this.data.length; t2++)
            e2[t2] = 255 & e2[t2];
        }
        e("../utils").inherits(i, n), i.prototype.byteAt = function(e2) {
          return this.data[this.zero + e2];
        }, i.prototype.lastIndexOfSignature = function(e2) {
          for (var t2 = e2.charCodeAt(0), r2 = e2.charCodeAt(1), n2 = e2.charCodeAt(2), i2 = e2.charCodeAt(3), s = this.length - 4; 0 <= s; --s)
            if (this.data[s] === t2 && this.data[s + 1] === r2 && this.data[s + 2] === n2 && this.data[s + 3] === i2)
              return s - this.zero;
          return -1;
        }, i.prototype.readAndCheckSignature = function(e2) {
          var t2 = e2.charCodeAt(0), r2 = e2.charCodeAt(1), n2 = e2.charCodeAt(2), i2 = e2.charCodeAt(3), s = this.readData(4);
          return t2 === s[0] && r2 === s[1] && n2 === s[2] && i2 === s[3];
        }, i.prototype.readData = function(e2) {
          if (this.checkOffset(e2), 0 === e2)
            return [];
          var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);
          return this.index += e2, t2;
        }, t.exports = i;
      }, { "../utils": 32, "./DataReader": 18 }], 18: [function(e, t, r) {
        "use strict";
        var n = e("../utils");
        function i(e2) {
          this.data = e2, this.length = e2.length, this.index = 0, this.zero = 0;
        }
        i.prototype = { checkOffset: function(e2) {
          this.checkIndex(this.index + e2);
        }, checkIndex: function(e2) {
          if (this.length < this.zero + e2 || e2 < 0)
            throw new Error("End of data reached (data length = " + this.length + ", asked index = " + e2 + "). Corrupted zip ?");
        }, setIndex: function(e2) {
          this.checkIndex(e2), this.index = e2;
        }, skip: function(e2) {
          this.setIndex(this.index + e2);
        }, byteAt: function() {
        }, readInt: function(e2) {
          var t2, r2 = 0;
          for (this.checkOffset(e2), t2 = this.index + e2 - 1; t2 >= this.index; t2--)
            r2 = (r2 << 8) + this.byteAt(t2);
          return this.index += e2, r2;
        }, readString: function(e2) {
          return n.transformTo("string", this.readData(e2));
        }, readData: function() {
        }, lastIndexOfSignature: function() {
        }, readAndCheckSignature: function() {
        }, readDate: function() {
          var e2 = this.readInt(4);
          return new Date(Date.UTC(1980 + (e2 >> 25 & 127), (e2 >> 21 & 15) - 1, e2 >> 16 & 31, e2 >> 11 & 31, e2 >> 5 & 63, (31 & e2) << 1));
        } }, t.exports = i;
      }, { "../utils": 32 }], 19: [function(e, t, r) {
        "use strict";
        var n = e("./Uint8ArrayReader");
        function i(e2) {
          n.call(this, e2);
        }
        e("../utils").inherits(i, n), i.prototype.readData = function(e2) {
          this.checkOffset(e2);
          var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);
          return this.index += e2, t2;
        }, t.exports = i;
      }, { "../utils": 32, "./Uint8ArrayReader": 21 }], 20: [function(e, t, r) {
        "use strict";
        var n = e("./DataReader");
        function i(e2) {
          n.call(this, e2);
        }
        e("../utils").inherits(i, n), i.prototype.byteAt = function(e2) {
          return this.data.charCodeAt(this.zero + e2);
        }, i.prototype.lastIndexOfSignature = function(e2) {
          return this.data.lastIndexOf(e2) - this.zero;
        }, i.prototype.readAndCheckSignature = function(e2) {
          return e2 === this.readData(4);
        }, i.prototype.readData = function(e2) {
          this.checkOffset(e2);
          var t2 = this.data.slice(this.zero + this.index, this.zero + this.index + e2);
          return this.index += e2, t2;
        }, t.exports = i;
      }, { "../utils": 32, "./DataReader": 18 }], 21: [function(e, t, r) {
        "use strict";
        var n = e("./ArrayReader");
        function i(e2) {
          n.call(this, e2);
        }
        e("../utils").inherits(i, n), i.prototype.readData = function(e2) {
          if (this.checkOffset(e2), 0 === e2)
            return new Uint8Array(0);
          var t2 = this.data.subarray(this.zero + this.index, this.zero + this.index + e2);
          return this.index += e2, t2;
        }, t.exports = i;
      }, { "../utils": 32, "./ArrayReader": 17 }], 22: [function(e, t, r) {
        "use strict";
        var n = e("../utils"), i = e("../support"), s = e("./ArrayReader"), a = e("./StringReader"), o = e("./NodeBufferReader"), h = e("./Uint8ArrayReader");
        t.exports = function(e2) {
          var t2 = n.getTypeOf(e2);
          return n.checkSupport(t2), "string" !== t2 || i.uint8array ? "nodebuffer" === t2 ? new o(e2) : i.uint8array ? new h(n.transformTo("uint8array", e2)) : new s(n.transformTo("array", e2)) : new a(e2);
        };
      }, { "../support": 30, "../utils": 32, "./ArrayReader": 17, "./NodeBufferReader": 19, "./StringReader": 20, "./Uint8ArrayReader": 21 }], 23: [function(e, t, r) {
        "use strict";
        r.LOCAL_FILE_HEADER = "PK", r.CENTRAL_FILE_HEADER = "PK", r.CENTRAL_DIRECTORY_END = "PK", r.ZIP64_CENTRAL_DIRECTORY_LOCATOR = "PK\x07", r.ZIP64_CENTRAL_DIRECTORY_END = "PK", r.DATA_DESCRIPTOR = "PK\x07\b";
      }, {}], 24: [function(e, t, r) {
        "use strict";
        var n = e("./GenericWorker"), i = e("../utils");
        function s(e2) {
          n.call(this, "ConvertWorker to " + e2), this.destType = e2;
        }
        i.inherits(s, n), s.prototype.processChunk = function(e2) {
          this.push({ data: i.transformTo(this.destType, e2.data), meta: e2.meta });
        }, t.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 25: [function(e, t, r) {
        "use strict";
        var n = e("./GenericWorker"), i = e("../crc32");
        function s() {
          n.call(this, "Crc32Probe"), this.withStreamInfo("crc32", 0);
        }
        e("../utils").inherits(s, n), s.prototype.processChunk = function(e2) {
          this.streamInfo.crc32 = i(e2.data, this.streamInfo.crc32 || 0), this.push(e2);
        }, t.exports = s;
      }, { "../crc32": 4, "../utils": 32, "./GenericWorker": 28 }], 26: [function(e, t, r) {
        "use strict";
        var n = e("../utils"), i = e("./GenericWorker");
        function s(e2) {
          i.call(this, "DataLengthProbe for " + e2), this.propName = e2, this.withStreamInfo(e2, 0);
        }
        n.inherits(s, i), s.prototype.processChunk = function(e2) {
          if (e2) {
            var t2 = this.streamInfo[this.propName] || 0;
            this.streamInfo[this.propName] = t2 + e2.data.length;
          }
          i.prototype.processChunk.call(this, e2);
        }, t.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 27: [function(e, t, r) {
        "use strict";
        var n = e("../utils"), i = e("./GenericWorker");
        function s(e2) {
          i.call(this, "DataWorker");
          var t2 = this;
          this.dataIsReady = false, this.index = 0, this.max = 0, this.data = null, this.type = "", this._tickScheduled = false, e2.then(function(e3) {
            t2.dataIsReady = true, t2.data = e3, t2.max = e3 && e3.length || 0, t2.type = n.getTypeOf(e3), t2.isPaused || t2._tickAndRepeat();
          }, function(e3) {
            t2.error(e3);
          });
        }
        n.inherits(s, i), s.prototype.cleanUp = function() {
          i.prototype.cleanUp.call(this), this.data = null;
        }, s.prototype.resume = function() {
          return !!i.prototype.resume.call(this) && (!this._tickScheduled && this.dataIsReady && (this._tickScheduled = true, n.delay(this._tickAndRepeat, [], this)), true);
        }, s.prototype._tickAndRepeat = function() {
          this._tickScheduled = false, this.isPaused || this.isFinished || (this._tick(), this.isFinished || (n.delay(this._tickAndRepeat, [], this), this._tickScheduled = true));
        }, s.prototype._tick = function() {
          if (this.isPaused || this.isFinished)
            return false;
          var e2 = null, t2 = Math.min(this.max, this.index + 16384);
          if (this.index >= this.max)
            return this.end();
          switch (this.type) {
            case "string":
              e2 = this.data.substring(this.index, t2);
              break;
            case "uint8array":
              e2 = this.data.subarray(this.index, t2);
              break;
            case "array":
            case "nodebuffer":
              e2 = this.data.slice(this.index, t2);
          }
          return this.index = t2, this.push({ data: e2, meta: { percent: this.max ? this.index / this.max * 100 : 0 } });
        }, t.exports = s;
      }, { "../utils": 32, "./GenericWorker": 28 }], 28: [function(e, t, r) {
        "use strict";
        function n(e2) {
          this.name = e2 || "default", this.streamInfo = {}, this.generatedError = null, this.extraStreamInfo = {}, this.isPaused = true, this.isFinished = false, this.isLocked = false, this._listeners = { data: [], end: [], error: [] }, this.previous = null;
        }
        n.prototype = { push: function(e2) {
          this.emit("data", e2);
        }, end: function() {
          if (this.isFinished)
            return false;
          this.flush();
          try {
            this.emit("end"), this.cleanUp(), this.isFinished = true;
          } catch (e2) {
            this.emit("error", e2);
          }
          return true;
        }, error: function(e2) {
          return !this.isFinished && (this.isPaused ? this.generatedError = e2 : (this.isFinished = true, this.emit("error", e2), this.previous && this.previous.error(e2), this.cleanUp()), true);
        }, on: function(e2, t2) {
          return this._listeners[e2].push(t2), this;
        }, cleanUp: function() {
          this.streamInfo = this.generatedError = this.extraStreamInfo = null, this._listeners = [];
        }, emit: function(e2, t2) {
          if (this._listeners[e2])
            for (var r2 = 0; r2 < this._listeners[e2].length; r2++)
              this._listeners[e2][r2].call(this, t2);
        }, pipe: function(e2) {
          return e2.registerPrevious(this);
        }, registerPrevious: function(e2) {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.streamInfo = e2.streamInfo, this.mergeStreamInfo(), this.previous = e2;
          var t2 = this;
          return e2.on("data", function(e3) {
            t2.processChunk(e3);
          }), e2.on("end", function() {
            t2.end();
          }), e2.on("error", function(e3) {
            t2.error(e3);
          }), this;
        }, pause: function() {
          return !this.isPaused && !this.isFinished && (this.isPaused = true, this.previous && this.previous.pause(), true);
        }, resume: function() {
          if (!this.isPaused || this.isFinished)
            return false;
          var e2 = this.isPaused = false;
          return this.generatedError && (this.error(this.generatedError), e2 = true), this.previous && this.previous.resume(), !e2;
        }, flush: function() {
        }, processChunk: function(e2) {
          this.push(e2);
        }, withStreamInfo: function(e2, t2) {
          return this.extraStreamInfo[e2] = t2, this.mergeStreamInfo(), this;
        }, mergeStreamInfo: function() {
          for (var e2 in this.extraStreamInfo)
            Object.prototype.hasOwnProperty.call(this.extraStreamInfo, e2) && (this.streamInfo[e2] = this.extraStreamInfo[e2]);
        }, lock: function() {
          if (this.isLocked)
            throw new Error("The stream '" + this + "' has already been used.");
          this.isLocked = true, this.previous && this.previous.lock();
        }, toString: function() {
          var e2 = "Worker " + this.name;
          return this.previous ? this.previous + " -> " + e2 : e2;
        } }, t.exports = n;
      }, {}], 29: [function(e, t, r) {
        "use strict";
        var h = e("../utils"), i = e("./ConvertWorker"), s = e("./GenericWorker"), u = e("../base64"), n = e("../support"), a = e("../external"), o = null;
        if (n.nodestream)
          try {
            o = e("../nodejs/NodejsStreamOutputAdapter");
          } catch (e2) {
          }
        function l(e2, o2) {
          return new a.Promise(function(t2, r2) {
            var n2 = [], i2 = e2._internalType, s2 = e2._outputType, a2 = e2._mimeType;
            e2.on("data", function(e3, t3) {
              n2.push(e3), o2 && o2(t3);
            }).on("error", function(e3) {
              n2 = [], r2(e3);
            }).on("end", function() {
              try {
                var e3 = function(e4, t3, r3) {
                  switch (e4) {
                    case "blob":
                      return h.newBlob(h.transformTo("arraybuffer", t3), r3);
                    case "base64":
                      return u.encode(t3);
                    default:
                      return h.transformTo(e4, t3);
                  }
                }(s2, function(e4, t3) {
                  var r3, n3 = 0, i3 = null, s3 = 0;
                  for (r3 = 0; r3 < t3.length; r3++)
                    s3 += t3[r3].length;
                  switch (e4) {
                    case "string":
                      return t3.join("");
                    case "array":
                      return Array.prototype.concat.apply([], t3);
                    case "uint8array":
                      for (i3 = new Uint8Array(s3), r3 = 0; r3 < t3.length; r3++)
                        i3.set(t3[r3], n3), n3 += t3[r3].length;
                      return i3;
                    case "nodebuffer":
                      return Buffer.concat(t3);
                    default:
                      throw new Error("concat : unsupported type '" + e4 + "'");
                  }
                }(i2, n2), a2);
                t2(e3);
              } catch (e4) {
                r2(e4);
              }
              n2 = [];
            }).resume();
          });
        }
        function f(e2, t2, r2) {
          var n2 = t2;
          switch (t2) {
            case "blob":
            case "arraybuffer":
              n2 = "uint8array";
              break;
            case "base64":
              n2 = "string";
          }
          try {
            this._internalType = n2, this._outputType = t2, this._mimeType = r2, h.checkSupport(n2), this._worker = e2.pipe(new i(n2)), e2.lock();
          } catch (e3) {
            this._worker = new s("error"), this._worker.error(e3);
          }
        }
        f.prototype = { accumulate: function(e2) {
          return l(this, e2);
        }, on: function(e2, t2) {
          var r2 = this;
          return "data" === e2 ? this._worker.on(e2, function(e3) {
            t2.call(r2, e3.data, e3.meta);
          }) : this._worker.on(e2, function() {
            h.delay(t2, arguments, r2);
          }), this;
        }, resume: function() {
          return h.delay(this._worker.resume, [], this._worker), this;
        }, pause: function() {
          return this._worker.pause(), this;
        }, toNodejsStream: function(e2) {
          if (h.checkSupport("nodestream"), "nodebuffer" !== this._outputType)
            throw new Error(this._outputType + " is not supported by this method");
          return new o(this, { objectMode: "nodebuffer" !== this._outputType }, e2);
        } }, t.exports = f;
      }, { "../base64": 1, "../external": 6, "../nodejs/NodejsStreamOutputAdapter": 13, "../support": 30, "../utils": 32, "./ConvertWorker": 24, "./GenericWorker": 28 }], 30: [function(e, t, r) {
        "use strict";
        if (r.base64 = true, r.array = true, r.string = true, r.arraybuffer = "undefined" != typeof ArrayBuffer && "undefined" != typeof Uint8Array, r.nodebuffer = "undefined" != typeof Buffer, r.uint8array = "undefined" != typeof Uint8Array, "undefined" == typeof ArrayBuffer)
          r.blob = false;
        else {
          var n = new ArrayBuffer(0);
          try {
            r.blob = 0 === new Blob([n], { type: "application/zip" }).size;
          } catch (e2) {
            try {
              var i = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              i.append(n), r.blob = 0 === i.getBlob("application/zip").size;
            } catch (e3) {
              r.blob = false;
            }
          }
        }
        try {
          r.nodestream = !!e("readable-stream").Readable;
        } catch (e2) {
          r.nodestream = false;
        }
      }, { "readable-stream": 16 }], 31: [function(e, t, s) {
        "use strict";
        for (var o = e("./utils"), h = e("./support"), r = e("./nodejsUtils"), n = e("./stream/GenericWorker"), u = new Array(256), i = 0; i < 256; i++)
          u[i] = 252 <= i ? 6 : 248 <= i ? 5 : 240 <= i ? 4 : 224 <= i ? 3 : 192 <= i ? 2 : 1;
        u[254] = u[254] = 1;
        function a() {
          n.call(this, "utf-8 decode"), this.leftOver = null;
        }
        function l() {
          n.call(this, "utf-8 encode");
        }
        s.utf8encode = function(e2) {
          return h.nodebuffer ? r.newBufferFrom(e2, "utf-8") : function(e3) {
            var t2, r2, n2, i2, s2, a2 = e3.length, o2 = 0;
            for (i2 = 0; i2 < a2; i2++)
              55296 == (64512 & (r2 = e3.charCodeAt(i2))) && i2 + 1 < a2 && 56320 == (64512 & (n2 = e3.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), o2 += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;
            for (t2 = h.uint8array ? new Uint8Array(o2) : new Array(o2), i2 = s2 = 0; s2 < o2; i2++)
              55296 == (64512 & (r2 = e3.charCodeAt(i2))) && i2 + 1 < a2 && 56320 == (64512 & (n2 = e3.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), r2 < 128 ? t2[s2++] = r2 : (r2 < 2048 ? t2[s2++] = 192 | r2 >>> 6 : (r2 < 65536 ? t2[s2++] = 224 | r2 >>> 12 : (t2[s2++] = 240 | r2 >>> 18, t2[s2++] = 128 | r2 >>> 12 & 63), t2[s2++] = 128 | r2 >>> 6 & 63), t2[s2++] = 128 | 63 & r2);
            return t2;
          }(e2);
        }, s.utf8decode = function(e2) {
          return h.nodebuffer ? o.transformTo("nodebuffer", e2).toString("utf-8") : function(e3) {
            var t2, r2, n2, i2, s2 = e3.length, a2 = new Array(2 * s2);
            for (t2 = r2 = 0; t2 < s2; )
              if ((n2 = e3[t2++]) < 128)
                a2[r2++] = n2;
              else if (4 < (i2 = u[n2]))
                a2[r2++] = 65533, t2 += i2 - 1;
              else {
                for (n2 &= 2 === i2 ? 31 : 3 === i2 ? 15 : 7; 1 < i2 && t2 < s2; )
                  n2 = n2 << 6 | 63 & e3[t2++], i2--;
                1 < i2 ? a2[r2++] = 65533 : n2 < 65536 ? a2[r2++] = n2 : (n2 -= 65536, a2[r2++] = 55296 | n2 >> 10 & 1023, a2[r2++] = 56320 | 1023 & n2);
              }
            return a2.length !== r2 && (a2.subarray ? a2 = a2.subarray(0, r2) : a2.length = r2), o.applyFromCharCode(a2);
          }(e2 = o.transformTo(h.uint8array ? "uint8array" : "array", e2));
        }, o.inherits(a, n), a.prototype.processChunk = function(e2) {
          var t2 = o.transformTo(h.uint8array ? "uint8array" : "array", e2.data);
          if (this.leftOver && this.leftOver.length) {
            if (h.uint8array) {
              var r2 = t2;
              (t2 = new Uint8Array(r2.length + this.leftOver.length)).set(this.leftOver, 0), t2.set(r2, this.leftOver.length);
            } else
              t2 = this.leftOver.concat(t2);
            this.leftOver = null;
          }
          var n2 = function(e3, t3) {
            var r3;
            for ((t3 = t3 || e3.length) > e3.length && (t3 = e3.length), r3 = t3 - 1; 0 <= r3 && 128 == (192 & e3[r3]); )
              r3--;
            return r3 < 0 ? t3 : 0 === r3 ? t3 : r3 + u[e3[r3]] > t3 ? r3 : t3;
          }(t2), i2 = t2;
          n2 !== t2.length && (h.uint8array ? (i2 = t2.subarray(0, n2), this.leftOver = t2.subarray(n2, t2.length)) : (i2 = t2.slice(0, n2), this.leftOver = t2.slice(n2, t2.length))), this.push({ data: s.utf8decode(i2), meta: e2.meta });
        }, a.prototype.flush = function() {
          this.leftOver && this.leftOver.length && (this.push({ data: s.utf8decode(this.leftOver), meta: {} }), this.leftOver = null);
        }, s.Utf8DecodeWorker = a, o.inherits(l, n), l.prototype.processChunk = function(e2) {
          this.push({ data: s.utf8encode(e2.data), meta: e2.meta });
        }, s.Utf8EncodeWorker = l;
      }, { "./nodejsUtils": 14, "./stream/GenericWorker": 28, "./support": 30, "./utils": 32 }], 32: [function(e, t, a) {
        "use strict";
        var o = e("./support"), h = e("./base64"), r = e("./nodejsUtils"), u = e("./external");
        function n(e2) {
          return e2;
        }
        function l(e2, t2) {
          for (var r2 = 0; r2 < e2.length; ++r2)
            t2[r2] = 255 & e2.charCodeAt(r2);
          return t2;
        }
        e("setimmediate"), a.newBlob = function(t2, r2) {
          a.checkSupport("blob");
          try {
            return new Blob([t2], { type: r2 });
          } catch (e2) {
            try {
              var n2 = new (self.BlobBuilder || self.WebKitBlobBuilder || self.MozBlobBuilder || self.MSBlobBuilder)();
              return n2.append(t2), n2.getBlob(r2);
            } catch (e3) {
              throw new Error("Bug : can't construct the Blob.");
            }
          }
        };
        var i = { stringifyByChunk: function(e2, t2, r2) {
          var n2 = [], i2 = 0, s2 = e2.length;
          if (s2 <= r2)
            return String.fromCharCode.apply(null, e2);
          for (; i2 < s2; )
            "array" === t2 || "nodebuffer" === t2 ? n2.push(String.fromCharCode.apply(null, e2.slice(i2, Math.min(i2 + r2, s2)))) : n2.push(String.fromCharCode.apply(null, e2.subarray(i2, Math.min(i2 + r2, s2)))), i2 += r2;
          return n2.join("");
        }, stringifyByChar: function(e2) {
          for (var t2 = "", r2 = 0; r2 < e2.length; r2++)
            t2 += String.fromCharCode(e2[r2]);
          return t2;
        }, applyCanBeUsed: { uint8array: function() {
          try {
            return o.uint8array && 1 === String.fromCharCode.apply(null, new Uint8Array(1)).length;
          } catch (e2) {
            return false;
          }
        }(), nodebuffer: function() {
          try {
            return o.nodebuffer && 1 === String.fromCharCode.apply(null, r.allocBuffer(1)).length;
          } catch (e2) {
            return false;
          }
        }() } };
        function s(e2) {
          var t2 = 65536, r2 = a.getTypeOf(e2), n2 = true;
          if ("uint8array" === r2 ? n2 = i.applyCanBeUsed.uint8array : "nodebuffer" === r2 && (n2 = i.applyCanBeUsed.nodebuffer), n2)
            for (; 1 < t2; )
              try {
                return i.stringifyByChunk(e2, r2, t2);
              } catch (e3) {
                t2 = Math.floor(t2 / 2);
              }
          return i.stringifyByChar(e2);
        }
        function f(e2, t2) {
          for (var r2 = 0; r2 < e2.length; r2++)
            t2[r2] = e2[r2];
          return t2;
        }
        a.applyFromCharCode = s;
        var c = {};
        c.string = { string: n, array: function(e2) {
          return l(e2, new Array(e2.length));
        }, arraybuffer: function(e2) {
          return c.string.uint8array(e2).buffer;
        }, uint8array: function(e2) {
          return l(e2, new Uint8Array(e2.length));
        }, nodebuffer: function(e2) {
          return l(e2, r.allocBuffer(e2.length));
        } }, c.array = { string: s, array: n, arraybuffer: function(e2) {
          return new Uint8Array(e2).buffer;
        }, uint8array: function(e2) {
          return new Uint8Array(e2);
        }, nodebuffer: function(e2) {
          return r.newBufferFrom(e2);
        } }, c.arraybuffer = { string: function(e2) {
          return s(new Uint8Array(e2));
        }, array: function(e2) {
          return f(new Uint8Array(e2), new Array(e2.byteLength));
        }, arraybuffer: n, uint8array: function(e2) {
          return new Uint8Array(e2);
        }, nodebuffer: function(e2) {
          return r.newBufferFrom(new Uint8Array(e2));
        } }, c.uint8array = { string: s, array: function(e2) {
          return f(e2, new Array(e2.length));
        }, arraybuffer: function(e2) {
          return e2.buffer;
        }, uint8array: n, nodebuffer: function(e2) {
          return r.newBufferFrom(e2);
        } }, c.nodebuffer = { string: s, array: function(e2) {
          return f(e2, new Array(e2.length));
        }, arraybuffer: function(e2) {
          return c.nodebuffer.uint8array(e2).buffer;
        }, uint8array: function(e2) {
          return f(e2, new Uint8Array(e2.length));
        }, nodebuffer: n }, a.transformTo = function(e2, t2) {
          if (t2 = t2 || "", !e2)
            return t2;
          a.checkSupport(e2);
          var r2 = a.getTypeOf(t2);
          return c[r2][e2](t2);
        }, a.resolve = function(e2) {
          for (var t2 = e2.split("/"), r2 = [], n2 = 0; n2 < t2.length; n2++) {
            var i2 = t2[n2];
            "." === i2 || "" === i2 && 0 !== n2 && n2 !== t2.length - 1 || (".." === i2 ? r2.pop() : r2.push(i2));
          }
          return r2.join("/");
        }, a.getTypeOf = function(e2) {
          return "string" == typeof e2 ? "string" : "[object Array]" === Object.prototype.toString.call(e2) ? "array" : o.nodebuffer && r.isBuffer(e2) ? "nodebuffer" : o.uint8array && e2 instanceof Uint8Array ? "uint8array" : o.arraybuffer && e2 instanceof ArrayBuffer ? "arraybuffer" : void 0;
        }, a.checkSupport = function(e2) {
          if (!o[e2.toLowerCase()])
            throw new Error(e2 + " is not supported by this platform");
        }, a.MAX_VALUE_16BITS = 65535, a.MAX_VALUE_32BITS = -1, a.pretty = function(e2) {
          var t2, r2, n2 = "";
          for (r2 = 0; r2 < (e2 || "").length; r2++)
            n2 += "\\x" + ((t2 = e2.charCodeAt(r2)) < 16 ? "0" : "") + t2.toString(16).toUpperCase();
          return n2;
        }, a.delay = function(e2, t2, r2) {
          setImmediate(function() {
            e2.apply(r2 || null, t2 || []);
          });
        }, a.inherits = function(e2, t2) {
          function r2() {
          }
          r2.prototype = t2.prototype, e2.prototype = new r2();
        }, a.extend = function() {
          var e2, t2, r2 = {};
          for (e2 = 0; e2 < arguments.length; e2++)
            for (t2 in arguments[e2])
              Object.prototype.hasOwnProperty.call(arguments[e2], t2) && void 0 === r2[t2] && (r2[t2] = arguments[e2][t2]);
          return r2;
        }, a.prepareContent = function(r2, e2, n2, i2, s2) {
          return u.Promise.resolve(e2).then(function(n3) {
            return o.blob && (n3 instanceof Blob || -1 !== ["[object File]", "[object Blob]"].indexOf(Object.prototype.toString.call(n3))) && "undefined" != typeof FileReader ? new u.Promise(function(t2, r3) {
              var e3 = new FileReader();
              e3.onload = function(e4) {
                t2(e4.target.result);
              }, e3.onerror = function(e4) {
                r3(e4.target.error);
              }, e3.readAsArrayBuffer(n3);
            }) : n3;
          }).then(function(e3) {
            var t2 = a.getTypeOf(e3);
            return t2 ? ("arraybuffer" === t2 ? e3 = a.transformTo("uint8array", e3) : "string" === t2 && (s2 ? e3 = h.decode(e3) : n2 && true !== i2 && (e3 = function(e4) {
              return l(e4, o.uint8array ? new Uint8Array(e4.length) : new Array(e4.length));
            }(e3))), e3) : u.Promise.reject(new Error("Can't read the data of '" + r2 + "'. Is it in a supported JavaScript type (String, Blob, ArrayBuffer, etc) ?"));
          });
        };
      }, { "./base64": 1, "./external": 6, "./nodejsUtils": 14, "./support": 30, setimmediate: 54 }], 33: [function(e, t, r) {
        "use strict";
        var n = e("./reader/readerFor"), i = e("./utils"), s = e("./signature"), a = e("./zipEntry"), o = e("./support");
        function h(e2) {
          this.files = [], this.loadOptions = e2;
        }
        h.prototype = { checkSignature: function(e2) {
          if (!this.reader.readAndCheckSignature(e2)) {
            this.reader.index -= 4;
            var t2 = this.reader.readString(4);
            throw new Error("Corrupted zip or bug: unexpected signature (" + i.pretty(t2) + ", expected " + i.pretty(e2) + ")");
          }
        }, isSignature: function(e2, t2) {
          var r2 = this.reader.index;
          this.reader.setIndex(e2);
          var n2 = this.reader.readString(4) === t2;
          return this.reader.setIndex(r2), n2;
        }, readBlockEndOfCentral: function() {
          this.diskNumber = this.reader.readInt(2), this.diskWithCentralDirStart = this.reader.readInt(2), this.centralDirRecordsOnThisDisk = this.reader.readInt(2), this.centralDirRecords = this.reader.readInt(2), this.centralDirSize = this.reader.readInt(4), this.centralDirOffset = this.reader.readInt(4), this.zipCommentLength = this.reader.readInt(2);
          var e2 = this.reader.readData(this.zipCommentLength), t2 = o.uint8array ? "uint8array" : "array", r2 = i.transformTo(t2, e2);
          this.zipComment = this.loadOptions.decodeFileName(r2);
        }, readBlockZip64EndOfCentral: function() {
          this.zip64EndOfCentralSize = this.reader.readInt(8), this.reader.skip(4), this.diskNumber = this.reader.readInt(4), this.diskWithCentralDirStart = this.reader.readInt(4), this.centralDirRecordsOnThisDisk = this.reader.readInt(8), this.centralDirRecords = this.reader.readInt(8), this.centralDirSize = this.reader.readInt(8), this.centralDirOffset = this.reader.readInt(8), this.zip64ExtensibleData = {};
          for (var e2, t2, r2, n2 = this.zip64EndOfCentralSize - 44; 0 < n2; )
            e2 = this.reader.readInt(2), t2 = this.reader.readInt(4), r2 = this.reader.readData(t2), this.zip64ExtensibleData[e2] = { id: e2, length: t2, value: r2 };
        }, readBlockZip64EndOfCentralLocator: function() {
          if (this.diskWithZip64CentralDirStart = this.reader.readInt(4), this.relativeOffsetEndOfZip64CentralDir = this.reader.readInt(8), this.disksCount = this.reader.readInt(4), 1 < this.disksCount)
            throw new Error("Multi-volumes zip are not supported");
        }, readLocalFiles: function() {
          var e2, t2;
          for (e2 = 0; e2 < this.files.length; e2++)
            t2 = this.files[e2], this.reader.setIndex(t2.localHeaderOffset), this.checkSignature(s.LOCAL_FILE_HEADER), t2.readLocalPart(this.reader), t2.handleUTF8(), t2.processAttributes();
        }, readCentralDir: function() {
          var e2;
          for (this.reader.setIndex(this.centralDirOffset); this.reader.readAndCheckSignature(s.CENTRAL_FILE_HEADER); )
            (e2 = new a({ zip64: this.zip64 }, this.loadOptions)).readCentralPart(this.reader), this.files.push(e2);
          if (this.centralDirRecords !== this.files.length && 0 !== this.centralDirRecords && 0 === this.files.length)
            throw new Error("Corrupted zip or bug: expected " + this.centralDirRecords + " records in central dir, got " + this.files.length);
        }, readEndOfCentral: function() {
          var e2 = this.reader.lastIndexOfSignature(s.CENTRAL_DIRECTORY_END);
          if (e2 < 0)
            throw !this.isSignature(0, s.LOCAL_FILE_HEADER) ? new Error("Can't find end of central directory : is this a zip file ? If it is, see https://stuk.github.io/jszip/documentation/howto/read_zip.html") : new Error("Corrupted zip: can't find end of central directory");
          this.reader.setIndex(e2);
          var t2 = e2;
          if (this.checkSignature(s.CENTRAL_DIRECTORY_END), this.readBlockEndOfCentral(), this.diskNumber === i.MAX_VALUE_16BITS || this.diskWithCentralDirStart === i.MAX_VALUE_16BITS || this.centralDirRecordsOnThisDisk === i.MAX_VALUE_16BITS || this.centralDirRecords === i.MAX_VALUE_16BITS || this.centralDirSize === i.MAX_VALUE_32BITS || this.centralDirOffset === i.MAX_VALUE_32BITS) {
            if (this.zip64 = true, (e2 = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR)) < 0)
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory locator");
            if (this.reader.setIndex(e2), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_LOCATOR), this.readBlockZip64EndOfCentralLocator(), !this.isSignature(this.relativeOffsetEndOfZip64CentralDir, s.ZIP64_CENTRAL_DIRECTORY_END) && (this.relativeOffsetEndOfZip64CentralDir = this.reader.lastIndexOfSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.relativeOffsetEndOfZip64CentralDir < 0))
              throw new Error("Corrupted zip: can't find the ZIP64 end of central directory");
            this.reader.setIndex(this.relativeOffsetEndOfZip64CentralDir), this.checkSignature(s.ZIP64_CENTRAL_DIRECTORY_END), this.readBlockZip64EndOfCentral();
          }
          var r2 = this.centralDirOffset + this.centralDirSize;
          this.zip64 && (r2 += 20, r2 += 12 + this.zip64EndOfCentralSize);
          var n2 = t2 - r2;
          if (0 < n2)
            this.isSignature(t2, s.CENTRAL_FILE_HEADER) || (this.reader.zero = n2);
          else if (n2 < 0)
            throw new Error("Corrupted zip: missing " + Math.abs(n2) + " bytes.");
        }, prepareReader: function(e2) {
          this.reader = n(e2);
        }, load: function(e2) {
          this.prepareReader(e2), this.readEndOfCentral(), this.readCentralDir(), this.readLocalFiles();
        } }, t.exports = h;
      }, { "./reader/readerFor": 22, "./signature": 23, "./support": 30, "./utils": 32, "./zipEntry": 34 }], 34: [function(e, t, r) {
        "use strict";
        var n = e("./reader/readerFor"), s = e("./utils"), i = e("./compressedObject"), a = e("./crc32"), o = e("./utf8"), h = e("./compressions"), u = e("./support");
        function l(e2, t2) {
          this.options = e2, this.loadOptions = t2;
        }
        l.prototype = { isEncrypted: function() {
          return 1 == (1 & this.bitFlag);
        }, useUTF8: function() {
          return 2048 == (2048 & this.bitFlag);
        }, readLocalPart: function(e2) {
          var t2, r2;
          if (e2.skip(22), this.fileNameLength = e2.readInt(2), r2 = e2.readInt(2), this.fileName = e2.readData(this.fileNameLength), e2.skip(r2), -1 === this.compressedSize || -1 === this.uncompressedSize)
            throw new Error("Bug or corrupted zip : didn't get enough information from the central directory (compressedSize === -1 || uncompressedSize === -1)");
          if (null === (t2 = function(e3) {
            for (var t3 in h)
              if (Object.prototype.hasOwnProperty.call(h, t3) && h[t3].magic === e3)
                return h[t3];
            return null;
          }(this.compressionMethod)))
            throw new Error("Corrupted zip : compression " + s.pretty(this.compressionMethod) + " unknown (inner file : " + s.transformTo("string", this.fileName) + ")");
          this.decompressed = new i(this.compressedSize, this.uncompressedSize, this.crc32, t2, e2.readData(this.compressedSize));
        }, readCentralPart: function(e2) {
          this.versionMadeBy = e2.readInt(2), e2.skip(2), this.bitFlag = e2.readInt(2), this.compressionMethod = e2.readString(2), this.date = e2.readDate(), this.crc32 = e2.readInt(4), this.compressedSize = e2.readInt(4), this.uncompressedSize = e2.readInt(4);
          var t2 = e2.readInt(2);
          if (this.extraFieldsLength = e2.readInt(2), this.fileCommentLength = e2.readInt(2), this.diskNumberStart = e2.readInt(2), this.internalFileAttributes = e2.readInt(2), this.externalFileAttributes = e2.readInt(4), this.localHeaderOffset = e2.readInt(4), this.isEncrypted())
            throw new Error("Encrypted zip are not supported");
          e2.skip(t2), this.readExtraFields(e2), this.parseZIP64ExtraField(e2), this.fileComment = e2.readData(this.fileCommentLength);
        }, processAttributes: function() {
          this.unixPermissions = null, this.dosPermissions = null;
          var e2 = this.versionMadeBy >> 8;
          this.dir = !!(16 & this.externalFileAttributes), 0 == e2 && (this.dosPermissions = 63 & this.externalFileAttributes), 3 == e2 && (this.unixPermissions = this.externalFileAttributes >> 16 & 65535), this.dir || "/" !== this.fileNameStr.slice(-1) || (this.dir = true);
        }, parseZIP64ExtraField: function() {
          if (this.extraFields[1]) {
            var e2 = n(this.extraFields[1].value);
            this.uncompressedSize === s.MAX_VALUE_32BITS && (this.uncompressedSize = e2.readInt(8)), this.compressedSize === s.MAX_VALUE_32BITS && (this.compressedSize = e2.readInt(8)), this.localHeaderOffset === s.MAX_VALUE_32BITS && (this.localHeaderOffset = e2.readInt(8)), this.diskNumberStart === s.MAX_VALUE_32BITS && (this.diskNumberStart = e2.readInt(4));
          }
        }, readExtraFields: function(e2) {
          var t2, r2, n2, i2 = e2.index + this.extraFieldsLength;
          for (this.extraFields || (this.extraFields = {}); e2.index + 4 < i2; )
            t2 = e2.readInt(2), r2 = e2.readInt(2), n2 = e2.readData(r2), this.extraFields[t2] = { id: t2, length: r2, value: n2 };
          e2.setIndex(i2);
        }, handleUTF8: function() {
          var e2 = u.uint8array ? "uint8array" : "array";
          if (this.useUTF8())
            this.fileNameStr = o.utf8decode(this.fileName), this.fileCommentStr = o.utf8decode(this.fileComment);
          else {
            var t2 = this.findExtraFieldUnicodePath();
            if (null !== t2)
              this.fileNameStr = t2;
            else {
              var r2 = s.transformTo(e2, this.fileName);
              this.fileNameStr = this.loadOptions.decodeFileName(r2);
            }
            var n2 = this.findExtraFieldUnicodeComment();
            if (null !== n2)
              this.fileCommentStr = n2;
            else {
              var i2 = s.transformTo(e2, this.fileComment);
              this.fileCommentStr = this.loadOptions.decodeFileName(i2);
            }
          }
        }, findExtraFieldUnicodePath: function() {
          var e2 = this.extraFields[28789];
          if (e2) {
            var t2 = n(e2.value);
            return 1 !== t2.readInt(1) ? null : a(this.fileName) !== t2.readInt(4) ? null : o.utf8decode(t2.readData(e2.length - 5));
          }
          return null;
        }, findExtraFieldUnicodeComment: function() {
          var e2 = this.extraFields[25461];
          if (e2) {
            var t2 = n(e2.value);
            return 1 !== t2.readInt(1) ? null : a(this.fileComment) !== t2.readInt(4) ? null : o.utf8decode(t2.readData(e2.length - 5));
          }
          return null;
        } }, t.exports = l;
      }, { "./compressedObject": 2, "./compressions": 3, "./crc32": 4, "./reader/readerFor": 22, "./support": 30, "./utf8": 31, "./utils": 32 }], 35: [function(e, t, r) {
        "use strict";
        function n(e2, t2, r2) {
          this.name = e2, this.dir = r2.dir, this.date = r2.date, this.comment = r2.comment, this.unixPermissions = r2.unixPermissions, this.dosPermissions = r2.dosPermissions, this._data = t2, this._dataBinary = r2.binary, this.options = { compression: r2.compression, compressionOptions: r2.compressionOptions };
        }
        var s = e("./stream/StreamHelper"), i = e("./stream/DataWorker"), a = e("./utf8"), o = e("./compressedObject"), h = e("./stream/GenericWorker");
        n.prototype = { internalStream: function(e2) {
          var t2 = null, r2 = "string";
          try {
            if (!e2)
              throw new Error("No output type specified.");
            var n2 = "string" === (r2 = e2.toLowerCase()) || "text" === r2;
            "binarystring" !== r2 && "text" !== r2 || (r2 = "string"), t2 = this._decompressWorker();
            var i2 = !this._dataBinary;
            i2 && !n2 && (t2 = t2.pipe(new a.Utf8EncodeWorker())), !i2 && n2 && (t2 = t2.pipe(new a.Utf8DecodeWorker()));
          } catch (e3) {
            (t2 = new h("error")).error(e3);
          }
          return new s(t2, r2, "");
        }, async: function(e2, t2) {
          return this.internalStream(e2).accumulate(t2);
        }, nodeStream: function(e2, t2) {
          return this.internalStream(e2 || "nodebuffer").toNodejsStream(t2);
        }, _compressWorker: function(e2, t2) {
          if (this._data instanceof o && this._data.compression.magic === e2.magic)
            return this._data.getCompressedWorker();
          var r2 = this._decompressWorker();
          return this._dataBinary || (r2 = r2.pipe(new a.Utf8EncodeWorker())), o.createWorkerFrom(r2, e2, t2);
        }, _decompressWorker: function() {
          return this._data instanceof o ? this._data.getContentWorker() : this._data instanceof h ? this._data : new i(this._data);
        } };
        for (var u = ["asText", "asBinary", "asNodeBuffer", "asUint8Array", "asArrayBuffer"], l = function() {
          throw new Error("This method has been removed in JSZip 3.0, please check the upgrade guide.");
        }, f = 0; f < u.length; f++)
          n.prototype[u[f]] = l;
        t.exports = n;
      }, { "./compressedObject": 2, "./stream/DataWorker": 27, "./stream/GenericWorker": 28, "./stream/StreamHelper": 29, "./utf8": 31 }], 36: [function(e, l, t) {
        (function(t2) {
          "use strict";
          var r, n, e2 = t2.MutationObserver || t2.WebKitMutationObserver;
          if (e2) {
            var i = 0, s = new e2(u), a = t2.document.createTextNode("");
            s.observe(a, { characterData: true }), r = function() {
              a.data = i = ++i % 2;
            };
          } else if (t2.setImmediate || void 0 === t2.MessageChannel)
            r = "document" in t2 && "onreadystatechange" in t2.document.createElement("script") ? function() {
              var e3 = t2.document.createElement("script");
              e3.onreadystatechange = function() {
                u(), e3.onreadystatechange = null, e3.parentNode.removeChild(e3), e3 = null;
              }, t2.document.documentElement.appendChild(e3);
            } : function() {
              setTimeout(u, 0);
            };
          else {
            var o = new t2.MessageChannel();
            o.port1.onmessage = u, r = function() {
              o.port2.postMessage(0);
            };
          }
          var h = [];
          function u() {
            var e3, t3;
            n = true;
            for (var r2 = h.length; r2; ) {
              for (t3 = h, h = [], e3 = -1; ++e3 < r2; )
                t3[e3]();
              r2 = h.length;
            }
            n = false;
          }
          l.exports = function(e3) {
            1 !== h.push(e3) || n || r();
          };
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
      }, {}], 37: [function(e, t, r) {
        "use strict";
        var i = e("immediate");
        function u() {
        }
        var l = {}, s = ["REJECTED"], a = ["FULFILLED"], n = ["PENDING"];
        function o(e2) {
          if ("function" != typeof e2)
            throw new TypeError("resolver must be a function");
          this.state = n, this.queue = [], this.outcome = void 0, e2 !== u && d(this, e2);
        }
        function h(e2, t2, r2) {
          this.promise = e2, "function" == typeof t2 && (this.onFulfilled = t2, this.callFulfilled = this.otherCallFulfilled), "function" == typeof r2 && (this.onRejected = r2, this.callRejected = this.otherCallRejected);
        }
        function f(t2, r2, n2) {
          i(function() {
            var e2;
            try {
              e2 = r2(n2);
            } catch (e3) {
              return l.reject(t2, e3);
            }
            e2 === t2 ? l.reject(t2, new TypeError("Cannot resolve promise with itself")) : l.resolve(t2, e2);
          });
        }
        function c(e2) {
          var t2 = e2 && e2.then;
          if (e2 && ("object" == typeof e2 || "function" == typeof e2) && "function" == typeof t2)
            return function() {
              t2.apply(e2, arguments);
            };
        }
        function d(t2, e2) {
          var r2 = false;
          function n2(e3) {
            r2 || (r2 = true, l.reject(t2, e3));
          }
          function i2(e3) {
            r2 || (r2 = true, l.resolve(t2, e3));
          }
          var s2 = p(function() {
            e2(i2, n2);
          });
          "error" === s2.status && n2(s2.value);
        }
        function p(e2, t2) {
          var r2 = {};
          try {
            r2.value = e2(t2), r2.status = "success";
          } catch (e3) {
            r2.status = "error", r2.value = e3;
          }
          return r2;
        }
        (t.exports = o).prototype.finally = function(t2) {
          if ("function" != typeof t2)
            return this;
          var r2 = this.constructor;
          return this.then(function(e2) {
            return r2.resolve(t2()).then(function() {
              return e2;
            });
          }, function(e2) {
            return r2.resolve(t2()).then(function() {
              throw e2;
            });
          });
        }, o.prototype.catch = function(e2) {
          return this.then(null, e2);
        }, o.prototype.then = function(e2, t2) {
          if ("function" != typeof e2 && this.state === a || "function" != typeof t2 && this.state === s)
            return this;
          var r2 = new this.constructor(u);
          this.state !== n ? f(r2, this.state === a ? e2 : t2, this.outcome) : this.queue.push(new h(r2, e2, t2));
          return r2;
        }, h.prototype.callFulfilled = function(e2) {
          l.resolve(this.promise, e2);
        }, h.prototype.otherCallFulfilled = function(e2) {
          f(this.promise, this.onFulfilled, e2);
        }, h.prototype.callRejected = function(e2) {
          l.reject(this.promise, e2);
        }, h.prototype.otherCallRejected = function(e2) {
          f(this.promise, this.onRejected, e2);
        }, l.resolve = function(e2, t2) {
          var r2 = p(c, t2);
          if ("error" === r2.status)
            return l.reject(e2, r2.value);
          var n2 = r2.value;
          if (n2)
            d(e2, n2);
          else {
            e2.state = a, e2.outcome = t2;
            for (var i2 = -1, s2 = e2.queue.length; ++i2 < s2; )
              e2.queue[i2].callFulfilled(t2);
          }
          return e2;
        }, l.reject = function(e2, t2) {
          e2.state = s, e2.outcome = t2;
          for (var r2 = -1, n2 = e2.queue.length; ++r2 < n2; )
            e2.queue[r2].callRejected(t2);
          return e2;
        }, o.resolve = function(e2) {
          if (e2 instanceof this)
            return e2;
          return l.resolve(new this(u), e2);
        }, o.reject = function(e2) {
          var t2 = new this(u);
          return l.reject(t2, e2);
        }, o.all = function(e2) {
          var r2 = this;
          if ("[object Array]" !== Object.prototype.toString.call(e2))
            return this.reject(new TypeError("must be an array"));
          var n2 = e2.length, i2 = false;
          if (!n2)
            return this.resolve([]);
          var s2 = new Array(n2), a2 = 0, t2 = -1, o2 = new this(u);
          for (; ++t2 < n2; )
            h2(e2[t2], t2);
          return o2;
          function h2(e3, t3) {
            r2.resolve(e3).then(function(e4) {
              s2[t3] = e4, ++a2 !== n2 || i2 || (i2 = true, l.resolve(o2, s2));
            }, function(e4) {
              i2 || (i2 = true, l.reject(o2, e4));
            });
          }
        }, o.race = function(e2) {
          var t2 = this;
          if ("[object Array]" !== Object.prototype.toString.call(e2))
            return this.reject(new TypeError("must be an array"));
          var r2 = e2.length, n2 = false;
          if (!r2)
            return this.resolve([]);
          var i2 = -1, s2 = new this(u);
          for (; ++i2 < r2; )
            a2 = e2[i2], t2.resolve(a2).then(function(e3) {
              n2 || (n2 = true, l.resolve(s2, e3));
            }, function(e3) {
              n2 || (n2 = true, l.reject(s2, e3));
            });
          var a2;
          return s2;
        };
      }, { immediate: 36 }], 38: [function(e, t, r) {
        "use strict";
        var n = {};
        (0, e("./lib/utils/common").assign)(n, e("./lib/deflate"), e("./lib/inflate"), e("./lib/zlib/constants")), t.exports = n;
      }, { "./lib/deflate": 39, "./lib/inflate": 40, "./lib/utils/common": 41, "./lib/zlib/constants": 44 }], 39: [function(e, t, r) {
        "use strict";
        var a = e("./zlib/deflate"), o = e("./utils/common"), h = e("./utils/strings"), i = e("./zlib/messages"), s = e("./zlib/zstream"), u = Object.prototype.toString, l = 0, f = -1, c = 0, d = 8;
        function p(e2) {
          if (!(this instanceof p))
            return new p(e2);
          this.options = o.assign({ level: f, method: d, chunkSize: 16384, windowBits: 15, memLevel: 8, strategy: c, to: "" }, e2 || {});
          var t2 = this.options;
          t2.raw && 0 < t2.windowBits ? t2.windowBits = -t2.windowBits : t2.gzip && 0 < t2.windowBits && t2.windowBits < 16 && (t2.windowBits += 16), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new s(), this.strm.avail_out = 0;
          var r2 = a.deflateInit2(this.strm, t2.level, t2.method, t2.windowBits, t2.memLevel, t2.strategy);
          if (r2 !== l)
            throw new Error(i[r2]);
          if (t2.header && a.deflateSetHeader(this.strm, t2.header), t2.dictionary) {
            var n2;
            if (n2 = "string" == typeof t2.dictionary ? h.string2buf(t2.dictionary) : "[object ArrayBuffer]" === u.call(t2.dictionary) ? new Uint8Array(t2.dictionary) : t2.dictionary, (r2 = a.deflateSetDictionary(this.strm, n2)) !== l)
              throw new Error(i[r2]);
            this._dict_set = true;
          }
        }
        function n(e2, t2) {
          var r2 = new p(t2);
          if (r2.push(e2, true), r2.err)
            throw r2.msg || i[r2.err];
          return r2.result;
        }
        p.prototype.push = function(e2, t2) {
          var r2, n2, i2 = this.strm, s2 = this.options.chunkSize;
          if (this.ended)
            return false;
          n2 = t2 === ~~t2 ? t2 : true === t2 ? 4 : 0, "string" == typeof e2 ? i2.input = h.string2buf(e2) : "[object ArrayBuffer]" === u.call(e2) ? i2.input = new Uint8Array(e2) : i2.input = e2, i2.next_in = 0, i2.avail_in = i2.input.length;
          do {
            if (0 === i2.avail_out && (i2.output = new o.Buf8(s2), i2.next_out = 0, i2.avail_out = s2), 1 !== (r2 = a.deflate(i2, n2)) && r2 !== l)
              return this.onEnd(r2), !(this.ended = true);
            0 !== i2.avail_out && (0 !== i2.avail_in || 4 !== n2 && 2 !== n2) || ("string" === this.options.to ? this.onData(h.buf2binstring(o.shrinkBuf(i2.output, i2.next_out))) : this.onData(o.shrinkBuf(i2.output, i2.next_out)));
          } while ((0 < i2.avail_in || 0 === i2.avail_out) && 1 !== r2);
          return 4 === n2 ? (r2 = a.deflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === l) : 2 !== n2 || (this.onEnd(l), !(i2.avail_out = 0));
        }, p.prototype.onData = function(e2) {
          this.chunks.push(e2);
        }, p.prototype.onEnd = function(e2) {
          e2 === l && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = o.flattenChunks(this.chunks)), this.chunks = [], this.err = e2, this.msg = this.strm.msg;
        }, r.Deflate = p, r.deflate = n, r.deflateRaw = function(e2, t2) {
          return (t2 = t2 || {}).raw = true, n(e2, t2);
        }, r.gzip = function(e2, t2) {
          return (t2 = t2 || {}).gzip = true, n(e2, t2);
        };
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/deflate": 46, "./zlib/messages": 51, "./zlib/zstream": 53 }], 40: [function(e, t, r) {
        "use strict";
        var c = e("./zlib/inflate"), d = e("./utils/common"), p = e("./utils/strings"), m = e("./zlib/constants"), n = e("./zlib/messages"), i = e("./zlib/zstream"), s = e("./zlib/gzheader"), _ = Object.prototype.toString;
        function a(e2) {
          if (!(this instanceof a))
            return new a(e2);
          this.options = d.assign({ chunkSize: 16384, windowBits: 0, to: "" }, e2 || {});
          var t2 = this.options;
          t2.raw && 0 <= t2.windowBits && t2.windowBits < 16 && (t2.windowBits = -t2.windowBits, 0 === t2.windowBits && (t2.windowBits = -15)), !(0 <= t2.windowBits && t2.windowBits < 16) || e2 && e2.windowBits || (t2.windowBits += 32), 15 < t2.windowBits && t2.windowBits < 48 && 0 == (15 & t2.windowBits) && (t2.windowBits |= 15), this.err = 0, this.msg = "", this.ended = false, this.chunks = [], this.strm = new i(), this.strm.avail_out = 0;
          var r2 = c.inflateInit2(this.strm, t2.windowBits);
          if (r2 !== m.Z_OK)
            throw new Error(n[r2]);
          this.header = new s(), c.inflateGetHeader(this.strm, this.header);
        }
        function o(e2, t2) {
          var r2 = new a(t2);
          if (r2.push(e2, true), r2.err)
            throw r2.msg || n[r2.err];
          return r2.result;
        }
        a.prototype.push = function(e2, t2) {
          var r2, n2, i2, s2, a2, o2, h = this.strm, u = this.options.chunkSize, l = this.options.dictionary, f = false;
          if (this.ended)
            return false;
          n2 = t2 === ~~t2 ? t2 : true === t2 ? m.Z_FINISH : m.Z_NO_FLUSH, "string" == typeof e2 ? h.input = p.binstring2buf(e2) : "[object ArrayBuffer]" === _.call(e2) ? h.input = new Uint8Array(e2) : h.input = e2, h.next_in = 0, h.avail_in = h.input.length;
          do {
            if (0 === h.avail_out && (h.output = new d.Buf8(u), h.next_out = 0, h.avail_out = u), (r2 = c.inflate(h, m.Z_NO_FLUSH)) === m.Z_NEED_DICT && l && (o2 = "string" == typeof l ? p.string2buf(l) : "[object ArrayBuffer]" === _.call(l) ? new Uint8Array(l) : l, r2 = c.inflateSetDictionary(this.strm, o2)), r2 === m.Z_BUF_ERROR && true === f && (r2 = m.Z_OK, f = false), r2 !== m.Z_STREAM_END && r2 !== m.Z_OK)
              return this.onEnd(r2), !(this.ended = true);
            h.next_out && (0 !== h.avail_out && r2 !== m.Z_STREAM_END && (0 !== h.avail_in || n2 !== m.Z_FINISH && n2 !== m.Z_SYNC_FLUSH) || ("string" === this.options.to ? (i2 = p.utf8border(h.output, h.next_out), s2 = h.next_out - i2, a2 = p.buf2string(h.output, i2), h.next_out = s2, h.avail_out = u - s2, s2 && d.arraySet(h.output, h.output, i2, s2, 0), this.onData(a2)) : this.onData(d.shrinkBuf(h.output, h.next_out)))), 0 === h.avail_in && 0 === h.avail_out && (f = true);
          } while ((0 < h.avail_in || 0 === h.avail_out) && r2 !== m.Z_STREAM_END);
          return r2 === m.Z_STREAM_END && (n2 = m.Z_FINISH), n2 === m.Z_FINISH ? (r2 = c.inflateEnd(this.strm), this.onEnd(r2), this.ended = true, r2 === m.Z_OK) : n2 !== m.Z_SYNC_FLUSH || (this.onEnd(m.Z_OK), !(h.avail_out = 0));
        }, a.prototype.onData = function(e2) {
          this.chunks.push(e2);
        }, a.prototype.onEnd = function(e2) {
          e2 === m.Z_OK && ("string" === this.options.to ? this.result = this.chunks.join("") : this.result = d.flattenChunks(this.chunks)), this.chunks = [], this.err = e2, this.msg = this.strm.msg;
        }, r.Inflate = a, r.inflate = o, r.inflateRaw = function(e2, t2) {
          return (t2 = t2 || {}).raw = true, o(e2, t2);
        }, r.ungzip = o;
      }, { "./utils/common": 41, "./utils/strings": 42, "./zlib/constants": 44, "./zlib/gzheader": 47, "./zlib/inflate": 49, "./zlib/messages": 51, "./zlib/zstream": 53 }], 41: [function(e, t, r) {
        "use strict";
        var n = "undefined" != typeof Uint8Array && "undefined" != typeof Uint16Array && "undefined" != typeof Int32Array;
        r.assign = function(e2) {
          for (var t2 = Array.prototype.slice.call(arguments, 1); t2.length; ) {
            var r2 = t2.shift();
            if (r2) {
              if ("object" != typeof r2)
                throw new TypeError(r2 + "must be non-object");
              for (var n2 in r2)
                r2.hasOwnProperty(n2) && (e2[n2] = r2[n2]);
            }
          }
          return e2;
        }, r.shrinkBuf = function(e2, t2) {
          return e2.length === t2 ? e2 : e2.subarray ? e2.subarray(0, t2) : (e2.length = t2, e2);
        };
        var i = { arraySet: function(e2, t2, r2, n2, i2) {
          if (t2.subarray && e2.subarray)
            e2.set(t2.subarray(r2, r2 + n2), i2);
          else
            for (var s2 = 0; s2 < n2; s2++)
              e2[i2 + s2] = t2[r2 + s2];
        }, flattenChunks: function(e2) {
          var t2, r2, n2, i2, s2, a;
          for (t2 = n2 = 0, r2 = e2.length; t2 < r2; t2++)
            n2 += e2[t2].length;
          for (a = new Uint8Array(n2), t2 = i2 = 0, r2 = e2.length; t2 < r2; t2++)
            s2 = e2[t2], a.set(s2, i2), i2 += s2.length;
          return a;
        } }, s = { arraySet: function(e2, t2, r2, n2, i2) {
          for (var s2 = 0; s2 < n2; s2++)
            e2[i2 + s2] = t2[r2 + s2];
        }, flattenChunks: function(e2) {
          return [].concat.apply([], e2);
        } };
        r.setTyped = function(e2) {
          e2 ? (r.Buf8 = Uint8Array, r.Buf16 = Uint16Array, r.Buf32 = Int32Array, r.assign(r, i)) : (r.Buf8 = Array, r.Buf16 = Array, r.Buf32 = Array, r.assign(r, s));
        }, r.setTyped(n);
      }, {}], 42: [function(e, t, r) {
        "use strict";
        var h = e("./common"), i = true, s = true;
        try {
          String.fromCharCode.apply(null, [0]);
        } catch (e2) {
          i = false;
        }
        try {
          String.fromCharCode.apply(null, new Uint8Array(1));
        } catch (e2) {
          s = false;
        }
        for (var u = new h.Buf8(256), n = 0; n < 256; n++)
          u[n] = 252 <= n ? 6 : 248 <= n ? 5 : 240 <= n ? 4 : 224 <= n ? 3 : 192 <= n ? 2 : 1;
        function l(e2, t2) {
          if (t2 < 65537 && (e2.subarray && s || !e2.subarray && i))
            return String.fromCharCode.apply(null, h.shrinkBuf(e2, t2));
          for (var r2 = "", n2 = 0; n2 < t2; n2++)
            r2 += String.fromCharCode(e2[n2]);
          return r2;
        }
        u[254] = u[254] = 1, r.string2buf = function(e2) {
          var t2, r2, n2, i2, s2, a = e2.length, o = 0;
          for (i2 = 0; i2 < a; i2++)
            55296 == (64512 & (r2 = e2.charCodeAt(i2))) && i2 + 1 < a && 56320 == (64512 & (n2 = e2.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), o += r2 < 128 ? 1 : r2 < 2048 ? 2 : r2 < 65536 ? 3 : 4;
          for (t2 = new h.Buf8(o), i2 = s2 = 0; s2 < o; i2++)
            55296 == (64512 & (r2 = e2.charCodeAt(i2))) && i2 + 1 < a && 56320 == (64512 & (n2 = e2.charCodeAt(i2 + 1))) && (r2 = 65536 + (r2 - 55296 << 10) + (n2 - 56320), i2++), r2 < 128 ? t2[s2++] = r2 : (r2 < 2048 ? t2[s2++] = 192 | r2 >>> 6 : (r2 < 65536 ? t2[s2++] = 224 | r2 >>> 12 : (t2[s2++] = 240 | r2 >>> 18, t2[s2++] = 128 | r2 >>> 12 & 63), t2[s2++] = 128 | r2 >>> 6 & 63), t2[s2++] = 128 | 63 & r2);
          return t2;
        }, r.buf2binstring = function(e2) {
          return l(e2, e2.length);
        }, r.binstring2buf = function(e2) {
          for (var t2 = new h.Buf8(e2.length), r2 = 0, n2 = t2.length; r2 < n2; r2++)
            t2[r2] = e2.charCodeAt(r2);
          return t2;
        }, r.buf2string = function(e2, t2) {
          var r2, n2, i2, s2, a = t2 || e2.length, o = new Array(2 * a);
          for (r2 = n2 = 0; r2 < a; )
            if ((i2 = e2[r2++]) < 128)
              o[n2++] = i2;
            else if (4 < (s2 = u[i2]))
              o[n2++] = 65533, r2 += s2 - 1;
            else {
              for (i2 &= 2 === s2 ? 31 : 3 === s2 ? 15 : 7; 1 < s2 && r2 < a; )
                i2 = i2 << 6 | 63 & e2[r2++], s2--;
              1 < s2 ? o[n2++] = 65533 : i2 < 65536 ? o[n2++] = i2 : (i2 -= 65536, o[n2++] = 55296 | i2 >> 10 & 1023, o[n2++] = 56320 | 1023 & i2);
            }
          return l(o, n2);
        }, r.utf8border = function(e2, t2) {
          var r2;
          for ((t2 = t2 || e2.length) > e2.length && (t2 = e2.length), r2 = t2 - 1; 0 <= r2 && 128 == (192 & e2[r2]); )
            r2--;
          return r2 < 0 ? t2 : 0 === r2 ? t2 : r2 + u[e2[r2]] > t2 ? r2 : t2;
        };
      }, { "./common": 41 }], 43: [function(e, t, r) {
        "use strict";
        t.exports = function(e2, t2, r2, n) {
          for (var i = 65535 & e2 | 0, s = e2 >>> 16 & 65535 | 0, a = 0; 0 !== r2; ) {
            for (r2 -= a = 2e3 < r2 ? 2e3 : r2; s = s + (i = i + t2[n++] | 0) | 0, --a; )
              ;
            i %= 65521, s %= 65521;
          }
          return i | s << 16 | 0;
        };
      }, {}], 44: [function(e, t, r) {
        "use strict";
        t.exports = { Z_NO_FLUSH: 0, Z_PARTIAL_FLUSH: 1, Z_SYNC_FLUSH: 2, Z_FULL_FLUSH: 3, Z_FINISH: 4, Z_BLOCK: 5, Z_TREES: 6, Z_OK: 0, Z_STREAM_END: 1, Z_NEED_DICT: 2, Z_ERRNO: -1, Z_STREAM_ERROR: -2, Z_DATA_ERROR: -3, Z_BUF_ERROR: -5, Z_NO_COMPRESSION: 0, Z_BEST_SPEED: 1, Z_BEST_COMPRESSION: 9, Z_DEFAULT_COMPRESSION: -1, Z_FILTERED: 1, Z_HUFFMAN_ONLY: 2, Z_RLE: 3, Z_FIXED: 4, Z_DEFAULT_STRATEGY: 0, Z_BINARY: 0, Z_TEXT: 1, Z_UNKNOWN: 2, Z_DEFLATED: 8 };
      }, {}], 45: [function(e, t, r) {
        "use strict";
        var o = function() {
          for (var e2, t2 = [], r2 = 0; r2 < 256; r2++) {
            e2 = r2;
            for (var n = 0; n < 8; n++)
              e2 = 1 & e2 ? 3988292384 ^ e2 >>> 1 : e2 >>> 1;
            t2[r2] = e2;
          }
          return t2;
        }();
        t.exports = function(e2, t2, r2, n) {
          var i = o, s = n + r2;
          e2 ^= -1;
          for (var a = n; a < s; a++)
            e2 = e2 >>> 8 ^ i[255 & (e2 ^ t2[a])];
          return -1 ^ e2;
        };
      }, {}], 46: [function(e, t, r) {
        "use strict";
        var h, c = e("../utils/common"), u = e("./trees"), d = e("./adler32"), p = e("./crc32"), n = e("./messages"), l = 0, f = 4, m = 0, _ = -2, g = -1, b = 4, i = 2, v = 8, y = 9, s = 286, a = 30, o = 19, w = 2 * s + 1, k = 15, x = 3, S = 258, z = S + x + 1, C = 42, E = 113, A = 1, I = 2, O = 3, B = 4;
        function R(e2, t2) {
          return e2.msg = n[t2], t2;
        }
        function T(e2) {
          return (e2 << 1) - (4 < e2 ? 9 : 0);
        }
        function D(e2) {
          for (var t2 = e2.length; 0 <= --t2; )
            e2[t2] = 0;
        }
        function F(e2) {
          var t2 = e2.state, r2 = t2.pending;
          r2 > e2.avail_out && (r2 = e2.avail_out), 0 !== r2 && (c.arraySet(e2.output, t2.pending_buf, t2.pending_out, r2, e2.next_out), e2.next_out += r2, t2.pending_out += r2, e2.total_out += r2, e2.avail_out -= r2, t2.pending -= r2, 0 === t2.pending && (t2.pending_out = 0));
        }
        function N(e2, t2) {
          u._tr_flush_block(e2, 0 <= e2.block_start ? e2.block_start : -1, e2.strstart - e2.block_start, t2), e2.block_start = e2.strstart, F(e2.strm);
        }
        function U(e2, t2) {
          e2.pending_buf[e2.pending++] = t2;
        }
        function P(e2, t2) {
          e2.pending_buf[e2.pending++] = t2 >>> 8 & 255, e2.pending_buf[e2.pending++] = 255 & t2;
        }
        function L(e2, t2) {
          var r2, n2, i2 = e2.max_chain_length, s2 = e2.strstart, a2 = e2.prev_length, o2 = e2.nice_match, h2 = e2.strstart > e2.w_size - z ? e2.strstart - (e2.w_size - z) : 0, u2 = e2.window, l2 = e2.w_mask, f2 = e2.prev, c2 = e2.strstart + S, d2 = u2[s2 + a2 - 1], p2 = u2[s2 + a2];
          e2.prev_length >= e2.good_match && (i2 >>= 2), o2 > e2.lookahead && (o2 = e2.lookahead);
          do {
            if (u2[(r2 = t2) + a2] === p2 && u2[r2 + a2 - 1] === d2 && u2[r2] === u2[s2] && u2[++r2] === u2[s2 + 1]) {
              s2 += 2, r2++;
              do {
              } while (u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && u2[++s2] === u2[++r2] && s2 < c2);
              if (n2 = S - (c2 - s2), s2 = c2 - S, a2 < n2) {
                if (e2.match_start = t2, o2 <= (a2 = n2))
                  break;
                d2 = u2[s2 + a2 - 1], p2 = u2[s2 + a2];
              }
            }
          } while ((t2 = f2[t2 & l2]) > h2 && 0 != --i2);
          return a2 <= e2.lookahead ? a2 : e2.lookahead;
        }
        function j(e2) {
          var t2, r2, n2, i2, s2, a2, o2, h2, u2, l2, f2 = e2.w_size;
          do {
            if (i2 = e2.window_size - e2.lookahead - e2.strstart, e2.strstart >= f2 + (f2 - z)) {
              for (c.arraySet(e2.window, e2.window, f2, f2, 0), e2.match_start -= f2, e2.strstart -= f2, e2.block_start -= f2, t2 = r2 = e2.hash_size; n2 = e2.head[--t2], e2.head[t2] = f2 <= n2 ? n2 - f2 : 0, --r2; )
                ;
              for (t2 = r2 = f2; n2 = e2.prev[--t2], e2.prev[t2] = f2 <= n2 ? n2 - f2 : 0, --r2; )
                ;
              i2 += f2;
            }
            if (0 === e2.strm.avail_in)
              break;
            if (a2 = e2.strm, o2 = e2.window, h2 = e2.strstart + e2.lookahead, u2 = i2, l2 = void 0, l2 = a2.avail_in, u2 < l2 && (l2 = u2), r2 = 0 === l2 ? 0 : (a2.avail_in -= l2, c.arraySet(o2, a2.input, a2.next_in, l2, h2), 1 === a2.state.wrap ? a2.adler = d(a2.adler, o2, l2, h2) : 2 === a2.state.wrap && (a2.adler = p(a2.adler, o2, l2, h2)), a2.next_in += l2, a2.total_in += l2, l2), e2.lookahead += r2, e2.lookahead + e2.insert >= x)
              for (s2 = e2.strstart - e2.insert, e2.ins_h = e2.window[s2], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[s2 + 1]) & e2.hash_mask; e2.insert && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[s2 + x - 1]) & e2.hash_mask, e2.prev[s2 & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = s2, s2++, e2.insert--, !(e2.lookahead + e2.insert < x)); )
                ;
          } while (e2.lookahead < z && 0 !== e2.strm.avail_in);
        }
        function Z(e2, t2) {
          for (var r2, n2; ; ) {
            if (e2.lookahead < z) {
              if (j(e2), e2.lookahead < z && t2 === l)
                return A;
              if (0 === e2.lookahead)
                break;
            }
            if (r2 = 0, e2.lookahead >= x && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 !== r2 && e2.strstart - r2 <= e2.w_size - z && (e2.match_length = L(e2, r2)), e2.match_length >= x)
              if (n2 = u._tr_tally(e2, e2.strstart - e2.match_start, e2.match_length - x), e2.lookahead -= e2.match_length, e2.match_length <= e2.max_lazy_match && e2.lookahead >= x) {
                for (e2.match_length--; e2.strstart++, e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart, 0 != --e2.match_length; )
                  ;
                e2.strstart++;
              } else
                e2.strstart += e2.match_length, e2.match_length = 0, e2.ins_h = e2.window[e2.strstart], e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + 1]) & e2.hash_mask;
            else
              n2 = u._tr_tally(e2, 0, e2.window[e2.strstart]), e2.lookahead--, e2.strstart++;
            if (n2 && (N(e2, false), 0 === e2.strm.avail_out))
              return A;
          }
          return e2.insert = e2.strstart < x - 1 ? e2.strstart : x - 1, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : e2.last_lit && (N(e2, false), 0 === e2.strm.avail_out) ? A : I;
        }
        function W(e2, t2) {
          for (var r2, n2, i2; ; ) {
            if (e2.lookahead < z) {
              if (j(e2), e2.lookahead < z && t2 === l)
                return A;
              if (0 === e2.lookahead)
                break;
            }
            if (r2 = 0, e2.lookahead >= x && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), e2.prev_length = e2.match_length, e2.prev_match = e2.match_start, e2.match_length = x - 1, 0 !== r2 && e2.prev_length < e2.max_lazy_match && e2.strstart - r2 <= e2.w_size - z && (e2.match_length = L(e2, r2), e2.match_length <= 5 && (1 === e2.strategy || e2.match_length === x && 4096 < e2.strstart - e2.match_start) && (e2.match_length = x - 1)), e2.prev_length >= x && e2.match_length <= e2.prev_length) {
              for (i2 = e2.strstart + e2.lookahead - x, n2 = u._tr_tally(e2, e2.strstart - 1 - e2.prev_match, e2.prev_length - x), e2.lookahead -= e2.prev_length - 1, e2.prev_length -= 2; ++e2.strstart <= i2 && (e2.ins_h = (e2.ins_h << e2.hash_shift ^ e2.window[e2.strstart + x - 1]) & e2.hash_mask, r2 = e2.prev[e2.strstart & e2.w_mask] = e2.head[e2.ins_h], e2.head[e2.ins_h] = e2.strstart), 0 != --e2.prev_length; )
                ;
              if (e2.match_available = 0, e2.match_length = x - 1, e2.strstart++, n2 && (N(e2, false), 0 === e2.strm.avail_out))
                return A;
            } else if (e2.match_available) {
              if ((n2 = u._tr_tally(e2, 0, e2.window[e2.strstart - 1])) && N(e2, false), e2.strstart++, e2.lookahead--, 0 === e2.strm.avail_out)
                return A;
            } else
              e2.match_available = 1, e2.strstart++, e2.lookahead--;
          }
          return e2.match_available && (n2 = u._tr_tally(e2, 0, e2.window[e2.strstart - 1]), e2.match_available = 0), e2.insert = e2.strstart < x - 1 ? e2.strstart : x - 1, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : e2.last_lit && (N(e2, false), 0 === e2.strm.avail_out) ? A : I;
        }
        function M(e2, t2, r2, n2, i2) {
          this.good_length = e2, this.max_lazy = t2, this.nice_length = r2, this.max_chain = n2, this.func = i2;
        }
        function H() {
          this.strm = null, this.status = 0, this.pending_buf = null, this.pending_buf_size = 0, this.pending_out = 0, this.pending = 0, this.wrap = 0, this.gzhead = null, this.gzindex = 0, this.method = v, this.last_flush = -1, this.w_size = 0, this.w_bits = 0, this.w_mask = 0, this.window = null, this.window_size = 0, this.prev = null, this.head = null, this.ins_h = 0, this.hash_size = 0, this.hash_bits = 0, this.hash_mask = 0, this.hash_shift = 0, this.block_start = 0, this.match_length = 0, this.prev_match = 0, this.match_available = 0, this.strstart = 0, this.match_start = 0, this.lookahead = 0, this.prev_length = 0, this.max_chain_length = 0, this.max_lazy_match = 0, this.level = 0, this.strategy = 0, this.good_match = 0, this.nice_match = 0, this.dyn_ltree = new c.Buf16(2 * w), this.dyn_dtree = new c.Buf16(2 * (2 * a + 1)), this.bl_tree = new c.Buf16(2 * (2 * o + 1)), D(this.dyn_ltree), D(this.dyn_dtree), D(this.bl_tree), this.l_desc = null, this.d_desc = null, this.bl_desc = null, this.bl_count = new c.Buf16(k + 1), this.heap = new c.Buf16(2 * s + 1), D(this.heap), this.heap_len = 0, this.heap_max = 0, this.depth = new c.Buf16(2 * s + 1), D(this.depth), this.l_buf = 0, this.lit_bufsize = 0, this.last_lit = 0, this.d_buf = 0, this.opt_len = 0, this.static_len = 0, this.matches = 0, this.insert = 0, this.bi_buf = 0, this.bi_valid = 0;
        }
        function G(e2) {
          var t2;
          return e2 && e2.state ? (e2.total_in = e2.total_out = 0, e2.data_type = i, (t2 = e2.state).pending = 0, t2.pending_out = 0, t2.wrap < 0 && (t2.wrap = -t2.wrap), t2.status = t2.wrap ? C : E, e2.adler = 2 === t2.wrap ? 0 : 1, t2.last_flush = l, u._tr_init(t2), m) : R(e2, _);
        }
        function K(e2) {
          var t2 = G(e2);
          return t2 === m && function(e3) {
            e3.window_size = 2 * e3.w_size, D(e3.head), e3.max_lazy_match = h[e3.level].max_lazy, e3.good_match = h[e3.level].good_length, e3.nice_match = h[e3.level].nice_length, e3.max_chain_length = h[e3.level].max_chain, e3.strstart = 0, e3.block_start = 0, e3.lookahead = 0, e3.insert = 0, e3.match_length = e3.prev_length = x - 1, e3.match_available = 0, e3.ins_h = 0;
          }(e2.state), t2;
        }
        function Y(e2, t2, r2, n2, i2, s2) {
          if (!e2)
            return _;
          var a2 = 1;
          if (t2 === g && (t2 = 6), n2 < 0 ? (a2 = 0, n2 = -n2) : 15 < n2 && (a2 = 2, n2 -= 16), i2 < 1 || y < i2 || r2 !== v || n2 < 8 || 15 < n2 || t2 < 0 || 9 < t2 || s2 < 0 || b < s2)
            return R(e2, _);
          8 === n2 && (n2 = 9);
          var o2 = new H();
          return (e2.state = o2).strm = e2, o2.wrap = a2, o2.gzhead = null, o2.w_bits = n2, o2.w_size = 1 << o2.w_bits, o2.w_mask = o2.w_size - 1, o2.hash_bits = i2 + 7, o2.hash_size = 1 << o2.hash_bits, o2.hash_mask = o2.hash_size - 1, o2.hash_shift = ~~((o2.hash_bits + x - 1) / x), o2.window = new c.Buf8(2 * o2.w_size), o2.head = new c.Buf16(o2.hash_size), o2.prev = new c.Buf16(o2.w_size), o2.lit_bufsize = 1 << i2 + 6, o2.pending_buf_size = 4 * o2.lit_bufsize, o2.pending_buf = new c.Buf8(o2.pending_buf_size), o2.d_buf = 1 * o2.lit_bufsize, o2.l_buf = 3 * o2.lit_bufsize, o2.level = t2, o2.strategy = s2, o2.method = r2, K(e2);
        }
        h = [new M(0, 0, 0, 0, function(e2, t2) {
          var r2 = 65535;
          for (r2 > e2.pending_buf_size - 5 && (r2 = e2.pending_buf_size - 5); ; ) {
            if (e2.lookahead <= 1) {
              if (j(e2), 0 === e2.lookahead && t2 === l)
                return A;
              if (0 === e2.lookahead)
                break;
            }
            e2.strstart += e2.lookahead, e2.lookahead = 0;
            var n2 = e2.block_start + r2;
            if ((0 === e2.strstart || e2.strstart >= n2) && (e2.lookahead = e2.strstart - n2, e2.strstart = n2, N(e2, false), 0 === e2.strm.avail_out))
              return A;
            if (e2.strstart - e2.block_start >= e2.w_size - z && (N(e2, false), 0 === e2.strm.avail_out))
              return A;
          }
          return e2.insert = 0, t2 === f ? (N(e2, true), 0 === e2.strm.avail_out ? O : B) : (e2.strstart > e2.block_start && (N(e2, false), e2.strm.avail_out), A);
        }), new M(4, 4, 8, 4, Z), new M(4, 5, 16, 8, Z), new M(4, 6, 32, 32, Z), new M(4, 4, 16, 16, W), new M(8, 16, 32, 32, W), new M(8, 16, 128, 128, W), new M(8, 32, 128, 256, W), new M(32, 128, 258, 1024, W), new M(32, 258, 258, 4096, W)], r.deflateInit = function(e2, t2) {
          return Y(e2, t2, v, 15, 8, 0);
        }, r.deflateInit2 = Y, r.deflateReset = K, r.deflateResetKeep = G, r.deflateSetHeader = function(e2, t2) {
          return e2 && e2.state ? 2 !== e2.state.wrap ? _ : (e2.state.gzhead = t2, m) : _;
        }, r.deflate = function(e2, t2) {
          var r2, n2, i2, s2;
          if (!e2 || !e2.state || 5 < t2 || t2 < 0)
            return e2 ? R(e2, _) : _;
          if (n2 = e2.state, !e2.output || !e2.input && 0 !== e2.avail_in || 666 === n2.status && t2 !== f)
            return R(e2, 0 === e2.avail_out ? -5 : _);
          if (n2.strm = e2, r2 = n2.last_flush, n2.last_flush = t2, n2.status === C)
            if (2 === n2.wrap)
              e2.adler = 0, U(n2, 31), U(n2, 139), U(n2, 8), n2.gzhead ? (U(n2, (n2.gzhead.text ? 1 : 0) + (n2.gzhead.hcrc ? 2 : 0) + (n2.gzhead.extra ? 4 : 0) + (n2.gzhead.name ? 8 : 0) + (n2.gzhead.comment ? 16 : 0)), U(n2, 255 & n2.gzhead.time), U(n2, n2.gzhead.time >> 8 & 255), U(n2, n2.gzhead.time >> 16 & 255), U(n2, n2.gzhead.time >> 24 & 255), U(n2, 9 === n2.level ? 2 : 2 <= n2.strategy || n2.level < 2 ? 4 : 0), U(n2, 255 & n2.gzhead.os), n2.gzhead.extra && n2.gzhead.extra.length && (U(n2, 255 & n2.gzhead.extra.length), U(n2, n2.gzhead.extra.length >> 8 & 255)), n2.gzhead.hcrc && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending, 0)), n2.gzindex = 0, n2.status = 69) : (U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 0), U(n2, 9 === n2.level ? 2 : 2 <= n2.strategy || n2.level < 2 ? 4 : 0), U(n2, 3), n2.status = E);
            else {
              var a2 = v + (n2.w_bits - 8 << 4) << 8;
              a2 |= (2 <= n2.strategy || n2.level < 2 ? 0 : n2.level < 6 ? 1 : 6 === n2.level ? 2 : 3) << 6, 0 !== n2.strstart && (a2 |= 32), a2 += 31 - a2 % 31, n2.status = E, P(n2, a2), 0 !== n2.strstart && (P(n2, e2.adler >>> 16), P(n2, 65535 & e2.adler)), e2.adler = 1;
            }
          if (69 === n2.status)
            if (n2.gzhead.extra) {
              for (i2 = n2.pending; n2.gzindex < (65535 & n2.gzhead.extra.length) && (n2.pending !== n2.pending_buf_size || (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending !== n2.pending_buf_size)); )
                U(n2, 255 & n2.gzhead.extra[n2.gzindex]), n2.gzindex++;
              n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), n2.gzindex === n2.gzhead.extra.length && (n2.gzindex = 0, n2.status = 73);
            } else
              n2.status = 73;
          if (73 === n2.status)
            if (n2.gzhead.name) {
              i2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  s2 = 1;
                  break;
                }
                s2 = n2.gzindex < n2.gzhead.name.length ? 255 & n2.gzhead.name.charCodeAt(n2.gzindex++) : 0, U(n2, s2);
              } while (0 !== s2);
              n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === s2 && (n2.gzindex = 0, n2.status = 91);
            } else
              n2.status = 91;
          if (91 === n2.status)
            if (n2.gzhead.comment) {
              i2 = n2.pending;
              do {
                if (n2.pending === n2.pending_buf_size && (n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), F(e2), i2 = n2.pending, n2.pending === n2.pending_buf_size)) {
                  s2 = 1;
                  break;
                }
                s2 = n2.gzindex < n2.gzhead.comment.length ? 255 & n2.gzhead.comment.charCodeAt(n2.gzindex++) : 0, U(n2, s2);
              } while (0 !== s2);
              n2.gzhead.hcrc && n2.pending > i2 && (e2.adler = p(e2.adler, n2.pending_buf, n2.pending - i2, i2)), 0 === s2 && (n2.status = 103);
            } else
              n2.status = 103;
          if (103 === n2.status && (n2.gzhead.hcrc ? (n2.pending + 2 > n2.pending_buf_size && F(e2), n2.pending + 2 <= n2.pending_buf_size && (U(n2, 255 & e2.adler), U(n2, e2.adler >> 8 & 255), e2.adler = 0, n2.status = E)) : n2.status = E), 0 !== n2.pending) {
            if (F(e2), 0 === e2.avail_out)
              return n2.last_flush = -1, m;
          } else if (0 === e2.avail_in && T(t2) <= T(r2) && t2 !== f)
            return R(e2, -5);
          if (666 === n2.status && 0 !== e2.avail_in)
            return R(e2, -5);
          if (0 !== e2.avail_in || 0 !== n2.lookahead || t2 !== l && 666 !== n2.status) {
            var o2 = 2 === n2.strategy ? function(e3, t3) {
              for (var r3; ; ) {
                if (0 === e3.lookahead && (j(e3), 0 === e3.lookahead)) {
                  if (t3 === l)
                    return A;
                  break;
                }
                if (e3.match_length = 0, r3 = u._tr_tally(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++, r3 && (N(e3, false), 0 === e3.strm.avail_out))
                  return A;
              }
              return e3.insert = 0, t3 === f ? (N(e3, true), 0 === e3.strm.avail_out ? O : B) : e3.last_lit && (N(e3, false), 0 === e3.strm.avail_out) ? A : I;
            }(n2, t2) : 3 === n2.strategy ? function(e3, t3) {
              for (var r3, n3, i3, s3, a3 = e3.window; ; ) {
                if (e3.lookahead <= S) {
                  if (j(e3), e3.lookahead <= S && t3 === l)
                    return A;
                  if (0 === e3.lookahead)
                    break;
                }
                if (e3.match_length = 0, e3.lookahead >= x && 0 < e3.strstart && (n3 = a3[i3 = e3.strstart - 1]) === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3]) {
                  s3 = e3.strstart + S;
                  do {
                  } while (n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && n3 === a3[++i3] && i3 < s3);
                  e3.match_length = S - (s3 - i3), e3.match_length > e3.lookahead && (e3.match_length = e3.lookahead);
                }
                if (e3.match_length >= x ? (r3 = u._tr_tally(e3, 1, e3.match_length - x), e3.lookahead -= e3.match_length, e3.strstart += e3.match_length, e3.match_length = 0) : (r3 = u._tr_tally(e3, 0, e3.window[e3.strstart]), e3.lookahead--, e3.strstart++), r3 && (N(e3, false), 0 === e3.strm.avail_out))
                  return A;
              }
              return e3.insert = 0, t3 === f ? (N(e3, true), 0 === e3.strm.avail_out ? O : B) : e3.last_lit && (N(e3, false), 0 === e3.strm.avail_out) ? A : I;
            }(n2, t2) : h[n2.level].func(n2, t2);
            if (o2 !== O && o2 !== B || (n2.status = 666), o2 === A || o2 === O)
              return 0 === e2.avail_out && (n2.last_flush = -1), m;
            if (o2 === I && (1 === t2 ? u._tr_align(n2) : 5 !== t2 && (u._tr_stored_block(n2, 0, 0, false), 3 === t2 && (D(n2.head), 0 === n2.lookahead && (n2.strstart = 0, n2.block_start = 0, n2.insert = 0))), F(e2), 0 === e2.avail_out))
              return n2.last_flush = -1, m;
          }
          return t2 !== f ? m : n2.wrap <= 0 ? 1 : (2 === n2.wrap ? (U(n2, 255 & e2.adler), U(n2, e2.adler >> 8 & 255), U(n2, e2.adler >> 16 & 255), U(n2, e2.adler >> 24 & 255), U(n2, 255 & e2.total_in), U(n2, e2.total_in >> 8 & 255), U(n2, e2.total_in >> 16 & 255), U(n2, e2.total_in >> 24 & 255)) : (P(n2, e2.adler >>> 16), P(n2, 65535 & e2.adler)), F(e2), 0 < n2.wrap && (n2.wrap = -n2.wrap), 0 !== n2.pending ? m : 1);
        }, r.deflateEnd = function(e2) {
          var t2;
          return e2 && e2.state ? (t2 = e2.state.status) !== C && 69 !== t2 && 73 !== t2 && 91 !== t2 && 103 !== t2 && t2 !== E && 666 !== t2 ? R(e2, _) : (e2.state = null, t2 === E ? R(e2, -3) : m) : _;
        }, r.deflateSetDictionary = function(e2, t2) {
          var r2, n2, i2, s2, a2, o2, h2, u2, l2 = t2.length;
          if (!e2 || !e2.state)
            return _;
          if (2 === (s2 = (r2 = e2.state).wrap) || 1 === s2 && r2.status !== C || r2.lookahead)
            return _;
          for (1 === s2 && (e2.adler = d(e2.adler, t2, l2, 0)), r2.wrap = 0, l2 >= r2.w_size && (0 === s2 && (D(r2.head), r2.strstart = 0, r2.block_start = 0, r2.insert = 0), u2 = new c.Buf8(r2.w_size), c.arraySet(u2, t2, l2 - r2.w_size, r2.w_size, 0), t2 = u2, l2 = r2.w_size), a2 = e2.avail_in, o2 = e2.next_in, h2 = e2.input, e2.avail_in = l2, e2.next_in = 0, e2.input = t2, j(r2); r2.lookahead >= x; ) {
            for (n2 = r2.strstart, i2 = r2.lookahead - (x - 1); r2.ins_h = (r2.ins_h << r2.hash_shift ^ r2.window[n2 + x - 1]) & r2.hash_mask, r2.prev[n2 & r2.w_mask] = r2.head[r2.ins_h], r2.head[r2.ins_h] = n2, n2++, --i2; )
              ;
            r2.strstart = n2, r2.lookahead = x - 1, j(r2);
          }
          return r2.strstart += r2.lookahead, r2.block_start = r2.strstart, r2.insert = r2.lookahead, r2.lookahead = 0, r2.match_length = r2.prev_length = x - 1, r2.match_available = 0, e2.next_in = o2, e2.input = h2, e2.avail_in = a2, r2.wrap = s2, m;
        }, r.deflateInfo = "pako deflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./messages": 51, "./trees": 52 }], 47: [function(e, t, r) {
        "use strict";
        t.exports = function() {
          this.text = 0, this.time = 0, this.xflags = 0, this.os = 0, this.extra = null, this.extra_len = 0, this.name = "", this.comment = "", this.hcrc = 0, this.done = false;
        };
      }, {}], 48: [function(e, t, r) {
        "use strict";
        t.exports = function(e2, t2) {
          var r2, n, i, s, a, o, h, u, l, f, c, d, p, m, _, g, b, v, y, w, k, x, S, z, C;
          r2 = e2.state, n = e2.next_in, z = e2.input, i = n + (e2.avail_in - 5), s = e2.next_out, C = e2.output, a = s - (t2 - e2.avail_out), o = s + (e2.avail_out - 257), h = r2.dmax, u = r2.wsize, l = r2.whave, f = r2.wnext, c = r2.window, d = r2.hold, p = r2.bits, m = r2.lencode, _ = r2.distcode, g = (1 << r2.lenbits) - 1, b = (1 << r2.distbits) - 1;
          e:
            do {
              p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = m[d & g];
              t:
                for (; ; ) {
                  if (d >>>= y = v >>> 24, p -= y, 0 === (y = v >>> 16 & 255))
                    C[s++] = 65535 & v;
                  else {
                    if (!(16 & y)) {
                      if (0 == (64 & y)) {
                        v = m[(65535 & v) + (d & (1 << y) - 1)];
                        continue t;
                      }
                      if (32 & y) {
                        r2.mode = 12;
                        break e;
                      }
                      e2.msg = "invalid literal/length code", r2.mode = 30;
                      break e;
                    }
                    w = 65535 & v, (y &= 15) && (p < y && (d += z[n++] << p, p += 8), w += d & (1 << y) - 1, d >>>= y, p -= y), p < 15 && (d += z[n++] << p, p += 8, d += z[n++] << p, p += 8), v = _[d & b];
                    r:
                      for (; ; ) {
                        if (d >>>= y = v >>> 24, p -= y, !(16 & (y = v >>> 16 & 255))) {
                          if (0 == (64 & y)) {
                            v = _[(65535 & v) + (d & (1 << y) - 1)];
                            continue r;
                          }
                          e2.msg = "invalid distance code", r2.mode = 30;
                          break e;
                        }
                        if (k = 65535 & v, p < (y &= 15) && (d += z[n++] << p, (p += 8) < y && (d += z[n++] << p, p += 8)), h < (k += d & (1 << y) - 1)) {
                          e2.msg = "invalid distance too far back", r2.mode = 30;
                          break e;
                        }
                        if (d >>>= y, p -= y, (y = s - a) < k) {
                          if (l < (y = k - y) && r2.sane) {
                            e2.msg = "invalid distance too far back", r2.mode = 30;
                            break e;
                          }
                          if (S = c, (x = 0) === f) {
                            if (x += u - y, y < w) {
                              for (w -= y; C[s++] = c[x++], --y; )
                                ;
                              x = s - k, S = C;
                            }
                          } else if (f < y) {
                            if (x += u + f - y, (y -= f) < w) {
                              for (w -= y; C[s++] = c[x++], --y; )
                                ;
                              if (x = 0, f < w) {
                                for (w -= y = f; C[s++] = c[x++], --y; )
                                  ;
                                x = s - k, S = C;
                              }
                            }
                          } else if (x += f - y, y < w) {
                            for (w -= y; C[s++] = c[x++], --y; )
                              ;
                            x = s - k, S = C;
                          }
                          for (; 2 < w; )
                            C[s++] = S[x++], C[s++] = S[x++], C[s++] = S[x++], w -= 3;
                          w && (C[s++] = S[x++], 1 < w && (C[s++] = S[x++]));
                        } else {
                          for (x = s - k; C[s++] = C[x++], C[s++] = C[x++], C[s++] = C[x++], 2 < (w -= 3); )
                            ;
                          w && (C[s++] = C[x++], 1 < w && (C[s++] = C[x++]));
                        }
                        break;
                      }
                  }
                  break;
                }
            } while (n < i && s < o);
          n -= w = p >> 3, d &= (1 << (p -= w << 3)) - 1, e2.next_in = n, e2.next_out = s, e2.avail_in = n < i ? i - n + 5 : 5 - (n - i), e2.avail_out = s < o ? o - s + 257 : 257 - (s - o), r2.hold = d, r2.bits = p;
        };
      }, {}], 49: [function(e, t, r) {
        "use strict";
        var I = e("../utils/common"), O = e("./adler32"), B = e("./crc32"), R = e("./inffast"), T = e("./inftrees"), D = 1, F = 2, N = 0, U = -2, P = 1, n = 852, i = 592;
        function L(e2) {
          return (e2 >>> 24 & 255) + (e2 >>> 8 & 65280) + ((65280 & e2) << 8) + ((255 & e2) << 24);
        }
        function s() {
          this.mode = 0, this.last = false, this.wrap = 0, this.havedict = false, this.flags = 0, this.dmax = 0, this.check = 0, this.total = 0, this.head = null, this.wbits = 0, this.wsize = 0, this.whave = 0, this.wnext = 0, this.window = null, this.hold = 0, this.bits = 0, this.length = 0, this.offset = 0, this.extra = 0, this.lencode = null, this.distcode = null, this.lenbits = 0, this.distbits = 0, this.ncode = 0, this.nlen = 0, this.ndist = 0, this.have = 0, this.next = null, this.lens = new I.Buf16(320), this.work = new I.Buf16(288), this.lendyn = null, this.distdyn = null, this.sane = 0, this.back = 0, this.was = 0;
        }
        function a(e2) {
          var t2;
          return e2 && e2.state ? (t2 = e2.state, e2.total_in = e2.total_out = t2.total = 0, e2.msg = "", t2.wrap && (e2.adler = 1 & t2.wrap), t2.mode = P, t2.last = 0, t2.havedict = 0, t2.dmax = 32768, t2.head = null, t2.hold = 0, t2.bits = 0, t2.lencode = t2.lendyn = new I.Buf32(n), t2.distcode = t2.distdyn = new I.Buf32(i), t2.sane = 1, t2.back = -1, N) : U;
        }
        function o(e2) {
          var t2;
          return e2 && e2.state ? ((t2 = e2.state).wsize = 0, t2.whave = 0, t2.wnext = 0, a(e2)) : U;
        }
        function h(e2, t2) {
          var r2, n2;
          return e2 && e2.state ? (n2 = e2.state, t2 < 0 ? (r2 = 0, t2 = -t2) : (r2 = 1 + (t2 >> 4), t2 < 48 && (t2 &= 15)), t2 && (t2 < 8 || 15 < t2) ? U : (null !== n2.window && n2.wbits !== t2 && (n2.window = null), n2.wrap = r2, n2.wbits = t2, o(e2))) : U;
        }
        function u(e2, t2) {
          var r2, n2;
          return e2 ? (n2 = new s(), (e2.state = n2).window = null, (r2 = h(e2, t2)) !== N && (e2.state = null), r2) : U;
        }
        var l, f, c = true;
        function j(e2) {
          if (c) {
            var t2;
            for (l = new I.Buf32(512), f = new I.Buf32(32), t2 = 0; t2 < 144; )
              e2.lens[t2++] = 8;
            for (; t2 < 256; )
              e2.lens[t2++] = 9;
            for (; t2 < 280; )
              e2.lens[t2++] = 7;
            for (; t2 < 288; )
              e2.lens[t2++] = 8;
            for (T(D, e2.lens, 0, 288, l, 0, e2.work, { bits: 9 }), t2 = 0; t2 < 32; )
              e2.lens[t2++] = 5;
            T(F, e2.lens, 0, 32, f, 0, e2.work, { bits: 5 }), c = false;
          }
          e2.lencode = l, e2.lenbits = 9, e2.distcode = f, e2.distbits = 5;
        }
        function Z(e2, t2, r2, n2) {
          var i2, s2 = e2.state;
          return null === s2.window && (s2.wsize = 1 << s2.wbits, s2.wnext = 0, s2.whave = 0, s2.window = new I.Buf8(s2.wsize)), n2 >= s2.wsize ? (I.arraySet(s2.window, t2, r2 - s2.wsize, s2.wsize, 0), s2.wnext = 0, s2.whave = s2.wsize) : (n2 < (i2 = s2.wsize - s2.wnext) && (i2 = n2), I.arraySet(s2.window, t2, r2 - n2, i2, s2.wnext), (n2 -= i2) ? (I.arraySet(s2.window, t2, r2 - n2, n2, 0), s2.wnext = n2, s2.whave = s2.wsize) : (s2.wnext += i2, s2.wnext === s2.wsize && (s2.wnext = 0), s2.whave < s2.wsize && (s2.whave += i2))), 0;
        }
        r.inflateReset = o, r.inflateReset2 = h, r.inflateResetKeep = a, r.inflateInit = function(e2) {
          return u(e2, 15);
        }, r.inflateInit2 = u, r.inflate = function(e2, t2) {
          var r2, n2, i2, s2, a2, o2, h2, u2, l2, f2, c2, d, p, m, _, g, b, v, y, w, k, x, S, z, C = 0, E = new I.Buf8(4), A = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15];
          if (!e2 || !e2.state || !e2.output || !e2.input && 0 !== e2.avail_in)
            return U;
          12 === (r2 = e2.state).mode && (r2.mode = 13), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, s2 = e2.next_in, n2 = e2.input, o2 = e2.avail_in, u2 = r2.hold, l2 = r2.bits, f2 = o2, c2 = h2, x = N;
          e:
            for (; ; )
              switch (r2.mode) {
                case P:
                  if (0 === r2.wrap) {
                    r2.mode = 13;
                    break;
                  }
                  for (; l2 < 16; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if (2 & r2.wrap && 35615 === u2) {
                    E[r2.check = 0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0), l2 = u2 = 0, r2.mode = 2;
                    break;
                  }
                  if (r2.flags = 0, r2.head && (r2.head.done = false), !(1 & r2.wrap) || (((255 & u2) << 8) + (u2 >> 8)) % 31) {
                    e2.msg = "incorrect header check", r2.mode = 30;
                    break;
                  }
                  if (8 != (15 & u2)) {
                    e2.msg = "unknown compression method", r2.mode = 30;
                    break;
                  }
                  if (l2 -= 4, k = 8 + (15 & (u2 >>>= 4)), 0 === r2.wbits)
                    r2.wbits = k;
                  else if (k > r2.wbits) {
                    e2.msg = "invalid window size", r2.mode = 30;
                    break;
                  }
                  r2.dmax = 1 << k, e2.adler = r2.check = 1, r2.mode = 512 & u2 ? 10 : 12, l2 = u2 = 0;
                  break;
                case 2:
                  for (; l2 < 16; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if (r2.flags = u2, 8 != (255 & r2.flags)) {
                    e2.msg = "unknown compression method", r2.mode = 30;
                    break;
                  }
                  if (57344 & r2.flags) {
                    e2.msg = "unknown header flags set", r2.mode = 30;
                    break;
                  }
                  r2.head && (r2.head.text = u2 >> 8 & 1), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0, r2.mode = 3;
                case 3:
                  for (; l2 < 32; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  r2.head && (r2.head.time = u2), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, E[2] = u2 >>> 16 & 255, E[3] = u2 >>> 24 & 255, r2.check = B(r2.check, E, 4, 0)), l2 = u2 = 0, r2.mode = 4;
                case 4:
                  for (; l2 < 16; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  r2.head && (r2.head.xflags = 255 & u2, r2.head.os = u2 >> 8), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0, r2.mode = 5;
                case 5:
                  if (1024 & r2.flags) {
                    for (; l2 < 16; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    r2.length = u2, r2.head && (r2.head.extra_len = u2), 512 & r2.flags && (E[0] = 255 & u2, E[1] = u2 >>> 8 & 255, r2.check = B(r2.check, E, 2, 0)), l2 = u2 = 0;
                  } else
                    r2.head && (r2.head.extra = null);
                  r2.mode = 6;
                case 6:
                  if (1024 & r2.flags && (o2 < (d = r2.length) && (d = o2), d && (r2.head && (k = r2.head.extra_len - r2.length, r2.head.extra || (r2.head.extra = new Array(r2.head.extra_len)), I.arraySet(r2.head.extra, n2, s2, d, k)), 512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, r2.length -= d), r2.length))
                    break e;
                  r2.length = 0, r2.mode = 7;
                case 7:
                  if (2048 & r2.flags) {
                    if (0 === o2)
                      break e;
                    for (d = 0; k = n2[s2 + d++], r2.head && k && r2.length < 65536 && (r2.head.name += String.fromCharCode(k)), k && d < o2; )
                      ;
                    if (512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, k)
                      break e;
                  } else
                    r2.head && (r2.head.name = null);
                  r2.length = 0, r2.mode = 8;
                case 8:
                  if (4096 & r2.flags) {
                    if (0 === o2)
                      break e;
                    for (d = 0; k = n2[s2 + d++], r2.head && k && r2.length < 65536 && (r2.head.comment += String.fromCharCode(k)), k && d < o2; )
                      ;
                    if (512 & r2.flags && (r2.check = B(r2.check, n2, d, s2)), o2 -= d, s2 += d, k)
                      break e;
                  } else
                    r2.head && (r2.head.comment = null);
                  r2.mode = 9;
                case 9:
                  if (512 & r2.flags) {
                    for (; l2 < 16; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    if (u2 !== (65535 & r2.check)) {
                      e2.msg = "header crc mismatch", r2.mode = 30;
                      break;
                    }
                    l2 = u2 = 0;
                  }
                  r2.head && (r2.head.hcrc = r2.flags >> 9 & 1, r2.head.done = true), e2.adler = r2.check = 0, r2.mode = 12;
                  break;
                case 10:
                  for (; l2 < 32; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  e2.adler = r2.check = L(u2), l2 = u2 = 0, r2.mode = 11;
                case 11:
                  if (0 === r2.havedict)
                    return e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, 2;
                  e2.adler = r2.check = 1, r2.mode = 12;
                case 12:
                  if (5 === t2 || 6 === t2)
                    break e;
                case 13:
                  if (r2.last) {
                    u2 >>>= 7 & l2, l2 -= 7 & l2, r2.mode = 27;
                    break;
                  }
                  for (; l2 < 3; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  switch (r2.last = 1 & u2, l2 -= 1, 3 & (u2 >>>= 1)) {
                    case 0:
                      r2.mode = 14;
                      break;
                    case 1:
                      if (j(r2), r2.mode = 20, 6 !== t2)
                        break;
                      u2 >>>= 2, l2 -= 2;
                      break e;
                    case 2:
                      r2.mode = 17;
                      break;
                    case 3:
                      e2.msg = "invalid block type", r2.mode = 30;
                  }
                  u2 >>>= 2, l2 -= 2;
                  break;
                case 14:
                  for (u2 >>>= 7 & l2, l2 -= 7 & l2; l2 < 32; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if ((65535 & u2) != (u2 >>> 16 ^ 65535)) {
                    e2.msg = "invalid stored block lengths", r2.mode = 30;
                    break;
                  }
                  if (r2.length = 65535 & u2, l2 = u2 = 0, r2.mode = 15, 6 === t2)
                    break e;
                case 15:
                  r2.mode = 16;
                case 16:
                  if (d = r2.length) {
                    if (o2 < d && (d = o2), h2 < d && (d = h2), 0 === d)
                      break e;
                    I.arraySet(i2, n2, s2, d, a2), o2 -= d, s2 += d, h2 -= d, a2 += d, r2.length -= d;
                    break;
                  }
                  r2.mode = 12;
                  break;
                case 17:
                  for (; l2 < 14; ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if (r2.nlen = 257 + (31 & u2), u2 >>>= 5, l2 -= 5, r2.ndist = 1 + (31 & u2), u2 >>>= 5, l2 -= 5, r2.ncode = 4 + (15 & u2), u2 >>>= 4, l2 -= 4, 286 < r2.nlen || 30 < r2.ndist) {
                    e2.msg = "too many length or distance symbols", r2.mode = 30;
                    break;
                  }
                  r2.have = 0, r2.mode = 18;
                case 18:
                  for (; r2.have < r2.ncode; ) {
                    for (; l2 < 3; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    r2.lens[A[r2.have++]] = 7 & u2, u2 >>>= 3, l2 -= 3;
                  }
                  for (; r2.have < 19; )
                    r2.lens[A[r2.have++]] = 0;
                  if (r2.lencode = r2.lendyn, r2.lenbits = 7, S = { bits: r2.lenbits }, x = T(0, r2.lens, 0, 19, r2.lencode, 0, r2.work, S), r2.lenbits = S.bits, x) {
                    e2.msg = "invalid code lengths set", r2.mode = 30;
                    break;
                  }
                  r2.have = 0, r2.mode = 19;
                case 19:
                  for (; r2.have < r2.nlen + r2.ndist; ) {
                    for (; g = (C = r2.lencode[u2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    if (b < 16)
                      u2 >>>= _, l2 -= _, r2.lens[r2.have++] = b;
                    else {
                      if (16 === b) {
                        for (z = _ + 2; l2 < z; ) {
                          if (0 === o2)
                            break e;
                          o2--, u2 += n2[s2++] << l2, l2 += 8;
                        }
                        if (u2 >>>= _, l2 -= _, 0 === r2.have) {
                          e2.msg = "invalid bit length repeat", r2.mode = 30;
                          break;
                        }
                        k = r2.lens[r2.have - 1], d = 3 + (3 & u2), u2 >>>= 2, l2 -= 2;
                      } else if (17 === b) {
                        for (z = _ + 3; l2 < z; ) {
                          if (0 === o2)
                            break e;
                          o2--, u2 += n2[s2++] << l2, l2 += 8;
                        }
                        l2 -= _, k = 0, d = 3 + (7 & (u2 >>>= _)), u2 >>>= 3, l2 -= 3;
                      } else {
                        for (z = _ + 7; l2 < z; ) {
                          if (0 === o2)
                            break e;
                          o2--, u2 += n2[s2++] << l2, l2 += 8;
                        }
                        l2 -= _, k = 0, d = 11 + (127 & (u2 >>>= _)), u2 >>>= 7, l2 -= 7;
                      }
                      if (r2.have + d > r2.nlen + r2.ndist) {
                        e2.msg = "invalid bit length repeat", r2.mode = 30;
                        break;
                      }
                      for (; d--; )
                        r2.lens[r2.have++] = k;
                    }
                  }
                  if (30 === r2.mode)
                    break;
                  if (0 === r2.lens[256]) {
                    e2.msg = "invalid code -- missing end-of-block", r2.mode = 30;
                    break;
                  }
                  if (r2.lenbits = 9, S = { bits: r2.lenbits }, x = T(D, r2.lens, 0, r2.nlen, r2.lencode, 0, r2.work, S), r2.lenbits = S.bits, x) {
                    e2.msg = "invalid literal/lengths set", r2.mode = 30;
                    break;
                  }
                  if (r2.distbits = 6, r2.distcode = r2.distdyn, S = { bits: r2.distbits }, x = T(F, r2.lens, r2.nlen, r2.ndist, r2.distcode, 0, r2.work, S), r2.distbits = S.bits, x) {
                    e2.msg = "invalid distances set", r2.mode = 30;
                    break;
                  }
                  if (r2.mode = 20, 6 === t2)
                    break e;
                case 20:
                  r2.mode = 21;
                case 21:
                  if (6 <= o2 && 258 <= h2) {
                    e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, R(e2, c2), a2 = e2.next_out, i2 = e2.output, h2 = e2.avail_out, s2 = e2.next_in, n2 = e2.input, o2 = e2.avail_in, u2 = r2.hold, l2 = r2.bits, 12 === r2.mode && (r2.back = -1);
                    break;
                  }
                  for (r2.back = 0; g = (C = r2.lencode[u2 & (1 << r2.lenbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if (g && 0 == (240 & g)) {
                    for (v = _, y = g, w = b; g = (C = r2.lencode[w + ((u2 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_ = C >>> 24) <= l2); ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    u2 >>>= v, l2 -= v, r2.back += v;
                  }
                  if (u2 >>>= _, l2 -= _, r2.back += _, r2.length = b, 0 === g) {
                    r2.mode = 26;
                    break;
                  }
                  if (32 & g) {
                    r2.back = -1, r2.mode = 12;
                    break;
                  }
                  if (64 & g) {
                    e2.msg = "invalid literal/length code", r2.mode = 30;
                    break;
                  }
                  r2.extra = 15 & g, r2.mode = 22;
                case 22:
                  if (r2.extra) {
                    for (z = r2.extra; l2 < z; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    r2.length += u2 & (1 << r2.extra) - 1, u2 >>>= r2.extra, l2 -= r2.extra, r2.back += r2.extra;
                  }
                  r2.was = r2.length, r2.mode = 23;
                case 23:
                  for (; g = (C = r2.distcode[u2 & (1 << r2.distbits) - 1]) >>> 16 & 255, b = 65535 & C, !((_ = C >>> 24) <= l2); ) {
                    if (0 === o2)
                      break e;
                    o2--, u2 += n2[s2++] << l2, l2 += 8;
                  }
                  if (0 == (240 & g)) {
                    for (v = _, y = g, w = b; g = (C = r2.distcode[w + ((u2 & (1 << v + y) - 1) >> v)]) >>> 16 & 255, b = 65535 & C, !(v + (_ = C >>> 24) <= l2); ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    u2 >>>= v, l2 -= v, r2.back += v;
                  }
                  if (u2 >>>= _, l2 -= _, r2.back += _, 64 & g) {
                    e2.msg = "invalid distance code", r2.mode = 30;
                    break;
                  }
                  r2.offset = b, r2.extra = 15 & g, r2.mode = 24;
                case 24:
                  if (r2.extra) {
                    for (z = r2.extra; l2 < z; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    r2.offset += u2 & (1 << r2.extra) - 1, u2 >>>= r2.extra, l2 -= r2.extra, r2.back += r2.extra;
                  }
                  if (r2.offset > r2.dmax) {
                    e2.msg = "invalid distance too far back", r2.mode = 30;
                    break;
                  }
                  r2.mode = 25;
                case 25:
                  if (0 === h2)
                    break e;
                  if (d = c2 - h2, r2.offset > d) {
                    if ((d = r2.offset - d) > r2.whave && r2.sane) {
                      e2.msg = "invalid distance too far back", r2.mode = 30;
                      break;
                    }
                    p = d > r2.wnext ? (d -= r2.wnext, r2.wsize - d) : r2.wnext - d, d > r2.length && (d = r2.length), m = r2.window;
                  } else
                    m = i2, p = a2 - r2.offset, d = r2.length;
                  for (h2 < d && (d = h2), h2 -= d, r2.length -= d; i2[a2++] = m[p++], --d; )
                    ;
                  0 === r2.length && (r2.mode = 21);
                  break;
                case 26:
                  if (0 === h2)
                    break e;
                  i2[a2++] = r2.length, h2--, r2.mode = 21;
                  break;
                case 27:
                  if (r2.wrap) {
                    for (; l2 < 32; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 |= n2[s2++] << l2, l2 += 8;
                    }
                    if (c2 -= h2, e2.total_out += c2, r2.total += c2, c2 && (e2.adler = r2.check = r2.flags ? B(r2.check, i2, c2, a2 - c2) : O(r2.check, i2, c2, a2 - c2)), c2 = h2, (r2.flags ? u2 : L(u2)) !== r2.check) {
                      e2.msg = "incorrect data check", r2.mode = 30;
                      break;
                    }
                    l2 = u2 = 0;
                  }
                  r2.mode = 28;
                case 28:
                  if (r2.wrap && r2.flags) {
                    for (; l2 < 32; ) {
                      if (0 === o2)
                        break e;
                      o2--, u2 += n2[s2++] << l2, l2 += 8;
                    }
                    if (u2 !== (4294967295 & r2.total)) {
                      e2.msg = "incorrect length check", r2.mode = 30;
                      break;
                    }
                    l2 = u2 = 0;
                  }
                  r2.mode = 29;
                case 29:
                  x = 1;
                  break e;
                case 30:
                  x = -3;
                  break e;
                case 31:
                  return -4;
                case 32:
                default:
                  return U;
              }
          return e2.next_out = a2, e2.avail_out = h2, e2.next_in = s2, e2.avail_in = o2, r2.hold = u2, r2.bits = l2, (r2.wsize || c2 !== e2.avail_out && r2.mode < 30 && (r2.mode < 27 || 4 !== t2)) && Z(e2, e2.output, e2.next_out, c2 - e2.avail_out) ? (r2.mode = 31, -4) : (f2 -= e2.avail_in, c2 -= e2.avail_out, e2.total_in += f2, e2.total_out += c2, r2.total += c2, r2.wrap && c2 && (e2.adler = r2.check = r2.flags ? B(r2.check, i2, c2, e2.next_out - c2) : O(r2.check, i2, c2, e2.next_out - c2)), e2.data_type = r2.bits + (r2.last ? 64 : 0) + (12 === r2.mode ? 128 : 0) + (20 === r2.mode || 15 === r2.mode ? 256 : 0), (0 == f2 && 0 === c2 || 4 === t2) && x === N && (x = -5), x);
        }, r.inflateEnd = function(e2) {
          if (!e2 || !e2.state)
            return U;
          var t2 = e2.state;
          return t2.window && (t2.window = null), e2.state = null, N;
        }, r.inflateGetHeader = function(e2, t2) {
          var r2;
          return e2 && e2.state ? 0 == (2 & (r2 = e2.state).wrap) ? U : ((r2.head = t2).done = false, N) : U;
        }, r.inflateSetDictionary = function(e2, t2) {
          var r2, n2 = t2.length;
          return e2 && e2.state ? 0 !== (r2 = e2.state).wrap && 11 !== r2.mode ? U : 11 === r2.mode && O(1, t2, n2, 0) !== r2.check ? -3 : Z(e2, t2, n2, n2) ? (r2.mode = 31, -4) : (r2.havedict = 1, N) : U;
        }, r.inflateInfo = "pako inflate (from Nodeca project)";
      }, { "../utils/common": 41, "./adler32": 43, "./crc32": 45, "./inffast": 48, "./inftrees": 50 }], 50: [function(e, t, r) {
        "use strict";
        var D = e("../utils/common"), F = [3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 17, 19, 23, 27, 31, 35, 43, 51, 59, 67, 83, 99, 115, 131, 163, 195, 227, 258, 0, 0], N = [16, 16, 16, 16, 16, 16, 16, 16, 17, 17, 17, 17, 18, 18, 18, 18, 19, 19, 19, 19, 20, 20, 20, 20, 21, 21, 21, 21, 16, 72, 78], U = [1, 2, 3, 4, 5, 7, 9, 13, 17, 25, 33, 49, 65, 97, 129, 193, 257, 385, 513, 769, 1025, 1537, 2049, 3073, 4097, 6145, 8193, 12289, 16385, 24577, 0, 0], P = [16, 16, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 64, 64];
        t.exports = function(e2, t2, r2, n, i, s, a, o) {
          var h, u, l, f, c, d, p, m, _, g = o.bits, b = 0, v = 0, y = 0, w = 0, k = 0, x = 0, S = 0, z = 0, C = 0, E = 0, A = null, I = 0, O = new D.Buf16(16), B = new D.Buf16(16), R = null, T = 0;
          for (b = 0; b <= 15; b++)
            O[b] = 0;
          for (v = 0; v < n; v++)
            O[t2[r2 + v]]++;
          for (k = g, w = 15; 1 <= w && 0 === O[w]; w--)
            ;
          if (w < k && (k = w), 0 === w)
            return i[s++] = 20971520, i[s++] = 20971520, o.bits = 1, 0;
          for (y = 1; y < w && 0 === O[y]; y++)
            ;
          for (k < y && (k = y), b = z = 1; b <= 15; b++)
            if (z <<= 1, (z -= O[b]) < 0)
              return -1;
          if (0 < z && (0 === e2 || 1 !== w))
            return -1;
          for (B[1] = 0, b = 1; b < 15; b++)
            B[b + 1] = B[b] + O[b];
          for (v = 0; v < n; v++)
            0 !== t2[r2 + v] && (a[B[t2[r2 + v]]++] = v);
          if (d = 0 === e2 ? (A = R = a, 19) : 1 === e2 ? (A = F, I -= 257, R = N, T -= 257, 256) : (A = U, R = P, -1), b = y, c = s, S = v = E = 0, l = -1, f = (C = 1 << (x = k)) - 1, 1 === e2 && 852 < C || 2 === e2 && 592 < C)
            return 1;
          for (; ; ) {
            for (p = b - S, _ = a[v] < d ? (m = 0, a[v]) : a[v] > d ? (m = R[T + a[v]], A[I + a[v]]) : (m = 96, 0), h = 1 << b - S, y = u = 1 << x; i[c + (E >> S) + (u -= h)] = p << 24 | m << 16 | _ | 0, 0 !== u; )
              ;
            for (h = 1 << b - 1; E & h; )
              h >>= 1;
            if (0 !== h ? (E &= h - 1, E += h) : E = 0, v++, 0 == --O[b]) {
              if (b === w)
                break;
              b = t2[r2 + a[v]];
            }
            if (k < b && (E & f) !== l) {
              for (0 === S && (S = k), c += y, z = 1 << (x = b - S); x + S < w && !((z -= O[x + S]) <= 0); )
                x++, z <<= 1;
              if (C += 1 << x, 1 === e2 && 852 < C || 2 === e2 && 592 < C)
                return 1;
              i[l = E & f] = k << 24 | x << 16 | c - s | 0;
            }
          }
          return 0 !== E && (i[c + E] = b - S << 24 | 64 << 16 | 0), o.bits = k, 0;
        };
      }, { "../utils/common": 41 }], 51: [function(e, t, r) {
        "use strict";
        t.exports = { 2: "need dictionary", 1: "stream end", 0: "", "-1": "file error", "-2": "stream error", "-3": "data error", "-4": "insufficient memory", "-5": "buffer error", "-6": "incompatible version" };
      }, {}], 52: [function(e, t, r) {
        "use strict";
        var i = e("../utils/common"), o = 0, h = 1;
        function n(e2) {
          for (var t2 = e2.length; 0 <= --t2; )
            e2[t2] = 0;
        }
        var s = 0, a = 29, u = 256, l = u + 1 + a, f = 30, c = 19, _ = 2 * l + 1, g = 15, d = 16, p = 7, m = 256, b = 16, v = 17, y = 18, w = [0, 0, 0, 0, 0, 0, 0, 0, 1, 1, 1, 1, 2, 2, 2, 2, 3, 3, 3, 3, 4, 4, 4, 4, 5, 5, 5, 5, 0], k = [0, 0, 0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13], x = [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 2, 3, 7], S = [16, 17, 18, 0, 8, 7, 9, 6, 10, 5, 11, 4, 12, 3, 13, 2, 14, 1, 15], z = new Array(2 * (l + 2));
        n(z);
        var C = new Array(2 * f);
        n(C);
        var E = new Array(512);
        n(E);
        var A = new Array(256);
        n(A);
        var I = new Array(a);
        n(I);
        var O, B, R, T = new Array(f);
        function D(e2, t2, r2, n2, i2) {
          this.static_tree = e2, this.extra_bits = t2, this.extra_base = r2, this.elems = n2, this.max_length = i2, this.has_stree = e2 && e2.length;
        }
        function F(e2, t2) {
          this.dyn_tree = e2, this.max_code = 0, this.stat_desc = t2;
        }
        function N(e2) {
          return e2 < 256 ? E[e2] : E[256 + (e2 >>> 7)];
        }
        function U(e2, t2) {
          e2.pending_buf[e2.pending++] = 255 & t2, e2.pending_buf[e2.pending++] = t2 >>> 8 & 255;
        }
        function P(e2, t2, r2) {
          e2.bi_valid > d - r2 ? (e2.bi_buf |= t2 << e2.bi_valid & 65535, U(e2, e2.bi_buf), e2.bi_buf = t2 >> d - e2.bi_valid, e2.bi_valid += r2 - d) : (e2.bi_buf |= t2 << e2.bi_valid & 65535, e2.bi_valid += r2);
        }
        function L(e2, t2, r2) {
          P(e2, r2[2 * t2], r2[2 * t2 + 1]);
        }
        function j(e2, t2) {
          for (var r2 = 0; r2 |= 1 & e2, e2 >>>= 1, r2 <<= 1, 0 < --t2; )
            ;
          return r2 >>> 1;
        }
        function Z(e2, t2, r2) {
          var n2, i2, s2 = new Array(g + 1), a2 = 0;
          for (n2 = 1; n2 <= g; n2++)
            s2[n2] = a2 = a2 + r2[n2 - 1] << 1;
          for (i2 = 0; i2 <= t2; i2++) {
            var o2 = e2[2 * i2 + 1];
            0 !== o2 && (e2[2 * i2] = j(s2[o2]++, o2));
          }
        }
        function W(e2) {
          var t2;
          for (t2 = 0; t2 < l; t2++)
            e2.dyn_ltree[2 * t2] = 0;
          for (t2 = 0; t2 < f; t2++)
            e2.dyn_dtree[2 * t2] = 0;
          for (t2 = 0; t2 < c; t2++)
            e2.bl_tree[2 * t2] = 0;
          e2.dyn_ltree[2 * m] = 1, e2.opt_len = e2.static_len = 0, e2.last_lit = e2.matches = 0;
        }
        function M(e2) {
          8 < e2.bi_valid ? U(e2, e2.bi_buf) : 0 < e2.bi_valid && (e2.pending_buf[e2.pending++] = e2.bi_buf), e2.bi_buf = 0, e2.bi_valid = 0;
        }
        function H(e2, t2, r2, n2) {
          var i2 = 2 * t2, s2 = 2 * r2;
          return e2[i2] < e2[s2] || e2[i2] === e2[s2] && n2[t2] <= n2[r2];
        }
        function G(e2, t2, r2) {
          for (var n2 = e2.heap[r2], i2 = r2 << 1; i2 <= e2.heap_len && (i2 < e2.heap_len && H(t2, e2.heap[i2 + 1], e2.heap[i2], e2.depth) && i2++, !H(t2, n2, e2.heap[i2], e2.depth)); )
            e2.heap[r2] = e2.heap[i2], r2 = i2, i2 <<= 1;
          e2.heap[r2] = n2;
        }
        function K(e2, t2, r2) {
          var n2, i2, s2, a2, o2 = 0;
          if (0 !== e2.last_lit)
            for (; n2 = e2.pending_buf[e2.d_buf + 2 * o2] << 8 | e2.pending_buf[e2.d_buf + 2 * o2 + 1], i2 = e2.pending_buf[e2.l_buf + o2], o2++, 0 === n2 ? L(e2, i2, t2) : (L(e2, (s2 = A[i2]) + u + 1, t2), 0 !== (a2 = w[s2]) && P(e2, i2 -= I[s2], a2), L(e2, s2 = N(--n2), r2), 0 !== (a2 = k[s2]) && P(e2, n2 -= T[s2], a2)), o2 < e2.last_lit; )
              ;
          L(e2, m, t2);
        }
        function Y(e2, t2) {
          var r2, n2, i2, s2 = t2.dyn_tree, a2 = t2.stat_desc.static_tree, o2 = t2.stat_desc.has_stree, h2 = t2.stat_desc.elems, u2 = -1;
          for (e2.heap_len = 0, e2.heap_max = _, r2 = 0; r2 < h2; r2++)
            0 !== s2[2 * r2] ? (e2.heap[++e2.heap_len] = u2 = r2, e2.depth[r2] = 0) : s2[2 * r2 + 1] = 0;
          for (; e2.heap_len < 2; )
            s2[2 * (i2 = e2.heap[++e2.heap_len] = u2 < 2 ? ++u2 : 0)] = 1, e2.depth[i2] = 0, e2.opt_len--, o2 && (e2.static_len -= a2[2 * i2 + 1]);
          for (t2.max_code = u2, r2 = e2.heap_len >> 1; 1 <= r2; r2--)
            G(e2, s2, r2);
          for (i2 = h2; r2 = e2.heap[1], e2.heap[1] = e2.heap[e2.heap_len--], G(e2, s2, 1), n2 = e2.heap[1], e2.heap[--e2.heap_max] = r2, e2.heap[--e2.heap_max] = n2, s2[2 * i2] = s2[2 * r2] + s2[2 * n2], e2.depth[i2] = (e2.depth[r2] >= e2.depth[n2] ? e2.depth[r2] : e2.depth[n2]) + 1, s2[2 * r2 + 1] = s2[2 * n2 + 1] = i2, e2.heap[1] = i2++, G(e2, s2, 1), 2 <= e2.heap_len; )
            ;
          e2.heap[--e2.heap_max] = e2.heap[1], function(e3, t3) {
            var r3, n3, i3, s3, a3, o3, h3 = t3.dyn_tree, u3 = t3.max_code, l2 = t3.stat_desc.static_tree, f2 = t3.stat_desc.has_stree, c2 = t3.stat_desc.extra_bits, d2 = t3.stat_desc.extra_base, p2 = t3.stat_desc.max_length, m2 = 0;
            for (s3 = 0; s3 <= g; s3++)
              e3.bl_count[s3] = 0;
            for (h3[2 * e3.heap[e3.heap_max] + 1] = 0, r3 = e3.heap_max + 1; r3 < _; r3++)
              p2 < (s3 = h3[2 * h3[2 * (n3 = e3.heap[r3]) + 1] + 1] + 1) && (s3 = p2, m2++), h3[2 * n3 + 1] = s3, u3 < n3 || (e3.bl_count[s3]++, a3 = 0, d2 <= n3 && (a3 = c2[n3 - d2]), o3 = h3[2 * n3], e3.opt_len += o3 * (s3 + a3), f2 && (e3.static_len += o3 * (l2[2 * n3 + 1] + a3)));
            if (0 !== m2) {
              do {
                for (s3 = p2 - 1; 0 === e3.bl_count[s3]; )
                  s3--;
                e3.bl_count[s3]--, e3.bl_count[s3 + 1] += 2, e3.bl_count[p2]--, m2 -= 2;
              } while (0 < m2);
              for (s3 = p2; 0 !== s3; s3--)
                for (n3 = e3.bl_count[s3]; 0 !== n3; )
                  u3 < (i3 = e3.heap[--r3]) || (h3[2 * i3 + 1] !== s3 && (e3.opt_len += (s3 - h3[2 * i3 + 1]) * h3[2 * i3], h3[2 * i3 + 1] = s3), n3--);
            }
          }(e2, t2), Z(s2, u2, e2.bl_count);
        }
        function X(e2, t2, r2) {
          var n2, i2, s2 = -1, a2 = t2[1], o2 = 0, h2 = 7, u2 = 4;
          for (0 === a2 && (h2 = 138, u2 = 3), t2[2 * (r2 + 1) + 1] = 65535, n2 = 0; n2 <= r2; n2++)
            i2 = a2, a2 = t2[2 * (n2 + 1) + 1], ++o2 < h2 && i2 === a2 || (o2 < u2 ? e2.bl_tree[2 * i2] += o2 : 0 !== i2 ? (i2 !== s2 && e2.bl_tree[2 * i2]++, e2.bl_tree[2 * b]++) : o2 <= 10 ? e2.bl_tree[2 * v]++ : e2.bl_tree[2 * y]++, s2 = i2, u2 = (o2 = 0) === a2 ? (h2 = 138, 3) : i2 === a2 ? (h2 = 6, 3) : (h2 = 7, 4));
        }
        function V(e2, t2, r2) {
          var n2, i2, s2 = -1, a2 = t2[1], o2 = 0, h2 = 7, u2 = 4;
          for (0 === a2 && (h2 = 138, u2 = 3), n2 = 0; n2 <= r2; n2++)
            if (i2 = a2, a2 = t2[2 * (n2 + 1) + 1], !(++o2 < h2 && i2 === a2)) {
              if (o2 < u2)
                for (; L(e2, i2, e2.bl_tree), 0 != --o2; )
                  ;
              else
                0 !== i2 ? (i2 !== s2 && (L(e2, i2, e2.bl_tree), o2--), L(e2, b, e2.bl_tree), P(e2, o2 - 3, 2)) : o2 <= 10 ? (L(e2, v, e2.bl_tree), P(e2, o2 - 3, 3)) : (L(e2, y, e2.bl_tree), P(e2, o2 - 11, 7));
              s2 = i2, u2 = (o2 = 0) === a2 ? (h2 = 138, 3) : i2 === a2 ? (h2 = 6, 3) : (h2 = 7, 4);
            }
        }
        n(T);
        var q = false;
        function J(e2, t2, r2, n2) {
          P(e2, (s << 1) + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {
            M(e3), n3 && (U(e3, r3), U(e3, ~r3)), i.arraySet(e3.pending_buf, e3.window, t3, r3, e3.pending), e3.pending += r3;
          }(e2, t2, r2, true);
        }
        r._tr_init = function(e2) {
          q || (function() {
            var e3, t2, r2, n2, i2, s2 = new Array(g + 1);
            for (n2 = r2 = 0; n2 < a - 1; n2++)
              for (I[n2] = r2, e3 = 0; e3 < 1 << w[n2]; e3++)
                A[r2++] = n2;
            for (A[r2 - 1] = n2, n2 = i2 = 0; n2 < 16; n2++)
              for (T[n2] = i2, e3 = 0; e3 < 1 << k[n2]; e3++)
                E[i2++] = n2;
            for (i2 >>= 7; n2 < f; n2++)
              for (T[n2] = i2 << 7, e3 = 0; e3 < 1 << k[n2] - 7; e3++)
                E[256 + i2++] = n2;
            for (t2 = 0; t2 <= g; t2++)
              s2[t2] = 0;
            for (e3 = 0; e3 <= 143; )
              z[2 * e3 + 1] = 8, e3++, s2[8]++;
            for (; e3 <= 255; )
              z[2 * e3 + 1] = 9, e3++, s2[9]++;
            for (; e3 <= 279; )
              z[2 * e3 + 1] = 7, e3++, s2[7]++;
            for (; e3 <= 287; )
              z[2 * e3 + 1] = 8, e3++, s2[8]++;
            for (Z(z, l + 1, s2), e3 = 0; e3 < f; e3++)
              C[2 * e3 + 1] = 5, C[2 * e3] = j(e3, 5);
            O = new D(z, w, u + 1, l, g), B = new D(C, k, 0, f, g), R = new D(new Array(0), x, 0, c, p);
          }(), q = true), e2.l_desc = new F(e2.dyn_ltree, O), e2.d_desc = new F(e2.dyn_dtree, B), e2.bl_desc = new F(e2.bl_tree, R), e2.bi_buf = 0, e2.bi_valid = 0, W(e2);
        }, r._tr_stored_block = J, r._tr_flush_block = function(e2, t2, r2, n2) {
          var i2, s2, a2 = 0;
          0 < e2.level ? (2 === e2.strm.data_type && (e2.strm.data_type = function(e3) {
            var t3, r3 = 4093624447;
            for (t3 = 0; t3 <= 31; t3++, r3 >>>= 1)
              if (1 & r3 && 0 !== e3.dyn_ltree[2 * t3])
                return o;
            if (0 !== e3.dyn_ltree[18] || 0 !== e3.dyn_ltree[20] || 0 !== e3.dyn_ltree[26])
              return h;
            for (t3 = 32; t3 < u; t3++)
              if (0 !== e3.dyn_ltree[2 * t3])
                return h;
            return o;
          }(e2)), Y(e2, e2.l_desc), Y(e2, e2.d_desc), a2 = function(e3) {
            var t3;
            for (X(e3, e3.dyn_ltree, e3.l_desc.max_code), X(e3, e3.dyn_dtree, e3.d_desc.max_code), Y(e3, e3.bl_desc), t3 = c - 1; 3 <= t3 && 0 === e3.bl_tree[2 * S[t3] + 1]; t3--)
              ;
            return e3.opt_len += 3 * (t3 + 1) + 5 + 5 + 4, t3;
          }(e2), i2 = e2.opt_len + 3 + 7 >>> 3, (s2 = e2.static_len + 3 + 7 >>> 3) <= i2 && (i2 = s2)) : i2 = s2 = r2 + 5, r2 + 4 <= i2 && -1 !== t2 ? J(e2, t2, r2, n2) : 4 === e2.strategy || s2 === i2 ? (P(e2, 2 + (n2 ? 1 : 0), 3), K(e2, z, C)) : (P(e2, 4 + (n2 ? 1 : 0), 3), function(e3, t3, r3, n3) {
            var i3;
            for (P(e3, t3 - 257, 5), P(e3, r3 - 1, 5), P(e3, n3 - 4, 4), i3 = 0; i3 < n3; i3++)
              P(e3, e3.bl_tree[2 * S[i3] + 1], 3);
            V(e3, e3.dyn_ltree, t3 - 1), V(e3, e3.dyn_dtree, r3 - 1);
          }(e2, e2.l_desc.max_code + 1, e2.d_desc.max_code + 1, a2 + 1), K(e2, e2.dyn_ltree, e2.dyn_dtree)), W(e2), n2 && M(e2);
        }, r._tr_tally = function(e2, t2, r2) {
          return e2.pending_buf[e2.d_buf + 2 * e2.last_lit] = t2 >>> 8 & 255, e2.pending_buf[e2.d_buf + 2 * e2.last_lit + 1] = 255 & t2, e2.pending_buf[e2.l_buf + e2.last_lit] = 255 & r2, e2.last_lit++, 0 === t2 ? e2.dyn_ltree[2 * r2]++ : (e2.matches++, t2--, e2.dyn_ltree[2 * (A[r2] + u + 1)]++, e2.dyn_dtree[2 * N(t2)]++), e2.last_lit === e2.lit_bufsize - 1;
        }, r._tr_align = function(e2) {
          P(e2, 2, 3), L(e2, m, z), function(e3) {
            16 === e3.bi_valid ? (U(e3, e3.bi_buf), e3.bi_buf = 0, e3.bi_valid = 0) : 8 <= e3.bi_valid && (e3.pending_buf[e3.pending++] = 255 & e3.bi_buf, e3.bi_buf >>= 8, e3.bi_valid -= 8);
          }(e2);
        };
      }, { "../utils/common": 41 }], 53: [function(e, t, r) {
        "use strict";
        t.exports = function() {
          this.input = null, this.next_in = 0, this.avail_in = 0, this.total_in = 0, this.output = null, this.next_out = 0, this.avail_out = 0, this.total_out = 0, this.msg = "", this.state = null, this.data_type = 2, this.adler = 0;
        };
      }, {}], 54: [function(e, t, r) {
        (function(e2) {
          !function(r2, n) {
            "use strict";
            if (!r2.setImmediate) {
              var i, s, t2, a, o = 1, h = {}, u = false, l = r2.document, e3 = Object.getPrototypeOf && Object.getPrototypeOf(r2);
              e3 = e3 && e3.setTimeout ? e3 : r2, i = "[object process]" === {}.toString.call(r2.process) ? function(e4) {
                process.nextTick(function() {
                  c(e4);
                });
              } : function() {
                if (r2.postMessage && !r2.importScripts) {
                  var e4 = true, t3 = r2.onmessage;
                  return r2.onmessage = function() {
                    e4 = false;
                  }, r2.postMessage("", "*"), r2.onmessage = t3, e4;
                }
              }() ? (a = "setImmediate$" + Math.random() + "$", r2.addEventListener ? r2.addEventListener("message", d, false) : r2.attachEvent("onmessage", d), function(e4) {
                r2.postMessage(a + e4, "*");
              }) : r2.MessageChannel ? ((t2 = new MessageChannel()).port1.onmessage = function(e4) {
                c(e4.data);
              }, function(e4) {
                t2.port2.postMessage(e4);
              }) : l && "onreadystatechange" in l.createElement("script") ? (s = l.documentElement, function(e4) {
                var t3 = l.createElement("script");
                t3.onreadystatechange = function() {
                  c(e4), t3.onreadystatechange = null, s.removeChild(t3), t3 = null;
                }, s.appendChild(t3);
              }) : function(e4) {
                setTimeout(c, 0, e4);
              }, e3.setImmediate = function(e4) {
                "function" != typeof e4 && (e4 = new Function("" + e4));
                for (var t3 = new Array(arguments.length - 1), r3 = 0; r3 < t3.length; r3++)
                  t3[r3] = arguments[r3 + 1];
                var n2 = { callback: e4, args: t3 };
                return h[o] = n2, i(o), o++;
              }, e3.clearImmediate = f;
            }
            function f(e4) {
              delete h[e4];
            }
            function c(e4) {
              if (u)
                setTimeout(c, 0, e4);
              else {
                var t3 = h[e4];
                if (t3) {
                  u = true;
                  try {
                    !function(e5) {
                      var t4 = e5.callback, r3 = e5.args;
                      switch (r3.length) {
                        case 0:
                          t4();
                          break;
                        case 1:
                          t4(r3[0]);
                          break;
                        case 2:
                          t4(r3[0], r3[1]);
                          break;
                        case 3:
                          t4(r3[0], r3[1], r3[2]);
                          break;
                        default:
                          t4.apply(n, r3);
                      }
                    }(t3);
                  } finally {
                    f(e4), u = false;
                  }
                }
              }
            }
            function d(e4) {
              e4.source === r2 && "string" == typeof e4.data && 0 === e4.data.indexOf(a) && c(+e4.data.slice(a.length));
            }
          }("undefined" == typeof self ? void 0 === e2 ? this : e2 : self);
        }).call(this, "undefined" != typeof global ? global : "undefined" != typeof self ? self : "undefined" != typeof window ? window : {});
      }, {}] }, {}, [10])(10);
    });
  }
});

// node_modules/docx-preview/dist/docx-preview.min.js
var require_docx_preview_min = __commonJS({
  "node_modules/docx-preview/dist/docx-preview.min.js"(exports, module) {
    !function(e, t) {
      "object" == typeof exports && "object" == typeof module ? module.exports = t(require_jszip_min()) : "function" == typeof define && define.amd ? define(["jszip"], t) : "object" == typeof exports ? exports.docx = t(require_jszip_min()) : e.docx = t(e.JSZip);
    }(globalThis, (e) => (() => {
      "use strict";
      var t = { 438: (e2, t2, r2) => {
        r2.r(t2), r2.d(t2, { default: () => d });
        var a2 = r2(537), s = r2.n(a2), n = r2(645), l = r2.n(n), o = r2(806), i = r2.n(o), c = new URL(r2(583), r2.b), u = l()(s()), p = i()(c);
        u.push([e2.id, `@namespace "http://www.w3.org/1998/Math/MathML";math{display:inline-block;line-height:initial}mfrac{display:inline-block;vertical-align:-50%;text-align:center}mfrac>:first-child{border-bottom:solid thin currentColor}mfrac>*{display:block}msub>:nth-child(2){font-size:smaller;vertical-align:sub}msup>:nth-child(2){font-size:smaller;vertical-align:super}munder,mover,munderover{display:inline-flex;flex-flow:column nowrap;vertical-align:middle;text-align:center}munder>:not(:first-child),mover>:not(:first-child),munderover>:not(:first-child){font-size:smaller}munderover>:last-child{order:-1}mroot,msqrt{position:relative;display:inline-block;border-top:solid thin currentColor;margin-top:.5px;vertical-align:middle;margin-left:1ch}mroot:before,msqrt:before{content:"";display:inline-block;position:absolute;width:1ch;left:-1ch;top:-1px;bottom:0;background-image:url(${p})}`, "", { version: 3, sources: ["webpack://./src/mathml.scss"], names: [], mappings: "AAAA,+CAAA,CAEA,KACI,oBAAA,CACA,mBAAA,CAGJ,MACI,oBAAA,CACA,mBAAA,CACA,iBAAA,CAEA,mBACI,qCAAA,CAGJ,QACI,aAAA,CAKJ,mBACI,iBAAA,CACA,kBAAA,CAKJ,mBACI,iBAAA,CACA,oBAAA,CAIR,wBACI,mBAAA,CACA,uBAAA,CACA,qBAAA,CACA,iBAAA,CAEA,iFACI,iBAAA,CAKJ,uBAAA,QAAA,CAGJ,YACI,iBAAA,CACA,oBAAA,CACA,kCAAA,CACA,eAAA,CACA,qBAAA,CACA,eAAA,CAEA,0BACI,UAAA,CACA,oBAAA,CACA,iBAAA,CACA,SAAA,CACA,SAAA,CACA,QAAA,CACA,QAAA,CACA,wDAAA", sourcesContent: [`@namespace "http://www.w3.org/1998/Math/MathML";\r
\r
math {\r
    display: inline-block;\r
    line-height: initial;\r
}\r
\r
mfrac {\r
    display: inline-block;\r
    vertical-align: -50%;\r
    text-align: center;\r
\r
    &>:first-child {\r
        border-bottom: solid thin currentColor;\r
    }\r
\r
    &>* {\r
        display: block;\r
    }\r
}\r
\r
msub {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: sub;\r
    }\r
}\r
\r
msup {\r
    &>:nth-child(2) {\r
        font-size: smaller;\r
        vertical-align: super;\r
    }\r
}\r
\r
munder, mover, munderover {\r
    display: inline-flex;\r
    flex-flow: column nowrap;\r
    vertical-align: middle;\r
    text-align: center;\r
\r
    &>:not(:first-child) {\r
        font-size: smaller;\r
    }\r
}\r
\r
munderover {\r
    &>:last-child { order: -1; }\r
}\r
\r
mroot, msqrt {\r
    position: relative;\r
    display: inline-block;\r
    border-top: solid thin currentColor;  \r
    margin-top: 0.5px;\r
    vertical-align: middle;  \r
    margin-left: 1ch; \r
\r
    &:before {\r
        content: "";\r
        display: inline-block;\r
        position: absolute;\r
        width: 1ch;\r
        left: -1ch;\r
        top: -1px;\r
        bottom: 0;\r
        background-image: url("data:image/svg+xml,%3Csvg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 20 100' preserveAspectRatio='none'%3E%3Cpath d='m0,75 l5,0 l5,25 l10,-100' stroke='black' fill='none' vector-effect='non-scaling-stroke'/%3E%3C/svg%3E");\r
    }\r
}`], sourceRoot: "" }]);
        const d = u.toString();
      }, 645: (e2) => {
        e2.exports = function(e3) {
          var t2 = [];
          return t2.toString = function() {
            return this.map(function(t3) {
              var r2 = "", a2 = void 0 !== t3[5];
              return t3[4] && (r2 += "@supports (".concat(t3[4], ") {")), t3[2] && (r2 += "@media ".concat(t3[2], " {")), a2 && (r2 += "@layer".concat(t3[5].length > 0 ? " ".concat(t3[5]) : "", " {")), r2 += e3(t3), a2 && (r2 += "}"), t3[2] && (r2 += "}"), t3[4] && (r2 += "}"), r2;
            }).join("");
          }, t2.i = function(e4, r2, a2, s, n) {
            "string" == typeof e4 && (e4 = [[null, e4, void 0]]);
            var l = {};
            if (a2)
              for (var o = 0; o < this.length; o++) {
                var i = this[o][0];
                null != i && (l[i] = true);
              }
            for (var c = 0; c < e4.length; c++) {
              var u = [].concat(e4[c]);
              a2 && l[u[0]] || (void 0 !== n && (void 0 === u[5] || (u[1] = "@layer".concat(u[5].length > 0 ? " ".concat(u[5]) : "", " {").concat(u[1], "}")), u[5] = n), r2 && (u[2] ? (u[1] = "@media ".concat(u[2], " {").concat(u[1], "}"), u[2] = r2) : u[2] = r2), s && (u[4] ? (u[1] = "@supports (".concat(u[4], ") {").concat(u[1], "}"), u[4] = s) : u[4] = "".concat(s)), t2.push(u));
            }
          }, t2;
        };
      }, 806: (e2) => {
        e2.exports = function(e3, t2) {
          return t2 || (t2 = {}), e3 ? (e3 = String(e3.__esModule ? e3.default : e3), /^['"].*['"]$/.test(e3) && (e3 = e3.slice(1, -1)), t2.hash && (e3 += t2.hash), /["'() \t\n]|(%20)/.test(e3) || t2.needQuotes ? '"'.concat(e3.replace(/"/g, '\\"').replace(/\n/g, "\\n"), '"') : e3) : e3;
        };
      }, 537: (e2) => {
        e2.exports = function(e3) {
          var t2 = e3[1], r2 = e3[3];
          if (!r2)
            return t2;
          if ("function" == typeof btoa) {
            var a2 = btoa(unescape(encodeURIComponent(JSON.stringify(r2)))), s = "sourceMappingURL=data:application/json;charset=utf-8;base64,".concat(a2), n = "/*# ".concat(s, " */");
            return [t2].concat([n]).join("\n");
          }
          return [t2].join("\n");
        };
      }, 522: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.OpenXmlPackage = void 0;
        const a2 = r2(626), s = r2(472), n = r2(593), l = r2(461);
        class o {
          constructor(e3, t3) {
            this._zip = e3, this.options = t3, this.xmlParser = new s.XmlParser();
          }
          get(e3) {
            return this._zip.files[function(e4) {
              return e4.startsWith("/") ? e4.substr(1) : e4;
            }(e3)];
          }
          update(e3, t3) {
            this._zip.file(e3, t3);
          }
          static async load(e3, t3) {
            const r3 = await a2.loadAsync(e3);
            return new o(r3, t3);
          }
          save(e3 = "blob") {
            return this._zip.generateAsync({ type: e3 });
          }
          load(e3, t3 = "string") {
            var r3, a3;
            return null !== (a3 = null === (r3 = this.get(e3)) || void 0 === r3 ? void 0 : r3.async(t3)) && void 0 !== a3 ? a3 : Promise.resolve(null);
          }
          async loadRelationships(e3 = null) {
            let t3 = "_rels/.rels";
            if (null != e3) {
              const [r4, a3] = (0, n.splitPath)(e3);
              t3 = `${r4}_rels/${a3}.rels`;
            }
            const r3 = await this.load(t3);
            return r3 ? (0, l.parseRelationships)(this.parseXmlDocument(r3).firstElementChild, this.xmlParser) : null;
          }
          parseXmlDocument(e3) {
            return (0, s.parseXmlString)(e3, this.options.trimXmlDeclaration);
          }
        }
        t2.OpenXmlPackage = o;
      }, 530: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.Part = void 0;
        const a2 = r2(472);
        t2.Part = class {
          constructor(e3, t3) {
            this._package = e3, this.path = t3;
          }
          async load() {
            this.rels = await this._package.loadRelationships(this.path);
            const e3 = await this._package.load(this.path), t3 = this._package.parseXmlDocument(e3);
            this._package.options.keepOrigin && (this._xmlDocument = t3), this.parseXml(t3.firstElementChild);
          }
          save() {
            this._package.update(this.path, (0, a2.serializeXmlString)(this._xmlDocument));
          }
          parseXml(e3) {
          }
        };
      }, 461: (e2, t2) => {
        var r2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseRelationships = t2.RelationshipTypes = void 0, function(e3) {
          e3.OfficeDocument = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/officeDocument", e3.FontTable = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/fontTable", e3.Image = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/image", e3.Numbering = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/numbering", e3.Styles = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/styles", e3.StylesWithEffects = "http://schemas.microsoft.com/office/2007/relationships/stylesWithEffects", e3.Theme = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/theme", e3.Settings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/settings", e3.WebSettings = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/webSettings", e3.Hyperlink = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/hyperlink", e3.Footnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footnotes", e3.Endnotes = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/endnotes", e3.Footer = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/footer", e3.Header = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/header", e3.ExtendedProperties = "http://schemas.openxmlformats.org/officeDocument/2006/relationships/extended-properties", e3.CoreProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/core-properties", e3.CustomProperties = "http://schemas.openxmlformats.org/package/2006/relationships/metadata/custom-properties";
        }(r2 || (t2.RelationshipTypes = r2 = {})), t2.parseRelationships = function(e3, t3) {
          return t3.elements(e3).map((e4) => ({ id: t3.attr(e4, "Id"), type: t3.attr(e4, "Type"), target: t3.attr(e4, "Target"), targetMode: t3.attr(e4, "TargetMode") }));
        };
      }, 168: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.DocumentParser = t2.autos = void 0;
        const a2 = r2(120), s = r2(109), n = r2(59), l = r2(472), o = r2(488), i = r2(172), c = r2(149), u = r2(320);
        t2.autos = { shd: "inherit", color: "black", borderColor: "black", highlight: "transparent" };
        const p = [], d = { oMath: a2.DomType.MmlMath, oMathPara: a2.DomType.MmlMathParagraph, f: a2.DomType.MmlFraction, num: a2.DomType.MmlNumerator, den: a2.DomType.MmlDenominator, rad: a2.DomType.MmlRadical, deg: a2.DomType.MmlDegree, e: a2.DomType.MmlBase, sSup: a2.DomType.MmlSuperscript, sSub: a2.DomType.MmlSubscript, sup: a2.DomType.MmlSuperArgument, sub: a2.DomType.MmlSubArgument, d: a2.DomType.MmlDelimiter, nary: a2.DomType.MmlNary };
        t2.DocumentParser = class {
          constructor(e3) {
            this.options = Object.assign({ ignoreWidth: false, debug: false }, e3);
          }
          parseNotes(e3, t3, r3) {
            var a3 = [];
            for (let s2 of l.default.elements(e3, t3)) {
              const e4 = new r3();
              e4.id = l.default.attr(s2, "id"), e4.noteType = l.default.attr(s2, "type"), e4.children = this.parseBodyElements(s2), a3.push(e4);
            }
            return a3;
          }
          parseDocumentFile(e3) {
            var t3 = l.default.element(e3, "body"), r3 = l.default.element(e3, "background"), s2 = l.default.element(t3, "sectPr");
            return { type: a2.DomType.Document, children: this.parseBodyElements(t3), props: s2 ? (0, n.parseSectionProperties)(s2, l.default) : {}, cssStyle: r3 ? this.parseBackground(r3) : {} };
          }
          parseBackground(e3) {
            var t3 = {}, r3 = m.colorAttr(e3, "color");
            return r3 && (t3["background-color"] = r3), t3;
          }
          parseBodyElements(e3) {
            var t3 = [];
            for (let r3 of l.default.elements(e3))
              switch (r3.localName) {
                case "p":
                  t3.push(this.parseParagraph(r3));
                  break;
                case "tbl":
                  t3.push(this.parseTable(r3));
                  break;
                case "sdt":
                  t3.push(...this.parseSdt(r3, (e4) => this.parseBodyElements(e4)));
              }
            return t3;
          }
          parseStylesFile(e3) {
            var t3 = [];
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "style":
                  t3.push(this.parseStyle(e4));
                  break;
                case "docDefaults":
                  t3.push(this.parseDefaultStyles(e4));
              }
            }), t3;
          }
          parseDefaultStyles(e3) {
            var t3 = { id: null, name: null, target: null, basedOn: null, styles: [] };
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "rPrDefault":
                  var r3 = l.default.element(e4, "rPr");
                  r3 && t3.styles.push({ target: "span", values: this.parseDefaultProperties(r3, {}) });
                  break;
                case "pPrDefault":
                  var a3 = l.default.element(e4, "pPr");
                  a3 && t3.styles.push({ target: "p", values: this.parseDefaultProperties(a3, {}) });
              }
            }), t3;
          }
          parseStyle(e3) {
            var t3 = { id: l.default.attr(e3, "styleId"), isDefault: l.default.boolAttr(e3, "default"), name: null, target: null, basedOn: null, styles: [], linked: null };
            switch (l.default.attr(e3, "type")) {
              case "paragraph":
                t3.target = "p";
                break;
              case "table":
                t3.target = "table";
                break;
              case "character":
                t3.target = "span";
            }
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "basedOn":
                  t3.basedOn = l.default.attr(e4, "val");
                  break;
                case "name":
                  t3.name = l.default.attr(e4, "val");
                  break;
                case "link":
                  t3.linked = l.default.attr(e4, "val");
                  break;
                case "next":
                  t3.next = l.default.attr(e4, "val");
                  break;
                case "aliases":
                  t3.aliases = l.default.attr(e4, "val").split(",");
                  break;
                case "pPr":
                  t3.styles.push({ target: "p", values: this.parseDefaultProperties(e4, {}) }), t3.paragraphProps = (0, s.parseParagraphProperties)(e4, l.default);
                  break;
                case "rPr":
                  t3.styles.push({ target: "span", values: this.parseDefaultProperties(e4, {}) }), t3.runProps = (0, o.parseRunProperties)(e4, l.default);
                  break;
                case "tblPr":
                case "tcPr":
                  t3.styles.push({ target: "td", values: this.parseDefaultProperties(e4, {}) });
                  break;
                case "tblStylePr":
                  for (let r3 of this.parseTableStyle(e4))
                    t3.styles.push(r3);
                  break;
                case "rsid":
                case "qFormat":
                case "hidden":
                case "semiHidden":
                case "unhideWhenUsed":
                case "autoRedefine":
                case "uiPriority":
                  break;
                default:
                  this.options.debug && console.warn(`DOCX: Unknown style element: ${e4.localName}`);
              }
            }), t3;
          }
          parseTableStyle(e3) {
            var t3 = [], r3 = l.default.attr(e3, "type"), a3 = "", s2 = "";
            switch (r3) {
              case "firstRow":
                s2 = ".first-row", a3 = "tr.first-row td";
                break;
              case "lastRow":
                s2 = ".last-row", a3 = "tr.last-row td";
                break;
              case "firstCol":
                s2 = ".first-col", a3 = "td.first-col";
                break;
              case "lastCol":
                s2 = ".last-col", a3 = "td.last-col";
                break;
              case "band1Vert":
                s2 = ":not(.no-vband)", a3 = "td.odd-col";
                break;
              case "band2Vert":
                s2 = ":not(.no-vband)", a3 = "td.even-col";
                break;
              case "band1Horz":
                s2 = ":not(.no-hband)", a3 = "tr.odd-row";
                break;
              case "band2Horz":
                s2 = ":not(.no-hband)", a3 = "tr.even-row";
                break;
              default:
                return [];
            }
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "pPr":
                  t3.push({ target: `${a3} p`, mod: s2, values: this.parseDefaultProperties(e4, {}) });
                  break;
                case "rPr":
                  t3.push({ target: `${a3} span`, mod: s2, values: this.parseDefaultProperties(e4, {}) });
                  break;
                case "tblPr":
                case "tcPr":
                  t3.push({ target: a3, mod: s2, values: this.parseDefaultProperties(e4, {}) });
              }
            }), t3;
          }
          parseNumberingFile(e3) {
            var t3 = [], r3 = {}, a3 = [];
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "abstractNum":
                  this.parseAbstractNumbering(e4, a3).forEach((e5) => t3.push(e5));
                  break;
                case "numPicBullet":
                  a3.push(this.parseNumberingPicBullet(e4));
                  break;
                case "num":
                  var s2 = l.default.attr(e4, "numId"), n2 = l.default.elementAttr(e4, "abstractNumId", "val");
                  r3[n2] = s2;
              }
            }), t3.forEach((e4) => e4.id = r3[e4.id]), t3;
          }
          parseNumberingPicBullet(e3) {
            var t3 = l.default.element(e3, "pict"), r3 = t3 && l.default.element(t3, "shape"), a3 = r3 && l.default.element(r3, "imagedata");
            return a3 ? { id: l.default.intAttr(e3, "numPicBulletId"), src: l.default.attr(a3, "id"), style: l.default.attr(r3, "style") } : null;
          }
          parseAbstractNumbering(e3, t3) {
            var r3 = [], a3 = l.default.attr(e3, "abstractNumId");
            return m.foreach(e3, (e4) => {
              "lvl" === e4.localName && r3.push(this.parseNumberingLevel(a3, e4, t3));
            }), r3;
          }
          parseNumberingLevel(e3, t3, r3) {
            var a3 = { id: e3, level: l.default.intAttr(t3, "ilvl"), pStyleName: void 0, pStyle: {}, rStyle: {}, suff: "tab" };
            return m.foreach(t3, (e4) => {
              switch (e4.localName) {
                case "pPr":
                  this.parseDefaultProperties(e4, a3.pStyle);
                  break;
                case "rPr":
                  this.parseDefaultProperties(e4, a3.rStyle);
                  break;
                case "lvlPicBulletId":
                  var t4 = l.default.intAttr(e4, "val");
                  a3.bullet = r3.find((e5) => e5.id == t4);
                  break;
                case "lvlText":
                  a3.levelText = l.default.attr(e4, "val");
                  break;
                case "pStyle":
                  a3.pStyleName = l.default.attr(e4, "val");
                  break;
                case "numFmt":
                  a3.format = l.default.attr(e4, "val");
                  break;
                case "suff":
                  a3.suff = l.default.attr(e4, "val");
              }
            }), a3;
          }
          parseSdt(e3, t3) {
            const r3 = l.default.element(e3, "sdtContent");
            return r3 ? t3(r3) : [];
          }
          parseInserted(e3, t3) {
            var r3, s2;
            return { type: a2.DomType.Inserted, children: null !== (s2 = null === (r3 = t3(e3)) || void 0 === r3 ? void 0 : r3.children) && void 0 !== s2 ? s2 : [] };
          }
          parseDeleted(e3, t3) {
            var r3, s2;
            return { type: a2.DomType.Deleted, children: null !== (s2 = null === (r3 = t3(e3)) || void 0 === r3 ? void 0 : r3.children) && void 0 !== s2 ? s2 : [] };
          }
          parseParagraph(e3) {
            var t3 = { type: a2.DomType.Paragraph, children: [] };
            for (let r3 of l.default.elements(e3))
              switch (r3.localName) {
                case "pPr":
                  this.parseParagraphProperties(r3, t3);
                  break;
                case "r":
                  t3.children.push(this.parseRun(r3, t3));
                  break;
                case "hyperlink":
                  t3.children.push(this.parseHyperlink(r3, t3));
                  break;
                case "bookmarkStart":
                  t3.children.push((0, i.parseBookmarkStart)(r3, l.default));
                  break;
                case "bookmarkEnd":
                  t3.children.push((0, i.parseBookmarkEnd)(r3, l.default));
                  break;
                case "oMath":
                case "oMathPara":
                  t3.children.push(this.parseMathElement(r3));
                  break;
                case "sdt":
                  t3.children.push(...this.parseSdt(r3, (e4) => this.parseParagraph(e4).children));
                  break;
                case "ins":
                  t3.children.push(this.parseInserted(r3, (e4) => this.parseParagraph(e4)));
                  break;
                case "del":
                  t3.children.push(this.parseDeleted(r3, (e4) => this.parseParagraph(e4)));
              }
            return t3;
          }
          parseParagraphProperties(e3, t3) {
            this.parseDefaultProperties(e3, t3.cssStyle = {}, null, (e4) => {
              if ((0, s.parseParagraphProperty)(e4, t3, l.default))
                return true;
              switch (e4.localName) {
                case "pStyle":
                  t3.styleName = l.default.attr(e4, "val");
                  break;
                case "cnfStyle":
                  t3.className = f.classNameOfCnfStyle(e4);
                  break;
                case "framePr":
                  this.parseFrame(e4, t3);
                  break;
                case "rPr":
                  break;
                default:
                  return false;
              }
              return true;
            });
          }
          parseFrame(e3, t3) {
            "drop" == l.default.attr(e3, "dropCap") && (t3.cssStyle.float = "left");
          }
          parseHyperlink(e3, t3) {
            var r3 = { type: a2.DomType.Hyperlink, parent: t3, children: [] }, s2 = l.default.attr(e3, "anchor"), n2 = l.default.attr(e3, "id");
            return s2 && (r3.href = "#" + s2), n2 && (r3.id = n2), m.foreach(e3, (e4) => {
              "r" === e4.localName && r3.children.push(this.parseRun(e4, r3));
            }), r3;
          }
          parseRun(e3, t3) {
            var r3 = { type: a2.DomType.Run, parent: t3, children: [] };
            return m.foreach(e3, (e4) => {
              switch ((e4 = this.checkAlternateContent(e4)).localName) {
                case "t":
                  r3.children.push({ type: a2.DomType.Text, text: e4.textContent });
                  break;
                case "delText":
                  r3.children.push({ type: a2.DomType.DeletedText, text: e4.textContent });
                  break;
                case "fldSimple":
                  r3.children.push({ type: a2.DomType.SimpleField, instruction: l.default.attr(e4, "instr"), lock: l.default.boolAttr(e4, "lock", false), dirty: l.default.boolAttr(e4, "dirty", false) });
                  break;
                case "instrText":
                  r3.fieldRun = true, r3.children.push({ type: a2.DomType.Instruction, text: e4.textContent });
                  break;
                case "fldChar":
                  r3.fieldRun = true, r3.children.push({ type: a2.DomType.ComplexField, charType: l.default.attr(e4, "fldCharType"), lock: l.default.boolAttr(e4, "lock", false), dirty: l.default.boolAttr(e4, "dirty", false) });
                  break;
                case "noBreakHyphen":
                  r3.children.push({ type: a2.DomType.NoBreakHyphen });
                  break;
                case "br":
                  r3.children.push({ type: a2.DomType.Break, break: l.default.attr(e4, "type") || "textWrapping" });
                  break;
                case "lastRenderedPageBreak":
                  r3.children.push({ type: a2.DomType.Break, break: "lastRenderedPageBreak" });
                  break;
                case "sym":
                  r3.children.push({ type: a2.DomType.Symbol, font: l.default.attr(e4, "font"), char: l.default.attr(e4, "char") });
                  break;
                case "tab":
                  r3.children.push({ type: a2.DomType.Tab });
                  break;
                case "footnoteReference":
                  r3.children.push({ type: a2.DomType.FootnoteReference, id: l.default.attr(e4, "id") });
                  break;
                case "endnoteReference":
                  r3.children.push({ type: a2.DomType.EndnoteReference, id: l.default.attr(e4, "id") });
                  break;
                case "drawing":
                  let t4 = this.parseDrawing(e4);
                  t4 && (r3.children = [t4]);
                  break;
                case "pict":
                  r3.children.push(this.parseVmlPicture(e4));
                  break;
                case "rPr":
                  this.parseRunProperties(e4, r3);
              }
            }), r3;
          }
          parseMathElement(e3) {
            const t3 = `${e3.localName}Pr`, r3 = { type: d[e3.localName], children: [] };
            for (const n2 of l.default.elements(e3))
              if (d[n2.localName])
                r3.children.push(this.parseMathElement(n2));
              else if ("r" == n2.localName) {
                var s2 = this.parseRun(n2);
                s2.type = a2.DomType.MmlRun, r3.children.push(s2);
              } else
                n2.localName == t3 && (r3.props = this.parseMathProperies(n2));
            return r3;
          }
          parseMathProperies(e3) {
            const t3 = {};
            for (const r3 of l.default.elements(e3))
              switch (r3.localName) {
                case "chr":
                  t3.char = l.default.attr(r3, "val");
                  break;
                case "degHide":
                  t3.hideDegree = l.default.boolAttr(r3, "val");
                  break;
                case "begChr":
                  t3.beginChar = l.default.attr(r3, "val");
                  break;
                case "endChr":
                  t3.endChar = l.default.attr(r3, "val");
              }
            return t3;
          }
          parseRunProperties(e3, t3) {
            this.parseDefaultProperties(e3, t3.cssStyle = {}, null, (e4) => {
              switch (e4.localName) {
                case "rStyle":
                  t3.styleName = l.default.attr(e4, "val");
                  break;
                case "vertAlign":
                  t3.verticalAlign = f.valueOfVertAlign(e4, true);
                  break;
                default:
                  return false;
              }
              return true;
            });
          }
          parseVmlPicture(e3) {
            const t3 = { type: a2.DomType.VmlPicture, children: [] };
            for (const r3 of l.default.elements(e3)) {
              const e4 = (0, u.parseVmlElement)(r3);
              e4 && t3.children.push(e4);
            }
            return t3;
          }
          checkAlternateContent(e3) {
            var t3;
            if ("AlternateContent" != e3.localName)
              return e3;
            var r3 = l.default.element(e3, "Choice");
            if (r3) {
              var a3 = l.default.attr(r3, "Requires"), s2 = e3.lookupNamespaceURI(a3);
              if (p.includes(s2))
                return r3.firstElementChild;
            }
            return null === (t3 = l.default.element(e3, "Fallback")) || void 0 === t3 ? void 0 : t3.firstElementChild;
          }
          parseDrawing(e3) {
            for (var t3 of l.default.elements(e3))
              switch (t3.localName) {
                case "inline":
                case "anchor":
                  return this.parseDrawingWrapper(t3);
              }
          }
          parseDrawingWrapper(e3) {
            var t3, r3 = { type: a2.DomType.Drawing, children: [], cssStyle: {} }, s2 = "anchor" == e3.localName;
            let n2 = null, o2 = l.default.boolAttr(e3, "simplePos"), i2 = { relative: "page", align: "left", offset: "0" }, u2 = { relative: "page", align: "top", offset: "0" };
            for (var p2 of l.default.elements(e3))
              switch (p2.localName) {
                case "simplePos":
                  o2 && (i2.offset = l.default.lengthAttr(p2, "x", c.LengthUsage.Emu), u2.offset = l.default.lengthAttr(p2, "y", c.LengthUsage.Emu));
                  break;
                case "extent":
                  r3.cssStyle.width = l.default.lengthAttr(p2, "cx", c.LengthUsage.Emu), r3.cssStyle.height = l.default.lengthAttr(p2, "cy", c.LengthUsage.Emu);
                  break;
                case "positionH":
                case "positionV":
                  if (!o2) {
                    let e4 = "positionH" == p2.localName ? i2 : u2;
                    var d2 = l.default.element(p2, "align"), h2 = l.default.element(p2, "posOffset");
                    e4.relative = null !== (t3 = l.default.attr(p2, "relativeFrom")) && void 0 !== t3 ? t3 : e4.relative, d2 && (e4.align = d2.textContent), h2 && (e4.offset = m.sizeValue(h2, c.LengthUsage.Emu));
                  }
                  break;
                case "wrapTopAndBottom":
                  n2 = "wrapTopAndBottom";
                  break;
                case "wrapNone":
                  n2 = "wrapNone";
                  break;
                case "graphic":
                  var f2 = this.parseGraphic(p2);
                  f2 && r3.children.push(f2);
              }
            return "wrapTopAndBottom" == n2 ? (r3.cssStyle.display = "block", i2.align && (r3.cssStyle["text-align"] = i2.align, r3.cssStyle.width = "100%")) : "wrapNone" == n2 ? (r3.cssStyle.display = "block", r3.cssStyle.position = "relative", r3.cssStyle.width = "0px", r3.cssStyle.height = "0px", i2.offset && (r3.cssStyle.left = i2.offset), u2.offset && (r3.cssStyle.top = u2.offset)) : !s2 || "left" != i2.align && "right" != i2.align || (r3.cssStyle.float = i2.align), r3;
          }
          parseGraphic(e3) {
            var t3 = l.default.element(e3, "graphicData");
            for (let e4 of l.default.elements(t3))
              if ("pic" === e4.localName)
                return this.parsePicture(e4);
            return null;
          }
          parsePicture(e3) {
            var t3 = { type: a2.DomType.Image, src: "", cssStyle: {} }, r3 = l.default.element(e3, "blipFill"), s2 = l.default.element(r3, "blip");
            t3.src = l.default.attr(s2, "embed");
            var n2 = l.default.element(e3, "spPr"), o2 = l.default.element(n2, "xfrm");
            for (var i2 of (t3.cssStyle.position = "relative", l.default.elements(o2)))
              switch (i2.localName) {
                case "ext":
                  t3.cssStyle.width = l.default.lengthAttr(i2, "cx", c.LengthUsage.Emu), t3.cssStyle.height = l.default.lengthAttr(i2, "cy", c.LengthUsage.Emu);
                  break;
                case "off":
                  t3.cssStyle.left = l.default.lengthAttr(i2, "x", c.LengthUsage.Emu), t3.cssStyle.top = l.default.lengthAttr(i2, "y", c.LengthUsage.Emu);
              }
            return t3;
          }
          parseTable(e3) {
            var t3 = { type: a2.DomType.Table, children: [] };
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "tr":
                  t3.children.push(this.parseTableRow(e4));
                  break;
                case "tblGrid":
                  t3.columns = this.parseTableColumns(e4);
                  break;
                case "tblPr":
                  this.parseTableProperties(e4, t3);
              }
            }), t3;
          }
          parseTableColumns(e3) {
            var t3 = [];
            return m.foreach(e3, (e4) => {
              "gridCol" === e4.localName && t3.push({ width: l.default.lengthAttr(e4, "w") });
            }), t3;
          }
          parseTableProperties(e3, t3) {
            switch (t3.cssStyle = {}, t3.cellStyle = {}, this.parseDefaultProperties(e3, t3.cssStyle, t3.cellStyle, (e4) => {
              switch (e4.localName) {
                case "tblStyle":
                  t3.styleName = l.default.attr(e4, "val");
                  break;
                case "tblLook":
                  t3.className = f.classNameOftblLook(e4);
                  break;
                case "tblpPr":
                  this.parseTablePosition(e4, t3);
                  break;
                case "tblStyleColBandSize":
                  t3.colBandSize = l.default.intAttr(e4, "val");
                  break;
                case "tblStyleRowBandSize":
                  t3.rowBandSize = l.default.intAttr(e4, "val");
                  break;
                default:
                  return false;
              }
              return true;
            }), t3.cssStyle["text-align"]) {
              case "center":
                delete t3.cssStyle["text-align"], t3.cssStyle["margin-left"] = "auto", t3.cssStyle["margin-right"] = "auto";
                break;
              case "right":
                delete t3.cssStyle["text-align"], t3.cssStyle["margin-left"] = "auto";
            }
          }
          parseTablePosition(e3, t3) {
            var r3 = l.default.lengthAttr(e3, "topFromText"), a3 = l.default.lengthAttr(e3, "bottomFromText"), s2 = l.default.lengthAttr(e3, "rightFromText"), n2 = l.default.lengthAttr(e3, "leftFromText");
            t3.cssStyle.float = "left", t3.cssStyle["margin-bottom"] = f.addSize(t3.cssStyle["margin-bottom"], a3), t3.cssStyle["margin-left"] = f.addSize(t3.cssStyle["margin-left"], n2), t3.cssStyle["margin-right"] = f.addSize(t3.cssStyle["margin-right"], s2), t3.cssStyle["margin-top"] = f.addSize(t3.cssStyle["margin-top"], r3);
          }
          parseTableRow(e3) {
            var t3 = { type: a2.DomType.Row, children: [] };
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "tc":
                  t3.children.push(this.parseTableCell(e4));
                  break;
                case "trPr":
                  this.parseTableRowProperties(e4, t3);
              }
            }), t3;
          }
          parseTableRowProperties(e3, t3) {
            t3.cssStyle = this.parseDefaultProperties(e3, {}, null, (e4) => {
              switch (e4.localName) {
                case "cnfStyle":
                  t3.className = f.classNameOfCnfStyle(e4);
                  break;
                case "tblHeader":
                  t3.isHeader = l.default.boolAttr(e4, "val");
                  break;
                default:
                  return false;
              }
              return true;
            });
          }
          parseTableCell(e3) {
            var t3 = { type: a2.DomType.Cell, children: [] };
            return m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "tbl":
                  t3.children.push(this.parseTable(e4));
                  break;
                case "p":
                  t3.children.push(this.parseParagraph(e4));
                  break;
                case "tcPr":
                  this.parseTableCellProperties(e4, t3);
              }
            }), t3;
          }
          parseTableCellProperties(e3, t3) {
            t3.cssStyle = this.parseDefaultProperties(e3, {}, null, (e4) => {
              var r3;
              switch (e4.localName) {
                case "gridSpan":
                  t3.span = l.default.intAttr(e4, "val", null);
                  break;
                case "vMerge":
                  t3.verticalMerge = null !== (r3 = l.default.attr(e4, "val")) && void 0 !== r3 ? r3 : "continue";
                  break;
                case "cnfStyle":
                  t3.className = f.classNameOfCnfStyle(e4);
                  break;
                default:
                  return false;
              }
              return true;
            });
          }
          parseDefaultProperties(e3, r3 = null, a3 = null, s2 = null) {
            return r3 = r3 || {}, m.foreach(e3, (n2) => {
              if (!(null == s2 ? void 0 : s2(n2)))
                switch (n2.localName) {
                  case "jc":
                    r3["text-align"] = f.valueOfJc(n2);
                    break;
                  case "textAlignment":
                    r3["vertical-align"] = f.valueOfTextAlignment(n2);
                    break;
                  case "color":
                    r3.color = m.colorAttr(n2, "val", null, t2.autos.color);
                    break;
                  case "sz":
                    r3["font-size"] = r3["min-height"] = l.default.lengthAttr(n2, "val", c.LengthUsage.FontSize);
                    break;
                  case "shd":
                    r3["background-color"] = m.colorAttr(n2, "fill", null, t2.autos.shd);
                    break;
                  case "highlight":
                    r3["background-color"] = m.colorAttr(n2, "val", null, t2.autos.highlight);
                    break;
                  case "vertAlign":
                    break;
                  case "position":
                    r3.verticalAlign = l.default.lengthAttr(n2, "val", c.LengthUsage.FontSize);
                    break;
                  case "tcW":
                    if (this.options.ignoreWidth)
                      break;
                  case "tblW":
                    r3.width = f.valueOfSize(n2, "w");
                    break;
                  case "trHeight":
                    this.parseTrHeight(n2, r3);
                    break;
                  case "strike":
                    r3["text-decoration"] = l.default.boolAttr(n2, "val", true) ? "line-through" : "none";
                    break;
                  case "b":
                    r3["font-weight"] = l.default.boolAttr(n2, "val", true) ? "bold" : "normal";
                    break;
                  case "i":
                    r3["font-style"] = l.default.boolAttr(n2, "val", true) ? "italic" : "normal";
                    break;
                  case "caps":
                    r3["text-transform"] = l.default.boolAttr(n2, "val", true) ? "uppercase" : "none";
                    break;
                  case "smallCaps":
                    r3["text-transform"] = l.default.boolAttr(n2, "val", true) ? "lowercase" : "none";
                    break;
                  case "u":
                    this.parseUnderline(n2, r3);
                    break;
                  case "ind":
                  case "tblInd":
                    this.parseIndentation(n2, r3);
                    break;
                  case "rFonts":
                    this.parseFont(n2, r3);
                    break;
                  case "tblBorders":
                    this.parseBorderProperties(n2, a3 || r3);
                    break;
                  case "tblCellSpacing":
                    r3["border-spacing"] = f.valueOfMargin(n2), r3["border-collapse"] = "separate";
                    break;
                  case "pBdr":
                    this.parseBorderProperties(n2, r3);
                    break;
                  case "bdr":
                    r3.border = f.valueOfBorder(n2);
                    break;
                  case "tcBorders":
                    this.parseBorderProperties(n2, r3);
                    break;
                  case "vanish":
                    l.default.boolAttr(n2, "val", true) && (r3.display = "none");
                    break;
                  case "kern":
                  case "noWrap":
                    break;
                  case "tblCellMar":
                  case "tcMar":
                    this.parseMarginProperties(n2, a3 || r3);
                    break;
                  case "tblLayout":
                    r3["table-layout"] = f.valueOfTblLayout(n2);
                    break;
                  case "vAlign":
                    r3["vertical-align"] = f.valueOfTextAlignment(n2);
                    break;
                  case "spacing":
                    "pPr" == e3.localName && this.parseSpacing(n2, r3);
                    break;
                  case "wordWrap":
                    l.default.boolAttr(n2, "val") && (r3["overflow-wrap"] = "break-word");
                    break;
                  case "bCs":
                  case "iCs":
                  case "szCs":
                  case "tabs":
                  case "outlineLvl":
                  case "contextualSpacing":
                  case "tblStyleColBandSize":
                  case "tblStyleRowBandSize":
                  case "webHidden":
                  case "pageBreakBefore":
                  case "suppressLineNumbers":
                  case "keepLines":
                  case "keepNext":
                  case "lang":
                  case "widowControl":
                  case "bidi":
                  case "rtl":
                  case "noProof":
                    break;
                  default:
                    this.options.debug && console.warn(`DOCX: Unknown document element: ${e3.localName}.${n2.localName}`);
                }
            }), r3;
          }
          parseUnderline(e3, t3) {
            var r3 = l.default.attr(e3, "val");
            if (null != r3) {
              switch (r3) {
                case "dash":
                case "dashDotDotHeavy":
                case "dashDotHeavy":
                case "dashedHeavy":
                case "dashLong":
                case "dashLongHeavy":
                case "dotDash":
                case "dotDotDash":
                  t3["text-decoration-style"] = "dashed";
                  break;
                case "dotted":
                case "dottedHeavy":
                  t3["text-decoration-style"] = "dotted";
                  break;
                case "double":
                  t3["text-decoration-style"] = "double";
                  break;
                case "single":
                case "thick":
                case "words":
                  t3["text-decoration"] = "underline";
                  break;
                case "wave":
                case "wavyDouble":
                case "wavyHeavy":
                  t3["text-decoration-style"] = "wavy";
                  break;
                case "none":
                  t3["text-decoration"] = "none";
              }
              var a3 = m.colorAttr(e3, "color");
              a3 && (t3["text-decoration-color"] = a3);
            }
          }
          parseFont(e3, t3) {
            var r3 = [l.default.attr(e3, "ascii"), f.themeValue(e3, "asciiTheme")].filter((e4) => e4).join(", ");
            r3.length > 0 && (t3["font-family"] = r3);
          }
          parseIndentation(e3, t3) {
            var r3 = l.default.lengthAttr(e3, "firstLine"), a3 = l.default.lengthAttr(e3, "hanging"), s2 = l.default.lengthAttr(e3, "left"), n2 = l.default.lengthAttr(e3, "start"), o2 = l.default.lengthAttr(e3, "right"), i2 = l.default.lengthAttr(e3, "end");
            r3 && (t3["text-indent"] = r3), a3 && (t3["text-indent"] = `-${a3}`), (s2 || n2) && (t3["margin-left"] = s2 || n2), (o2 || i2) && (t3["margin-right"] = o2 || i2);
          }
          parseSpacing(e3, t3) {
            var r3 = l.default.lengthAttr(e3, "before"), a3 = l.default.lengthAttr(e3, "after"), s2 = l.default.intAttr(e3, "line", null), n2 = l.default.attr(e3, "lineRule");
            if (r3 && (t3["margin-top"] = r3), a3 && (t3["margin-bottom"] = a3), null !== s2)
              switch (n2) {
                case "auto":
                  t3["line-height"] = `${(s2 / 240).toFixed(2)}`;
                  break;
                case "atLeast":
                  t3["line-height"] = `calc(100% + ${s2 / 20}pt)`;
                  break;
                default:
                  t3["line-height"] = t3["min-height"] = s2 / 20 + "pt";
              }
          }
          parseMarginProperties(e3, t3) {
            m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "left":
                  t3["padding-left"] = f.valueOfMargin(e4);
                  break;
                case "right":
                  t3["padding-right"] = f.valueOfMargin(e4);
                  break;
                case "top":
                  t3["padding-top"] = f.valueOfMargin(e4);
                  break;
                case "bottom":
                  t3["padding-bottom"] = f.valueOfMargin(e4);
              }
            });
          }
          parseTrHeight(e3, t3) {
            l.default.attr(e3, "hRule"), t3.height = l.default.lengthAttr(e3, "val");
          }
          parseBorderProperties(e3, t3) {
            m.foreach(e3, (e4) => {
              switch (e4.localName) {
                case "start":
                case "left":
                  t3["border-left"] = f.valueOfBorder(e4);
                  break;
                case "end":
                case "right":
                  t3["border-right"] = f.valueOfBorder(e4);
                  break;
                case "top":
                  t3["border-top"] = f.valueOfBorder(e4);
                  break;
                case "bottom":
                  t3["border-bottom"] = f.valueOfBorder(e4);
              }
            });
          }
        };
        const h = ["black", "blue", "cyan", "darkBlue", "darkCyan", "darkGray", "darkGreen", "darkMagenta", "darkRed", "darkYellow", "green", "lightGray", "magenta", "none", "red", "white", "yellow"];
        class m {
          static foreach(e3, t3) {
            for (var r3 = 0; r3 < e3.childNodes.length; r3++) {
              let a3 = e3.childNodes[r3];
              a3.nodeType == Node.ELEMENT_NODE && t3(a3);
            }
          }
          static colorAttr(e3, t3, r3 = null, a3 = "black") {
            var s2 = l.default.attr(e3, t3);
            if (s2)
              return "auto" == s2 ? a3 : h.includes(s2) ? s2 : `#${s2}`;
            var n2 = l.default.attr(e3, "themeColor");
            return n2 ? `var(--docx-${n2}-color)` : r3;
          }
          static sizeValue(e3, t3 = c.LengthUsage.Dxa) {
            return (0, c.convertLength)(e3.textContent, t3);
          }
        }
        class f {
          static themeValue(e3, t3) {
            var r3 = l.default.attr(e3, t3);
            return r3 ? `var(--docx-${r3}-font)` : null;
          }
          static valueOfSize(e3, t3) {
            var r3 = c.LengthUsage.Dxa;
            switch (l.default.attr(e3, "type")) {
              case "dxa":
                break;
              case "pct":
                r3 = c.LengthUsage.Percent;
                break;
              case "auto":
                return "auto";
            }
            return l.default.lengthAttr(e3, t3, r3);
          }
          static valueOfMargin(e3) {
            return l.default.lengthAttr(e3, "w");
          }
          static valueOfBorder(e3) {
            if ("nil" == l.default.attr(e3, "val"))
              return "none";
            var r3 = m.colorAttr(e3, "color");
            return `${l.default.lengthAttr(e3, "sz", c.LengthUsage.Border)} solid ${"auto" == r3 ? t2.autos.borderColor : r3}`;
          }
          static valueOfTblLayout(e3) {
            return "fixed" == l.default.attr(e3, "val") ? "fixed" : "auto";
          }
          static classNameOfCnfStyle(e3) {
            const t3 = l.default.attr(e3, "val");
            return ["first-row", "last-row", "first-col", "last-col", "odd-col", "even-col", "odd-row", "even-row", "ne-cell", "nw-cell", "se-cell", "sw-cell"].filter((e4, r3) => "1" == t3[r3]).join(" ");
          }
          static valueOfJc(e3) {
            var t3 = l.default.attr(e3, "val");
            switch (t3) {
              case "start":
              case "left":
                return "left";
              case "center":
                return "center";
              case "end":
              case "right":
                return "right";
              case "both":
                return "justify";
            }
            return t3;
          }
          static valueOfVertAlign(e3, t3 = false) {
            var r3 = l.default.attr(e3, "val");
            switch (r3) {
              case "subscript":
                return "sub";
              case "superscript":
                return t3 ? "sup" : "super";
            }
            return t3 ? null : r3;
          }
          static valueOfTextAlignment(e3) {
            var t3 = l.default.attr(e3, "val");
            switch (t3) {
              case "auto":
              case "baseline":
                return "baseline";
              case "top":
                return "top";
              case "center":
                return "middle";
              case "bottom":
                return "bottom";
            }
            return t3;
          }
          static addSize(e3, t3) {
            return null == e3 ? t3 : null == t3 ? e3 : `calc(${e3} + ${t3})`;
          }
          static classNameOftblLook(e3) {
            const t3 = l.default.hexAttr(e3, "val", 0);
            let r3 = "";
            return (l.default.boolAttr(e3, "firstRow") || 32 & t3) && (r3 += " first-row"), (l.default.boolAttr(e3, "lastRow") || 64 & t3) && (r3 += " last-row"), (l.default.boolAttr(e3, "firstColumn") || 128 & t3) && (r3 += " first-col"), (l.default.boolAttr(e3, "lastColumn") || 256 & t3) && (r3 += " last-col"), (l.default.boolAttr(e3, "noHBand") || 512 & t3) && (r3 += " no-hband"), (l.default.boolAttr(e3, "noVBand") || 1024 & t3) && (r3 += " no-vband"), r3.trim();
          }
        }
      }, 162: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.CorePropsPart = void 0;
        const a2 = r2(530), s = r2(614);
        class n extends a2.Part {
          parseXml(e3) {
            this.props = (0, s.parseCoreProps)(e3, this._package.xmlParser);
          }
        }
        t2.CorePropsPart = n;
      }, 614: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseCoreProps = void 0, t2.parseCoreProps = function(e3, t3) {
          const r2 = {};
          for (let a2 of t3.elements(e3))
            switch (a2.localName) {
              case "title":
                r2.title = a2.textContent;
                break;
              case "description":
                r2.description = a2.textContent;
                break;
              case "subject":
                r2.subject = a2.textContent;
                break;
              case "creator":
                r2.creator = a2.textContent;
                break;
              case "keywords":
                r2.keywords = a2.textContent;
                break;
              case "language":
                r2.language = a2.textContent;
                break;
              case "lastModifiedBy":
                r2.lastModifiedBy = a2.textContent;
                break;
              case "revision":
                a2.textContent && (r2.revision = parseInt(a2.textContent));
            }
          return r2;
        };
      }, 177: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.CustomPropsPart = void 0;
        const a2 = r2(530), s = r2(821);
        class n extends a2.Part {
          parseXml(e3) {
            this.props = (0, s.parseCustomProps)(e3, this._package.xmlParser);
          }
        }
        t2.CustomPropsPart = n;
      }, 821: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseCustomProps = void 0, t2.parseCustomProps = function(e3, t3) {
          return t3.elements(e3, "property").map((e4) => {
            const r2 = e4.firstChild;
            return { formatId: t3.attr(e4, "fmtid"), name: t3.attr(e4, "name"), type: r2.nodeName, value: r2.textContent };
          });
        };
      }, 665: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.ExtendedPropsPart = void 0;
        const a2 = r2(530), s = r2(668);
        class n extends a2.Part {
          parseXml(e3) {
            this.props = (0, s.parseExtendedProps)(e3, this._package.xmlParser);
          }
        }
        t2.ExtendedPropsPart = n;
      }, 668: (e2, t2) => {
        function r2(e3) {
          if (void 0 !== e3)
            return parseInt(e3);
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseExtendedProps = void 0, t2.parseExtendedProps = function(e3, t3) {
          const a2 = {};
          for (let s of t3.elements(e3))
            switch (s.localName) {
              case "Template":
                a2.template = s.textContent;
                break;
              case "Pages":
                a2.pages = r2(s.textContent);
                break;
              case "Words":
                a2.words = r2(s.textContent);
                break;
              case "Characters":
                a2.characters = r2(s.textContent);
                break;
              case "Application":
                a2.application = s.textContent;
                break;
              case "Lines":
                a2.lines = r2(s.textContent);
                break;
              case "Paragraphs":
                a2.paragraphs = r2(s.textContent);
                break;
              case "Company":
                a2.company = s.textContent;
                break;
              case "AppVersion":
                a2.appVersion = s.textContent;
            }
          return a2;
        };
      }, 172: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseBookmarkEnd = t2.parseBookmarkStart = void 0;
        const a2 = r2(120);
        t2.parseBookmarkStart = function(e3, t3) {
          return { type: a2.DomType.BookmarkStart, id: t3.attr(e3, "id"), name: t3.attr(e3, "name"), colFirst: t3.intAttr(e3, "colFirst"), colLast: t3.intAttr(e3, "colLast") };
        }, t2.parseBookmarkEnd = function(e3, t3) {
          return { type: a2.DomType.BookmarkEnd, id: t3.attr(e3, "id") };
        };
      }, 191: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseBorders = t2.parseBorder = void 0;
        const a2 = r2(149);
        function s(e3, t3) {
          return { type: t3.attr(e3, "val"), color: t3.attr(e3, "color"), size: t3.lengthAttr(e3, "sz", a2.LengthUsage.Border), offset: t3.lengthAttr(e3, "space", a2.LengthUsage.Point), frame: t3.boolAttr(e3, "frame"), shadow: t3.boolAttr(e3, "shadow") };
        }
        t2.parseBorder = s, t2.parseBorders = function(e3, t3) {
          var r3 = {};
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "left":
                r3.left = s(a3, t3);
                break;
              case "top":
                r3.top = s(a3, t3);
                break;
              case "right":
                r3.right = s(a3, t3);
                break;
              case "bottom":
                r3.bottom = s(a3, t3);
            }
          return r3;
        };
      }, 149: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseCommonProperty = t2.convertPercentage = t2.convertBoolean = t2.convertLength = t2.LengthUsage = t2.ns = void 0, t2.ns = { wordml: "http://schemas.openxmlformats.org/wordprocessingml/2006/main", drawingml: "http://schemas.openxmlformats.org/drawingml/2006/main", picture: "http://schemas.openxmlformats.org/drawingml/2006/picture", compatibility: "http://schemas.openxmlformats.org/markup-compatibility/2006", math: "http://schemas.openxmlformats.org/officeDocument/2006/math" }, t2.LengthUsage = { Dxa: { mul: 0.05, unit: "pt" }, Emu: { mul: 1 / 12700, unit: "pt" }, FontSize: { mul: 0.5, unit: "pt" }, Border: { mul: 0.125, unit: "pt" }, Point: { mul: 1, unit: "pt" }, Percent: { mul: 0.02, unit: "%" }, LineHeight: { mul: 1 / 240, unit: "" }, VmlEmu: { mul: 1 / 12700, unit: "" } }, t2.convertLength = function(e3, r2 = t2.LengthUsage.Dxa) {
          return null == e3 || /.+(p[xt]|[%])$/.test(e3) ? e3 : `${(parseInt(e3) * r2.mul).toFixed(2)}${r2.unit}`;
        }, t2.convertBoolean = function(e3, t3 = false) {
          switch (e3) {
            case "1":
            case "on":
            case "true":
              return true;
            case "0":
            case "off":
            case "false":
              return false;
            default:
              return t3;
          }
        }, t2.convertPercentage = function(e3) {
          return e3 ? parseInt(e3) / 100 : null;
        }, t2.parseCommonProperty = function(e3, r2, a2) {
          if (e3.namespaceURI != t2.ns.wordml)
            return false;
          switch (e3.localName) {
            case "color":
              r2.color = a2.attr(e3, "val");
              break;
            case "sz":
              r2.fontSize = a2.lengthAttr(e3, "val", t2.LengthUsage.FontSize);
              break;
            default:
              return false;
          }
          return true;
        };
      }, 448: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.DocumentPart = void 0;
        const a2 = r2(530);
        class s extends a2.Part {
          constructor(e3, t3, r3) {
            super(e3, t3), this._documentParser = r3;
          }
          parseXml(e3) {
            this.body = this._documentParser.parseDocumentFile(e3);
          }
        }
        t2.DocumentPart = s;
      }, 120: (e2, t2) => {
        var r2;
        Object.defineProperty(t2, "__esModule", { value: true }), t2.DomType = void 0, function(e3) {
          e3.Document = "document", e3.Paragraph = "paragraph", e3.Run = "run", e3.Break = "break", e3.NoBreakHyphen = "noBreakHyphen", e3.Table = "table", e3.Row = "row", e3.Cell = "cell", e3.Hyperlink = "hyperlink", e3.Drawing = "drawing", e3.Image = "image", e3.Text = "text", e3.Tab = "tab", e3.Symbol = "symbol", e3.BookmarkStart = "bookmarkStart", e3.BookmarkEnd = "bookmarkEnd", e3.Footer = "footer", e3.Header = "header", e3.FootnoteReference = "footnoteReference", e3.EndnoteReference = "endnoteReference", e3.Footnote = "footnote", e3.Endnote = "endnote", e3.SimpleField = "simpleField", e3.ComplexField = "complexField", e3.Instruction = "instruction", e3.VmlPicture = "vmlPicture", e3.MmlMath = "mmlMath", e3.MmlMathParagraph = "mmlMathParagraph", e3.MmlFraction = "mmlFraction", e3.MmlNumerator = "mmlNumerator", e3.MmlDenominator = "mmlDenominator", e3.MmlRadical = "mmlRadical", e3.MmlBase = "mmlBase", e3.MmlDegree = "mmlDegree", e3.MmlSuperscript = "mmlSuperscript", e3.MmlSubscript = "mmlSubscript", e3.MmlSubArgument = "mmlSubArgument", e3.MmlSuperArgument = "mmlSuperArgument", e3.MmlNary = "mmlNary", e3.MmlDelimiter = "mmlDelimiter", e3.MmlRun = "mmlRun", e3.VmlElement = "vmlElement", e3.Inserted = "inserted", e3.Deleted = "deleted", e3.DeletedText = "deletedText";
        }(r2 || (t2.DomType = r2 = {}));
      }, 931: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseLineSpacing = void 0, t2.parseLineSpacing = function(e3, t3) {
          return { before: t3.lengthAttr(e3, "before"), after: t3.lengthAttr(e3, "after"), line: t3.intAttr(e3, "line"), lineRule: t3.attr(e3, "lineRule") };
        };
      }, 109: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseNumbering = t2.parseTabs = t2.parseParagraphProperty = t2.parseParagraphProperties = void 0;
        const a2 = r2(149), s = r2(59), n = r2(931), l = r2(488);
        function o(e3, t3, r3) {
          if (e3.namespaceURI != a2.ns.wordml)
            return false;
          if ((0, a2.parseCommonProperty)(e3, t3, r3))
            return true;
          switch (e3.localName) {
            case "tabs":
              t3.tabs = i(e3, r3);
              break;
            case "sectPr":
              t3.sectionProps = (0, s.parseSectionProperties)(e3, r3);
              break;
            case "numPr":
              t3.numbering = c(e3, r3);
              break;
            case "spacing":
              return t3.lineSpacing = (0, n.parseLineSpacing)(e3, r3), false;
            case "textAlignment":
              return t3.textAlignment = r3.attr(e3, "val"), false;
            case "keepNext":
              t3.keepLines = r3.boolAttr(e3, "val", true);
              break;
            case "keepNext":
              t3.keepNext = r3.boolAttr(e3, "val", true);
              break;
            case "pageBreakBefore":
              t3.pageBreakBefore = r3.boolAttr(e3, "val", true);
              break;
            case "outlineLvl":
              t3.outlineLevel = r3.intAttr(e3, "val");
              break;
            case "pStyle":
              t3.styleName = r3.attr(e3, "val");
              break;
            case "rPr":
              t3.runProps = (0, l.parseRunProperties)(e3, r3);
              break;
            default:
              return false;
          }
          return true;
        }
        function i(e3, t3) {
          return t3.elements(e3, "tab").map((e4) => ({ position: t3.lengthAttr(e4, "pos"), leader: t3.attr(e4, "leader"), style: t3.attr(e4, "val") }));
        }
        function c(e3, t3) {
          var r3 = {};
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "numId":
                r3.id = t3.attr(a3, "val");
                break;
              case "ilvl":
                r3.level = t3.intAttr(a3, "val");
            }
          return r3;
        }
        t2.parseParagraphProperties = function(e3, t3) {
          let r3 = {};
          for (let a3 of t3.elements(e3))
            o(a3, r3, t3);
          return r3;
        }, t2.parseParagraphProperty = o, t2.parseTabs = i, t2.parseNumbering = c;
      }, 488: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseRunProperty = t2.parseRunProperties = void 0;
        const a2 = r2(149);
        function s(e3, t3, r3) {
          return !!(0, a2.parseCommonProperty)(e3, t3, r3);
        }
        t2.parseRunProperties = function(e3, t3) {
          let r3 = {};
          for (let a3 of t3.elements(e3))
            s(a3, r3, t3);
          return r3;
        }, t2.parseRunProperty = s;
      }, 59: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseSectionProperties = t2.SectionType = void 0;
        const a2 = r2(472), s = r2(191);
        var n;
        function l(e3, t3) {
          return { numberOfColumns: t3.intAttr(e3, "num"), space: t3.lengthAttr(e3, "space"), separator: t3.boolAttr(e3, "sep"), equalWidth: t3.boolAttr(e3, "equalWidth", true), columns: t3.elements(e3, "col").map((e4) => ({ width: t3.lengthAttr(e4, "w"), space: t3.lengthAttr(e4, "space") })) };
        }
        function o(e3, t3) {
          return { chapSep: t3.attr(e3, "chapSep"), chapStyle: t3.attr(e3, "chapStyle"), format: t3.attr(e3, "fmt"), start: t3.intAttr(e3, "start") };
        }
        function i(e3, t3) {
          return { id: t3.attr(e3, "id"), type: t3.attr(e3, "type") };
        }
        !function(e3) {
          e3.Continuous = "continuous", e3.NextPage = "nextPage", e3.NextColumn = "nextColumn", e3.EvenPage = "evenPage", e3.OddPage = "oddPage";
        }(n || (t2.SectionType = n = {})), t2.parseSectionProperties = function(e3, t3 = a2.default) {
          var r3, n2, c = {};
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "pgSz":
                c.pageSize = { width: t3.lengthAttr(a3, "w"), height: t3.lengthAttr(a3, "h"), orientation: t3.attr(a3, "orient") };
                break;
              case "type":
                c.type = t3.attr(a3, "val");
                break;
              case "pgMar":
                c.pageMargins = { left: t3.lengthAttr(a3, "left"), right: t3.lengthAttr(a3, "right"), top: t3.lengthAttr(a3, "top"), bottom: t3.lengthAttr(a3, "bottom"), header: t3.lengthAttr(a3, "header"), footer: t3.lengthAttr(a3, "footer"), gutter: t3.lengthAttr(a3, "gutter") };
                break;
              case "cols":
                c.columns = l(a3, t3);
                break;
              case "headerReference":
                (null !== (r3 = c.headerRefs) && void 0 !== r3 ? r3 : c.headerRefs = []).push(i(a3, t3));
                break;
              case "footerReference":
                (null !== (n2 = c.footerRefs) && void 0 !== n2 ? n2 : c.footerRefs = []).push(i(a3, t3));
                break;
              case "titlePg":
                c.titlePage = t3.boolAttr(a3, "val", true);
                break;
              case "pgBorders":
                c.pageBorders = (0, s.parseBorders)(a3, t3);
                break;
              case "pgNumType":
                c.pageNumber = o(a3, t3);
            }
          return c;
        };
      }, 667: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.renderAsync = t2.praseAsync = t2.defaultOptions = void 0;
        const a2 = r2(213), s = r2(168), n = r2(932);
        t2.defaultOptions = { ignoreHeight: false, ignoreWidth: false, ignoreFonts: false, breakPages: true, debug: false, experimental: false, className: "docx", inWrapper: true, trimXmlDeclaration: true, ignoreLastRenderedPageBreak: true, renderHeaders: true, renderFooters: true, renderFootnotes: true, renderEndnotes: true, useBase64URL: false, useMathMLPolyfill: false, renderChanges: false }, t2.praseAsync = function(e3, r3 = null) {
          const n2 = Object.assign(Object.assign({}, t2.defaultOptions), r3);
          return a2.WordDocument.load(e3, new s.DocumentParser(n2), n2);
        }, t2.renderAsync = async function(e3, r3, l = null, o = null) {
          const i = Object.assign(Object.assign({}, t2.defaultOptions), o), c = new n.HtmlRenderer(window.document), u = await a2.WordDocument.load(e3, new s.DocumentParser(i), i);
          return c.render(u, r3, l, i), u;
        };
      }, 380: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.FontTablePart = void 0;
        const a2 = r2(530), s = r2(512);
        class n extends a2.Part {
          parseXml(e3) {
            this.fonts = (0, s.parseFonts)(e3, this._package.xmlParser);
          }
        }
        t2.FontTablePart = n;
      }, 512: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseEmbedFontRef = t2.parseFont = t2.parseFonts = void 0;
        const r2 = { embedRegular: "regular", embedBold: "bold", embedItalic: "italic", embedBoldItalic: "boldItalic" };
        function a2(e3, t3) {
          let r3 = { name: t3.attr(e3, "name"), embedFontRefs: [] };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "family":
                r3.family = t3.attr(a3, "val");
                break;
              case "altName":
                r3.altName = t3.attr(a3, "val");
                break;
              case "embedRegular":
              case "embedBold":
              case "embedItalic":
              case "embedBoldItalic":
                r3.embedFontRefs.push(s(a3, t3));
            }
          return r3;
        }
        function s(e3, t3) {
          return { id: t3.attr(e3, "id"), key: t3.attr(e3, "fontKey"), type: r2[e3.localName] };
        }
        t2.parseFonts = function(e3, t3) {
          return t3.elements(e3).map((e4) => a2(e4, t3));
        }, t2.parseFont = a2, t2.parseEmbedFontRef = s;
      }, 984: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.WmlFooter = t2.WmlHeader = void 0;
        const a2 = r2(120);
        t2.WmlHeader = class {
          constructor() {
            this.type = a2.DomType.Header, this.children = [], this.cssStyle = {};
          }
        }, t2.WmlFooter = class {
          constructor() {
            this.type = a2.DomType.Footer, this.children = [], this.cssStyle = {};
          }
        };
      }, 985: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.FooterPart = t2.HeaderPart = t2.BaseHeaderFooterPart = void 0;
        const a2 = r2(530), s = r2(984);
        class n extends a2.Part {
          constructor(e3, t3, r3) {
            super(e3, t3), this._documentParser = r3;
          }
          parseXml(e3) {
            this.rootElement = this.createRootElement(), this.rootElement.children = this._documentParser.parseBodyElements(e3);
          }
        }
        t2.BaseHeaderFooterPart = n, t2.HeaderPart = class extends n {
          createRootElement() {
            return new s.WmlHeader();
          }
        }, t2.FooterPart = class extends n {
          createRootElement() {
            return new s.WmlFooter();
          }
        };
      }, 932: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.HtmlRenderer = void 0;
        const a2 = r2(120), s = r2(593), n = r2(630), l = r2(438), o = "http://www.w3.org/1998/Math/MathML";
        function i(e3, t3, r3) {
          return u(void 0, e3, t3, r3);
        }
        function c(e3, t3, r3) {
          return u("http://www.w3.org/2000/svg", e3, t3, r3);
        }
        function u(e3, t3, r3, a3) {
          var s2 = e3 ? document.createElementNS(e3, t3) : document.createElement(t3);
          return Object.assign(s2, r3), a3 && d(s2, a3), s2;
        }
        function p(e3) {
          e3.innerHTML = "";
        }
        function d(e3, t3) {
          t3.forEach((t4) => e3.appendChild((0, s.isString)(t4) ? document.createTextNode(t4) : t4));
        }
        function h(e3) {
          return i("style", { innerHTML: e3 });
        }
        function m(e3, t3) {
          e3.appendChild(document.createComment(t3));
        }
        t2.HtmlRenderer = class {
          constructor(e3) {
            this.htmlDocument = e3, this.className = "docx", this.styleMap = {}, this.currentPart = null, this.tableVerticalMerges = [], this.currentVerticalMerge = null, this.tableCellPositions = [], this.currentCellPosition = null, this.footnoteMap = {}, this.endnoteMap = {}, this.currentEndnoteIds = [], this.usedHederFooterParts = [], this.currentTabs = [], this.tabsTimeout = 0, this.createElement = i;
          }
          render(e3, t3, r3 = null, a3) {
            var n2;
            this.document = e3, this.options = a3, this.className = a3.className, this.rootSelector = a3.inWrapper ? `.${this.className}-wrapper` : ":root", this.styleMap = null, p(r3 = r3 || t3), p(t3), m(r3, "docxjs library predefined styles"), r3.appendChild(this.renderDefaultStyle()), !window.MathMLElement && a3.useMathMLPolyfill && (m(r3, "docxjs mathml polyfill styles"), r3.appendChild(h(l.default))), e3.themePart && (m(r3, "docxjs document theme values"), this.renderTheme(e3.themePart, r3)), null != e3.stylesPart && (this.styleMap = this.processStyles(e3.stylesPart.styles), m(r3, "docxjs document styles"), r3.appendChild(this.renderStyles(e3.stylesPart.styles))), e3.numberingPart && (this.prodessNumberings(e3.numberingPart.domNumberings), m(r3, "docxjs document numbering styles"), r3.appendChild(this.renderNumbering(e3.numberingPart.domNumberings, r3))), e3.footnotesPart && (this.footnoteMap = (0, s.keyBy)(e3.footnotesPart.notes, (e4) => e4.id)), e3.endnotesPart && (this.endnoteMap = (0, s.keyBy)(e3.endnotesPart.notes, (e4) => e4.id)), e3.settingsPart && (this.defaultTabSize = null === (n2 = e3.settingsPart.settings) || void 0 === n2 ? void 0 : n2.defaultTabStop), !a3.ignoreFonts && e3.fontTablePart && this.renderFontTable(e3.fontTablePart, r3);
            var o2 = this.renderSections(e3.documentPart.body);
            this.options.inWrapper ? t3.appendChild(this.renderWrapper(o2)) : d(t3, o2), this.refreshTabStops();
          }
          renderTheme(e3, t3) {
            var r3, a3;
            const s2 = {}, n2 = null === (r3 = e3.theme) || void 0 === r3 ? void 0 : r3.fontScheme;
            n2 && (n2.majorFont && (s2["--docx-majorHAnsi-font"] = n2.majorFont.latinTypeface), n2.minorFont && (s2["--docx-minorHAnsi-font"] = n2.minorFont.latinTypeface));
            const l2 = null === (a3 = e3.theme) || void 0 === a3 ? void 0 : a3.colorScheme;
            if (l2)
              for (let [e4, t4] of Object.entries(l2.colors))
                s2[`--docx-${e4}-color`] = `#${t4}`;
            const o2 = this.styleToString(`.${this.className}`, s2);
            t3.appendChild(h(o2));
          }
          renderFontTable(e3, t3) {
            for (let r3 of e3.fonts)
              for (let e4 of r3.embedFontRefs)
                this.document.loadFont(e4.id, e4.key).then((a3) => {
                  const s2 = { "font-family": r3.name, src: `url(${a3})` };
                  "bold" != e4.type && "boldItalic" != e4.type || (s2["font-weight"] = "bold"), "italic" != e4.type && "boldItalic" != e4.type || (s2["font-style"] = "italic"), m(t3, `docxjs ${r3.name} font`);
                  const n2 = this.styleToString("@font-face", s2);
                  t3.appendChild(h(n2)), this.refreshTabStops();
                });
          }
          processStyleName(e3) {
            return e3 ? `${this.className}_${(0, s.escapeClassName)(e3)}` : this.className;
          }
          processStyles(e3) {
            const t3 = (0, s.keyBy)(e3.filter((e4) => null != e4.id), (e4) => e4.id);
            for (const a3 of e3.filter((e4) => e4.basedOn)) {
              var r3 = t3[a3.basedOn];
              if (r3) {
                a3.paragraphProps = (0, s.mergeDeep)(a3.paragraphProps, r3.paragraphProps), a3.runProps = (0, s.mergeDeep)(a3.runProps, r3.runProps);
                for (const e4 of r3.styles) {
                  const t4 = a3.styles.find((t5) => t5.target == e4.target);
                  t4 ? this.copyStyleProperties(e4.values, t4.values) : a3.styles.push(Object.assign(Object.assign({}, e4), { values: Object.assign({}, e4.values) }));
                }
              } else
                this.options.debug && console.warn(`Can't find base style ${a3.basedOn}`);
            }
            for (let t4 of e3)
              t4.cssName = this.processStyleName(t4.id);
            return t3;
          }
          prodessNumberings(e3) {
            var t3;
            for (let r3 of e3.filter((e4) => e4.pStyleName)) {
              const e4 = this.findStyle(r3.pStyleName);
              (null === (t3 = null == e4 ? void 0 : e4.paragraphProps) || void 0 === t3 ? void 0 : t3.numbering) && (e4.paragraphProps.numbering.level = r3.level);
            }
          }
          processElement(e3) {
            if (e3.children)
              for (var t3 of e3.children)
                t3.parent = e3, t3.type == a2.DomType.Table ? this.processTable(t3) : this.processElement(t3);
          }
          processTable(e3) {
            for (var t3 of e3.children)
              for (var r3 of t3.children)
                r3.cssStyle = this.copyStyleProperties(e3.cellStyle, r3.cssStyle, ["border-left", "border-right", "border-top", "border-bottom", "padding-left", "padding-right", "padding-top", "padding-bottom"]), this.processElement(r3);
          }
          copyStyleProperties(e3, t3, r3 = null) {
            if (!e3)
              return t3;
            for (var a3 of (null == t3 && (t3 = {}), null == r3 && (r3 = Object.getOwnPropertyNames(e3)), r3))
              e3.hasOwnProperty(a3) && !t3.hasOwnProperty(a3) && (t3[a3] = e3[a3]);
            return t3;
          }
          createSection(e3, t3) {
            var r3 = this.createElement("section", { className: e3 });
            return t3 && (t3.pageMargins && (r3.style.paddingLeft = t3.pageMargins.left, r3.style.paddingRight = t3.pageMargins.right, r3.style.paddingTop = t3.pageMargins.top, r3.style.paddingBottom = t3.pageMargins.bottom), t3.pageSize && (this.options.ignoreWidth || (r3.style.width = t3.pageSize.width), this.options.ignoreHeight || (r3.style.minHeight = t3.pageSize.height)), t3.columns && t3.columns.numberOfColumns && (r3.style.columnCount = `${t3.columns.numberOfColumns}`, r3.style.columnGap = t3.columns.space, t3.columns.separator && (r3.style.columnRule = "1px solid black"))), r3;
          }
          renderSections(e3) {
            const t3 = [];
            this.processElement(e3);
            const r3 = this.splitBySection(e3.children);
            let a3 = null;
            for (let n2 = 0, l2 = r3.length; n2 < l2; n2++) {
              this.currentFootnoteIds = [];
              const o2 = r3[n2], i2 = o2.sectProps || e3.props, c2 = this.createSection(this.className, i2);
              this.renderStyleValues(e3.cssStyle, c2), this.options.renderHeaders && this.renderHeaderFooter(i2.headerRefs, i2, t3.length, a3 != i2, c2);
              var s2 = this.createElement("article");
              this.renderElements(o2.elements, s2), c2.appendChild(s2), this.options.renderFootnotes && this.renderNotes(this.currentFootnoteIds, this.footnoteMap, c2), this.options.renderEndnotes && n2 == l2 - 1 && this.renderNotes(this.currentEndnoteIds, this.endnoteMap, c2), this.options.renderFooters && this.renderHeaderFooter(i2.footerRefs, i2, t3.length, a3 != i2, c2), t3.push(c2), a3 = i2;
            }
            return t3;
          }
          renderHeaderFooter(e3, t3, r3, a3, s2) {
            var n2, l2;
            if (e3) {
              var o2 = null !== (l2 = null !== (n2 = t3.titlePage && a3 ? e3.find((e4) => "first" == e4.type) : null) && void 0 !== n2 ? n2 : r3 % 2 == 1 ? e3.find((e4) => "even" == e4.type) : null) && void 0 !== l2 ? l2 : e3.find((e4) => "default" == e4.type), i2 = o2 && this.document.findPartByRelId(o2.id, this.document.documentPart);
              i2 && (this.currentPart = i2, this.usedHederFooterParts.includes(i2.path) || (this.processElement(i2.rootElement), this.usedHederFooterParts.push(i2.path)), this.renderElements([i2.rootElement], s2), this.currentPart = null);
            }
          }
          isPageBreakElement(e3) {
            return e3.type == a2.DomType.Break && ("lastRenderedPageBreak" == e3.break ? !this.options.ignoreLastRenderedPageBreak : "page" == e3.break);
          }
          splitBySection(e3) {
            var t3, r3 = { sectProps: null, elements: [] }, s2 = [r3];
            for (let u3 of e3) {
              if (u3.type == a2.DomType.Paragraph) {
                const e4 = this.findStyle(u3.styleName);
                (null === (t3 = null == e4 ? void 0 : e4.paragraphProps) || void 0 === t3 ? void 0 : t3.pageBreakBefore) && (r3.sectProps = n2, r3 = { sectProps: null, elements: [] }, s2.push(r3));
              }
              if (r3.elements.push(u3), u3.type == a2.DomType.Paragraph) {
                const e4 = u3;
                var n2 = e4.sectionProps, l2 = -1, o2 = -1;
                if (this.options.breakPages && e4.children && (l2 = e4.children.findIndex((e5) => {
                  var t4, r4;
                  return -1 != (o2 = null !== (r4 = null === (t4 = e5.children) || void 0 === t4 ? void 0 : t4.findIndex(this.isPageBreakElement.bind(this))) && void 0 !== r4 ? r4 : -1);
                })), (n2 || -1 != l2) && (r3.sectProps = n2, r3 = { sectProps: null, elements: [] }, s2.push(r3)), -1 != l2) {
                  let t4 = e4.children[l2], a3 = o2 < t4.children.length - 1;
                  if (l2 < e4.children.length - 1 || a3) {
                    var i2 = u3.children, c2 = Object.assign(Object.assign({}, u3), { children: i2.slice(l2) });
                    if (u3.children = i2.slice(0, l2), r3.elements.push(c2), a3) {
                      let e5 = t4.children, r4 = Object.assign(Object.assign({}, t4), { children: e5.slice(0, o2) });
                      u3.children.push(r4), t4.children = e5.slice(o2);
                    }
                  }
                }
              }
            }
            let u2 = null;
            for (let e4 = s2.length - 1; e4 >= 0; e4--)
              null == s2[e4].sectProps ? s2[e4].sectProps = u2 : u2 = s2[e4].sectProps;
            return s2;
          }
          renderWrapper(e3) {
            return this.createElement("div", { className: `${this.className}-wrapper` }, e3);
          }
          renderDefaultStyle() {
            var e3 = this.className;
            return h(`
.${e3}-wrapper { background: gray; padding: 30px; padding-bottom: 0px; display: flex; flex-flow: column; align-items: center; } 
.${e3}-wrapper>section.${e3} { background: white; box-shadow: 0 0 10px rgba(0, 0, 0, 0.5); margin-bottom: 30px; }
.${e3} { color: black; }
section.${e3} { box-sizing: border-box; display: flex; flex-flow: column nowrap; position: relative; overflow: hidden; }
section.${e3}>article { margin-bottom: auto; }
.${e3} table { border-collapse: collapse; }
.${e3} table td, .${e3} table th { vertical-align: top; }
.${e3} p { margin: 0pt; min-height: 1em; }
.${e3} span { white-space: pre-wrap; overflow-wrap: break-word; }
.${e3} a { color: inherit; text-decoration: inherit; }
`);
          }
          renderNumbering(e3, t3) {
            var r3 = "", a3 = [];
            for (var s2 of e3) {
              var n2 = `p.${this.numberingClass(s2.id, s2.level)}`, l2 = "none";
              if (s2.bullet) {
                let e4 = `--${this.className}-${s2.bullet.src}`.toLowerCase();
                r3 += this.styleToString(`${n2}:before`, { content: "' '", display: "inline-block", background: `var(${e4})` }, s2.bullet.style), this.document.loadNumberingImage(s2.bullet.src).then((r4) => {
                  var a4 = `${this.rootSelector} { ${e4}: url(${r4}) }`;
                  t3.appendChild(h(a4));
                });
              } else if (s2.levelText) {
                let e4 = this.numberingCounter(s2.id, s2.level);
                s2.level > 0 ? r3 += this.styleToString(`p.${this.numberingClass(s2.id, s2.level - 1)}`, { "counter-reset": e4 }) : a3.push(e4), r3 += this.styleToString(`${n2}:before`, Object.assign({ content: this.levelTextToContent(s2.levelText, s2.suff, s2.id, this.numFormatToCssValue(s2.format)), "counter-increment": e4 }, s2.rStyle));
              } else
                l2 = this.numFormatToCssValue(s2.format);
              r3 += this.styleToString(n2, Object.assign({ display: "list-item", "list-style-position": "inside", "list-style-type": l2 }, s2.pStyle));
            }
            return a3.length > 0 && (r3 += this.styleToString(this.rootSelector, { "counter-reset": a3.join(" ") })), h(r3);
          }
          renderStyles(e3) {
            var t3, r3 = "";
            const a3 = this.styleMap, n2 = (0, s.keyBy)(e3.filter((e4) => e4.isDefault), (e4) => e4.target);
            for (const s2 of e3) {
              var l2 = s2.styles;
              if (s2.linked) {
                var o2 = s2.linked && a3[s2.linked];
                o2 ? l2 = l2.concat(o2.styles) : this.options.debug && console.warn(`Can't find linked style ${s2.linked}`);
              }
              for (const e4 of l2) {
                var i2 = `${null !== (t3 = s2.target) && void 0 !== t3 ? t3 : ""}.${s2.cssName}`;
                s2.target != e4.target && (i2 += ` ${e4.target}`), n2[s2.target] == s2 && (i2 = `.${this.className} ${s2.target}, ` + i2), r3 += this.styleToString(i2, e4.values);
              }
            }
            return h(r3);
          }
          renderNotes(e3, t3, r3) {
            var a3 = e3.map((e4) => t3[e4]).filter((e4) => e4);
            if (a3.length > 0) {
              var s2 = this.createElement("ol", null, this.renderElements(a3));
              r3.appendChild(s2);
            }
          }
          renderElement(e3) {
            switch (e3.type) {
              case a2.DomType.Paragraph:
                return this.renderParagraph(e3);
              case a2.DomType.BookmarkStart:
                return this.renderBookmarkStart(e3);
              case a2.DomType.BookmarkEnd:
                return null;
              case a2.DomType.Run:
                return this.renderRun(e3);
              case a2.DomType.Table:
                return this.renderTable(e3);
              case a2.DomType.Row:
                return this.renderTableRow(e3);
              case a2.DomType.Cell:
                return this.renderTableCell(e3);
              case a2.DomType.Hyperlink:
                return this.renderHyperlink(e3);
              case a2.DomType.Drawing:
                return this.renderDrawing(e3);
              case a2.DomType.Image:
                return this.renderImage(e3);
              case a2.DomType.Text:
              case a2.DomType.Text:
                return this.renderText(e3);
              case a2.DomType.DeletedText:
                return this.renderDeletedText(e3);
              case a2.DomType.Tab:
                return this.renderTab(e3);
              case a2.DomType.Symbol:
                return this.renderSymbol(e3);
              case a2.DomType.Break:
                return this.renderBreak(e3);
              case a2.DomType.Footer:
                return this.renderContainer(e3, "footer");
              case a2.DomType.Header:
                return this.renderContainer(e3, "header");
              case a2.DomType.Footnote:
              case a2.DomType.Endnote:
                return this.renderContainer(e3, "li");
              case a2.DomType.FootnoteReference:
                return this.renderFootnoteReference(e3);
              case a2.DomType.EndnoteReference:
                return this.renderEndnoteReference(e3);
              case a2.DomType.NoBreakHyphen:
                return this.createElement("wbr");
              case a2.DomType.VmlPicture:
                return this.renderVmlPicture(e3);
              case a2.DomType.VmlElement:
                return this.renderVmlElement(e3);
              case a2.DomType.MmlMath:
                return this.renderContainerNS(e3, o, "math", { xmlns: o });
              case a2.DomType.MmlMathParagraph:
                return this.renderContainer(e3, "span");
              case a2.DomType.MmlFraction:
                return this.renderContainerNS(e3, o, "mfrac");
              case a2.DomType.MmlNumerator:
              case a2.DomType.MmlDenominator:
                return this.renderContainerNS(e3, o, "mrow");
              case a2.DomType.MmlRadical:
                return this.renderMmlRadical(e3);
              case a2.DomType.MmlDegree:
                return this.renderContainerNS(e3, o, "mn");
              case a2.DomType.MmlSuperscript:
                return this.renderContainerNS(e3, o, "msup");
              case a2.DomType.MmlSubscript:
                return this.renderContainerNS(e3, o, "msub");
              case a2.DomType.MmlBase:
                return this.renderContainerNS(e3, o, "mrow");
              case a2.DomType.MmlSuperArgument:
              case a2.DomType.MmlSubArgument:
                return this.renderContainerNS(e3, o, "mn");
              case a2.DomType.MmlDelimiter:
                return this.renderMmlDelimiter(e3);
              case a2.DomType.MmlRun:
                return this.renderMmlRun(e3);
              case a2.DomType.MmlNary:
                return this.renderMmlNary(e3);
              case a2.DomType.Inserted:
                return this.renderInserted(e3);
              case a2.DomType.Deleted:
                return this.renderDeleted(e3);
            }
            return null;
          }
          renderChildren(e3, t3) {
            return this.renderElements(e3.children, t3);
          }
          renderElements(e3, t3) {
            if (null == e3)
              return null;
            var r3 = e3.flatMap((e4) => this.renderElement(e4)).filter((e4) => null != e4);
            return t3 && d(t3, r3), r3;
          }
          renderContainer(e3, t3, r3) {
            return this.createElement(t3, r3, this.renderChildren(e3));
          }
          renderContainerNS(e3, t3, r3, a3) {
            return u(t3, r3, a3, this.renderChildren(e3));
          }
          renderParagraph(e3) {
            var t3, r3, a3, s2, n2 = this.createElement("p");
            const l2 = this.findStyle(e3.styleName);
            null !== (t3 = e3.tabs) && void 0 !== t3 || (e3.tabs = null === (r3 = null == l2 ? void 0 : l2.paragraphProps) || void 0 === r3 ? void 0 : r3.tabs), this.renderClass(e3, n2), this.renderChildren(e3, n2), this.renderStyleValues(e3.cssStyle, n2), this.renderCommonProperties(n2.style, e3);
            const o2 = null !== (a3 = e3.numbering) && void 0 !== a3 ? a3 : null === (s2 = null == l2 ? void 0 : l2.paragraphProps) || void 0 === s2 ? void 0 : s2.numbering;
            return o2 && n2.classList.add(this.numberingClass(o2.id, o2.level)), n2;
          }
          renderRunProperties(e3, t3) {
            this.renderCommonProperties(e3, t3);
          }
          renderCommonProperties(e3, t3) {
            null != t3 && (t3.color && (e3.color = t3.color), t3.fontSize && (e3["font-size"] = t3.fontSize));
          }
          renderHyperlink(e3) {
            var t3 = this.createElement("a");
            if (this.renderChildren(e3, t3), this.renderStyleValues(e3.cssStyle, t3), e3.href)
              t3.href = e3.href;
            else if (e3.id) {
              const r3 = this.document.documentPart.rels.find((t4) => t4.id == e3.id && "External" === t4.targetMode);
              t3.href = null == r3 ? void 0 : r3.target;
            }
            return t3;
          }
          renderDrawing(e3) {
            var t3 = this.createElement("div");
            return t3.style.display = "inline-block", t3.style.position = "relative", t3.style.textIndent = "0px", this.renderChildren(e3, t3), this.renderStyleValues(e3.cssStyle, t3), t3;
          }
          renderImage(e3) {
            let t3 = this.createElement("img");
            return this.renderStyleValues(e3.cssStyle, t3), this.document && this.document.loadDocumentImage(e3.src, this.currentPart).then((e4) => {
              t3.src = e4;
            }), t3;
          }
          renderText(e3) {
            return this.htmlDocument.createTextNode(e3.text);
          }
          renderDeletedText(e3) {
            return this.options.renderEndnotes ? this.htmlDocument.createTextNode(e3.text) : null;
          }
          renderBreak(e3) {
            return "textWrapping" == e3.break ? this.createElement("br") : null;
          }
          renderInserted(e3) {
            return this.options.renderChanges ? this.renderContainer(e3, "ins") : this.renderChildren(e3);
          }
          renderDeleted(e3) {
            return this.options.renderChanges ? this.renderContainer(e3, "del") : null;
          }
          renderSymbol(e3) {
            var t3 = this.createElement("span");
            return t3.style.fontFamily = e3.font, t3.innerHTML = `&#x${e3.char};`, t3;
          }
          renderFootnoteReference(e3) {
            var t3 = this.createElement("sup");
            return this.currentFootnoteIds.push(e3.id), t3.textContent = `${this.currentFootnoteIds.length}`, t3;
          }
          renderEndnoteReference(e3) {
            var t3 = this.createElement("sup");
            return this.currentEndnoteIds.push(e3.id), t3.textContent = `${this.currentEndnoteIds.length}`, t3;
          }
          renderTab(e3) {
            var t3, r3 = this.createElement("span");
            if (r3.innerHTML = "&emsp;", this.options.experimental) {
              r3.className = this.tabStopClass();
              var s2 = null === (t3 = function(e4, t4) {
                for (var r4 = e4.parent; null != r4 && r4.type != t4; )
                  r4 = r4.parent;
                return r4;
              }(e3, a2.DomType.Paragraph)) || void 0 === t3 ? void 0 : t3.tabs;
              this.currentTabs.push({ stops: s2, span: r3 });
            }
            return r3;
          }
          renderBookmarkStart(e3) {
            var t3 = this.createElement("span");
            return t3.id = e3.name, t3;
          }
          renderRun(e3) {
            if (e3.fieldRun)
              return null;
            const t3 = this.createElement("span");
            if (e3.id && (t3.id = e3.id), this.renderClass(e3, t3), this.renderStyleValues(e3.cssStyle, t3), e3.verticalAlign) {
              const r3 = this.createElement(e3.verticalAlign);
              this.renderChildren(e3, r3), t3.appendChild(r3);
            } else
              this.renderChildren(e3, t3);
            return t3;
          }
          renderTable(e3) {
            let t3 = this.createElement("table");
            return this.tableCellPositions.push(this.currentCellPosition), this.tableVerticalMerges.push(this.currentVerticalMerge), this.currentVerticalMerge = {}, this.currentCellPosition = { col: 0, row: 0 }, e3.columns && t3.appendChild(this.renderTableColumns(e3.columns)), this.renderClass(e3, t3), this.renderChildren(e3, t3), this.renderStyleValues(e3.cssStyle, t3), this.currentVerticalMerge = this.tableVerticalMerges.pop(), this.currentCellPosition = this.tableCellPositions.pop(), t3;
          }
          renderTableColumns(e3) {
            let t3 = this.createElement("colgroup");
            for (let r3 of e3) {
              let e4 = this.createElement("col");
              r3.width && (e4.style.width = r3.width), t3.appendChild(e4);
            }
            return t3;
          }
          renderTableRow(e3) {
            let t3 = this.createElement("tr");
            return this.currentCellPosition.col = 0, this.renderClass(e3, t3), this.renderChildren(e3, t3), this.renderStyleValues(e3.cssStyle, t3), this.currentCellPosition.row++, t3;
          }
          renderTableCell(e3) {
            let t3 = this.createElement("td");
            const r3 = this.currentCellPosition.col;
            return e3.verticalMerge ? "restart" == e3.verticalMerge ? (this.currentVerticalMerge[r3] = t3, t3.rowSpan = 1) : this.currentVerticalMerge[r3] && (this.currentVerticalMerge[r3].rowSpan += 1, t3.style.display = "none") : this.currentVerticalMerge[r3] = null, this.renderClass(e3, t3), this.renderChildren(e3, t3), this.renderStyleValues(e3.cssStyle, t3), e3.span && (t3.colSpan = e3.span), this.currentCellPosition.col += t3.colSpan, t3;
          }
          renderVmlPicture(e3) {
            var t3 = i("div");
            return this.renderChildren(e3, t3), t3;
          }
          renderVmlElement(e3) {
            var t3, r3, a3 = c("svg");
            a3.setAttribute("style", e3.cssStyleText);
            const s2 = c(e3.tagName);
            return Object.entries(e3.attrs).forEach(([e4, t4]) => s2.setAttribute(e4, t4)), (null === (t3 = e3.imageHref) || void 0 === t3 ? void 0 : t3.id) && (null === (r3 = this.document) || void 0 === r3 || r3.loadDocumentImage(e3.imageHref.id, this.currentPart).then((e4) => s2.setAttribute("href", e4))), a3.appendChild(s2), requestAnimationFrame(() => {
              const e4 = a3.firstElementChild.getBBox();
              a3.setAttribute("width", `${Math.ceil(e4.x + e4.width)}`), a3.setAttribute("height", `${Math.ceil(e4.y + e4.height)}`);
            }), a3;
          }
          renderMmlRadical(e3) {
            var t3;
            const r3 = e3.children.find((e4) => e4.type == a2.DomType.MmlBase);
            if (null === (t3 = e3.props) || void 0 === t3 ? void 0 : t3.hideDegree)
              return u(o, "msqrt", null, this.renderElements([r3]));
            const s2 = e3.children.find((e4) => e4.type == a2.DomType.MmlDegree);
            return u(o, "mroot", null, this.renderElements([r3, s2]));
          }
          renderMmlDelimiter(e3) {
            var t3, r3;
            const a3 = [];
            return a3.push(u(o, "mo", null, [null !== (t3 = e3.props.beginChar) && void 0 !== t3 ? t3 : "("])), a3.push(...this.renderElements(e3.children)), a3.push(u(o, "mo", null, [null !== (r3 = e3.props.endChar) && void 0 !== r3 ? r3 : ")"])), u(o, "mrow", null, a3);
          }
          renderMmlNary(e3) {
            var t3;
            const r3 = [], n2 = (0, s.keyBy)(e3.children, (e4) => e4.type), l2 = n2[a2.DomType.MmlSuperArgument], i2 = n2[a2.DomType.MmlSubArgument], c2 = l2 ? u(o, "mo", null, (0, s.asArray)(this.renderElement(l2))) : null, p2 = i2 ? u(o, "mo", null, (0, s.asArray)(this.renderElement(i2))) : null;
            if (null === (t3 = e3.props) || void 0 === t3 ? void 0 : t3.char) {
              const t4 = u(o, "mo", null, [e3.props.char]);
              c2 || p2 ? r3.push(u(o, "munderover", null, [t4, p2, c2])) : c2 ? r3.push(u(o, "mover", null, [t4, c2])) : p2 ? r3.push(u(o, "munder", null, [t4, p2])) : r3.push(t4);
            }
            return r3.push(...this.renderElements(n2[a2.DomType.MmlBase].children)), u(o, "mrow", null, r3);
          }
          renderMmlRun(e3) {
            const t3 = u(o, "ms");
            return this.renderClass(e3, t3), this.renderStyleValues(e3.cssStyle, t3), this.renderChildren(e3, t3), t3;
          }
          renderStyleValues(e3, t3) {
            Object.assign(t3.style, e3);
          }
          renderClass(e3, t3) {
            e3.className && (t3.className = e3.className), e3.styleName && t3.classList.add(this.processStyleName(e3.styleName));
          }
          findStyle(e3) {
            var t3;
            return e3 && (null === (t3 = this.styleMap) || void 0 === t3 ? void 0 : t3[e3]);
          }
          numberingClass(e3, t3) {
            return `${this.className}-num-${e3}-${t3}`;
          }
          tabStopClass() {
            return `${this.className}-tab-stop`;
          }
          styleToString(e3, t3, r3 = null) {
            let a3 = `${e3} {\r
`;
            for (const e4 in t3)
              a3 += `  ${e4}: ${t3[e4]};\r
`;
            return r3 && (a3 += r3), a3 + "}\r\n";
          }
          numberingCounter(e3, t3) {
            return `${this.className}-num-${e3}-${t3}`;
          }
          levelTextToContent(e3, t3, r3, a3) {
            var s2;
            return `"${e3.replace(/%\d*/g, (e4) => {
              let t4 = parseInt(e4.substring(1), 10) - 1;
              return `"counter(${this.numberingCounter(r3, t4)}, ${a3})"`;
            })}${null !== (s2 = { tab: "\\9", space: "\\a0" }[t3]) && void 0 !== s2 ? s2 : ""}"`;
          }
          numFormatToCssValue(e3) {
            var t3;
            return null !== (t3 = { none: "none", bullet: "disc", decimal: "decimal", lowerLetter: "lower-alpha", upperLetter: "upper-alpha", lowerRoman: "lower-roman", upperRoman: "upper-roman", decimalZero: "decimal-leading-zero", aiueo: "katakana", aiueoFullWidth: "katakana", chineseCounting: "simp-chinese-informal", chineseCountingThousand: "simp-chinese-informal", chineseLegalSimplified: "simp-chinese-formal", chosung: "hangul-consonant", ideographDigital: "cjk-ideographic", ideographTraditional: "cjk-heavenly-stem", ideographLegalTraditional: "trad-chinese-formal", ideographZodiac: "cjk-earthly-branch", iroha: "katakana-iroha", irohaFullWidth: "katakana-iroha", japaneseCounting: "japanese-informal", japaneseDigitalTenThousand: "cjk-decimal", japaneseLegal: "japanese-formal", thaiNumbers: "thai", koreanCounting: "korean-hangul-formal", koreanDigital: "korean-hangul-formal", koreanDigital2: "korean-hanja-informal", hebrew1: "hebrew", hebrew2: "hebrew", hindiNumbers: "devanagari", ganada: "hangul", taiwaneseCounting: "cjk-ideographic", taiwaneseCountingThousand: "cjk-ideographic", taiwaneseDigital: "cjk-decimal" }[e3]) && void 0 !== t3 ? t3 : e3;
          }
          refreshTabStops() {
            this.options.experimental && (clearTimeout(this.tabsTimeout), this.tabsTimeout = setTimeout(() => {
              const e3 = (0, n.computePixelToPoint)();
              for (let t3 of this.currentTabs)
                (0, n.updateTabStop)(t3.span, t3.stops, this.defaultTabSize, e3);
            }, 500));
          }
        };
      }, 630: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.updateTabStop = t2.computePixelToPoint = void 0;
        const r2 = { pos: 0, leader: "none", style: "left" };
        function a2(e3) {
          return parseFloat(e3);
        }
        t2.computePixelToPoint = function(e3 = document.body) {
          const t3 = document.createElement("div");
          t3.style.width = "100pt", e3.appendChild(t3);
          const r3 = 100 / t3.offsetWidth;
          return e3.removeChild(t3), r3;
        }, t2.updateTabStop = function(e3, t3, s, n = 0.75) {
          const l = e3.closest("p"), o = e3.getBoundingClientRect(), i = l.getBoundingClientRect(), c = getComputedStyle(l), u = (null == t3 ? void 0 : t3.length) > 0 ? t3.map((e4) => ({ pos: a2(e4.position), leader: e4.leader, style: e4.style })).sort((e4, t4) => e4.pos - t4.pos) : [r2], p = u[u.length - 1], d = i.width * n, h = a2(s);
          let m = p.pos + h;
          if (m < d)
            for (; m < d && u.length < 50; m += h)
              u.push(Object.assign(Object.assign({}, r2), { pos: m }));
          const f = parseFloat(c.marginLeft), g = i.left + f, b = (o.left - g) * n, y = u.find((e4) => "clear" != e4.style && e4.pos > b);
          if (null == y)
            return;
          let v = 1;
          if ("right" == y.style || "center" == y.style) {
            const t4 = Array.from(l.querySelectorAll(`.${e3.className}`)), r3 = t4.indexOf(e3) + 1, a3 = document.createRange();
            a3.setStart(e3, 1), r3 < t4.length ? a3.setEndBefore(t4[r3]) : a3.setEndAfter(l);
            const s2 = "center" == y.style ? 0.5 : 1, o2 = a3.getBoundingClientRect(), c2 = o2.left + s2 * o2.width - (i.left - f);
            v = y.pos - c2 * n;
          } else
            v = y.pos - b;
          switch (e3.innerHTML = "&nbsp;", e3.style.textDecoration = "inherit", e3.style.wordSpacing = `${v.toFixed(0)}pt`, y.leader) {
            case "dot":
            case "middleDot":
              e3.style.textDecoration = "underline", e3.style.textDecorationStyle = "dotted";
              break;
            case "hyphen":
            case "heavy":
            case "underscore":
              e3.style.textDecoration = "underline";
          }
        };
      }, 881: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.WmlEndnote = t2.WmlFootnote = t2.WmlBaseNote = void 0;
        const a2 = r2(120);
        class s {
          constructor() {
            this.children = [], this.cssStyle = {};
          }
        }
        t2.WmlBaseNote = s, t2.WmlFootnote = class extends s {
          constructor() {
            super(...arguments), this.type = a2.DomType.Footnote;
          }
        }, t2.WmlEndnote = class extends s {
          constructor() {
            super(...arguments), this.type = a2.DomType.Endnote;
          }
        };
      }, 735: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.EndnotesPart = t2.FootnotesPart = t2.BaseNotePart = void 0;
        const a2 = r2(530), s = r2(881);
        class n extends a2.Part {
          constructor(e3, t3, r3) {
            super(e3, t3), this._documentParser = r3;
          }
        }
        t2.BaseNotePart = n, t2.FootnotesPart = class extends n {
          constructor(e3, t3, r3) {
            super(e3, t3, r3);
          }
          parseXml(e3) {
            this.notes = this._documentParser.parseNotes(e3, "footnote", s.WmlFootnote);
          }
        }, t2.EndnotesPart = class extends n {
          constructor(e3, t3, r3) {
            super(e3, t3, r3);
          }
          parseXml(e3) {
            this.notes = this._documentParser.parseNotes(e3, "endnote", s.WmlEndnote);
          }
        };
      }, 527: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.NumberingPart = void 0;
        const a2 = r2(530), s = r2(682);
        class n extends a2.Part {
          constructor(e3, t3, r3) {
            super(e3, t3), this._documentParser = r3;
          }
          parseXml(e3) {
            Object.assign(this, (0, s.parseNumberingPart)(e3, this._package.xmlParser)), this.domNumberings = this._documentParser.parseNumberingFile(e3);
          }
        }
        t2.NumberingPart = n;
      }, 682: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseNumberingBulletPicture = t2.parseNumberingLevelOverrride = t2.parseNumberingLevel = t2.parseAbstractNumbering = t2.parseNumbering = t2.parseNumberingPart = void 0;
        const a2 = r2(109), s = r2(488);
        function n(e3, t3) {
          let r3 = { id: t3.attr(e3, "numId"), overrides: [] };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "abstractNumId":
                r3.abstractId = t3.attr(a3, "val");
                break;
              case "lvlOverride":
                r3.overrides.push(i(a3, t3));
            }
          return r3;
        }
        function l(e3, t3) {
          let r3 = { id: t3.attr(e3, "abstractNumId"), levels: [] };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "name":
                r3.name = t3.attr(a3, "val");
                break;
              case "multiLevelType":
                r3.multiLevelType = t3.attr(a3, "val");
                break;
              case "numStyleLink":
                r3.numberingStyleLink = t3.attr(a3, "val");
                break;
              case "styleLink":
                r3.styleLink = t3.attr(a3, "val");
                break;
              case "lvl":
                r3.levels.push(o(a3, t3));
            }
          return r3;
        }
        function o(e3, t3) {
          let r3 = { level: t3.intAttr(e3, "ilvl") };
          for (let n2 of t3.elements(e3))
            switch (n2.localName) {
              case "start":
                r3.start = t3.attr(n2, "val");
                break;
              case "lvlRestart":
                r3.restart = t3.intAttr(n2, "val");
                break;
              case "numFmt":
                r3.format = t3.attr(n2, "val");
                break;
              case "lvlText":
                r3.text = t3.attr(n2, "val");
                break;
              case "lvlJc":
                r3.justification = t3.attr(n2, "val");
                break;
              case "lvlPicBulletId":
                r3.bulletPictureId = t3.attr(n2, "val");
                break;
              case "pStyle":
                r3.paragraphStyle = t3.attr(n2, "val");
                break;
              case "pPr":
                r3.paragraphProps = (0, a2.parseParagraphProperties)(n2, t3);
                break;
              case "rPr":
                r3.runProps = (0, s.parseRunProperties)(n2, t3);
            }
          return r3;
        }
        function i(e3, t3) {
          let r3 = { level: t3.intAttr(e3, "ilvl") };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "startOverride":
                r3.start = t3.intAttr(a3, "val");
                break;
              case "lvl":
                r3.numberingLevel = o(a3, t3);
            }
          return r3;
        }
        function c(e3, t3) {
          var r3 = t3.element(e3, "pict"), a3 = r3 && t3.element(r3, "shape"), s2 = a3 && t3.element(a3, "imagedata");
          return s2 ? { id: t3.attr(e3, "numPicBulletId"), referenceId: t3.attr(s2, "id"), style: t3.attr(a3, "style") } : null;
        }
        t2.parseNumberingPart = function(e3, t3) {
          let r3 = { numberings: [], abstractNumberings: [], bulletPictures: [] };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "num":
                r3.numberings.push(n(a3, t3));
                break;
              case "abstractNum":
                r3.abstractNumberings.push(l(a3, t3));
                break;
              case "numPicBullet":
                r3.bulletPictures.push(c(a3, t3));
            }
          return r3;
        }, t2.parseNumbering = n, t2.parseAbstractNumbering = l, t2.parseNumberingLevel = o, t2.parseNumberingLevelOverrride = i, t2.parseNumberingBulletPicture = c;
      }, 472: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.XmlParser = t2.serializeXmlString = t2.parseXmlString = void 0;
        const a2 = r2(149);
        t2.parseXmlString = function(e3, t3 = false) {
          var r3;
          t3 && (e3 = e3.replace(/<[?].*[?]>/, "")), e3 = 65279 === (r3 = e3).charCodeAt(0) ? r3.substring(1) : r3;
          const a3 = new DOMParser().parseFromString(e3, "application/xml"), s2 = null === (n2 = a3.getElementsByTagName("parsererror")[0]) || void 0 === n2 ? void 0 : n2.textContent;
          var n2;
          if (s2)
            throw new Error(s2);
          return a3;
        }, t2.serializeXmlString = function(e3) {
          return new XMLSerializer().serializeToString(e3);
        };
        class s {
          elements(e3, t3 = null) {
            const r3 = [];
            for (let a3 = 0, s2 = e3.childNodes.length; a3 < s2; a3++) {
              let s3 = e3.childNodes.item(a3);
              1 != s3.nodeType || null != t3 && s3.localName != t3 || r3.push(s3);
            }
            return r3;
          }
          element(e3, t3) {
            for (let r3 = 0, a3 = e3.childNodes.length; r3 < a3; r3++) {
              let a4 = e3.childNodes.item(r3);
              if (1 == a4.nodeType && a4.localName == t3)
                return a4;
            }
            return null;
          }
          elementAttr(e3, t3, r3) {
            var a3 = this.element(e3, t3);
            return a3 ? this.attr(a3, r3) : void 0;
          }
          attrs(e3) {
            return Array.from(e3.attributes);
          }
          attr(e3, t3) {
            for (let r3 = 0, a3 = e3.attributes.length; r3 < a3; r3++) {
              let a4 = e3.attributes.item(r3);
              if (a4.localName == t3)
                return a4.value;
            }
            return null;
          }
          intAttr(e3, t3, r3 = null) {
            var a3 = this.attr(e3, t3);
            return a3 ? parseInt(a3) : r3;
          }
          hexAttr(e3, t3, r3 = null) {
            var a3 = this.attr(e3, t3);
            return a3 ? parseInt(a3, 16) : r3;
          }
          floatAttr(e3, t3, r3 = null) {
            var a3 = this.attr(e3, t3);
            return a3 ? parseFloat(a3) : r3;
          }
          boolAttr(e3, t3, r3 = null) {
            return (0, a2.convertBoolean)(this.attr(e3, t3), r3);
          }
          lengthAttr(e3, t3, r3 = a2.LengthUsage.Dxa) {
            return (0, a2.convertLength)(this.attr(e3, t3), r3);
          }
        }
        t2.XmlParser = s;
        const n = new s();
        t2.default = n;
      }, 287: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.SettingsPart = void 0;
        const a2 = r2(530), s = r2(846);
        class n extends a2.Part {
          constructor(e3, t3) {
            super(e3, t3);
          }
          parseXml(e3) {
            this.settings = (0, s.parseSettings)(e3, this._package.xmlParser);
          }
        }
        t2.SettingsPart = n;
      }, 846: (e2, t2) => {
        function r2(e3, t3) {
          var r3 = { defaultNoteIds: [] };
          for (let a2 of t3.elements(e3))
            switch (a2.localName) {
              case "numFmt":
                r3.nummeringFormat = t3.attr(a2, "val");
                break;
              case "footnote":
              case "endnote":
                r3.defaultNoteIds.push(t3.attr(a2, "id"));
            }
          return r3;
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseNoteProperties = t2.parseSettings = void 0, t2.parseSettings = function(e3, t3) {
          var a2 = {};
          for (let s of t3.elements(e3))
            switch (s.localName) {
              case "defaultTabStop":
                a2.defaultTabStop = t3.lengthAttr(s, "val");
                break;
              case "footnotePr":
                a2.footnoteProps = r2(s, t3);
                break;
              case "endnotePr":
                a2.endnoteProps = r2(s, t3);
                break;
              case "autoHyphenation":
                a2.autoHyphenation = t3.boolAttr(s, "val");
            }
          return a2;
        }, t2.parseNoteProperties = r2;
      }, 240: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.StylesPart = void 0;
        const a2 = r2(530);
        class s extends a2.Part {
          constructor(e3, t3, r3) {
            super(e3, t3), this._documentParser = r3;
          }
          parseXml(e3) {
            this.styles = this._documentParser.parseStylesFile(e3);
          }
        }
        t2.StylesPart = s;
      }, 893: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.ThemePart = void 0;
        const a2 = r2(530), s = r2(55);
        class n extends a2.Part {
          constructor(e3, t3) {
            super(e3, t3);
          }
          parseXml(e3) {
            this.theme = (0, s.parseTheme)(e3, this._package.xmlParser);
          }
        }
        t2.ThemePart = n;
      }, 55: (e2, t2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseFontInfo = t2.parseFontScheme = t2.parseColorScheme = t2.parseTheme = t2.DmlTheme = void 0;
        class r2 {
        }
        function a2(e3, t3) {
          var r3 = { name: t3.attr(e3, "name"), colors: {} };
          for (let n2 of t3.elements(e3)) {
            var a3 = t3.element(n2, "srgbClr"), s2 = t3.element(n2, "sysClr");
            a3 ? r3.colors[n2.localName] = t3.attr(a3, "val") : s2 && (r3.colors[n2.localName] = t3.attr(s2, "lastClr"));
          }
          return r3;
        }
        function s(e3, t3) {
          var r3 = { name: t3.attr(e3, "name") };
          for (let a3 of t3.elements(e3))
            switch (a3.localName) {
              case "majorFont":
                r3.majorFont = n(a3, t3);
                break;
              case "minorFont":
                r3.minorFont = n(a3, t3);
            }
          return r3;
        }
        function n(e3, t3) {
          return { latinTypeface: t3.elementAttr(e3, "latin", "typeface"), eaTypeface: t3.elementAttr(e3, "ea", "typeface"), csTypeface: t3.elementAttr(e3, "cs", "typeface") };
        }
        t2.DmlTheme = r2, t2.parseTheme = function(e3, t3) {
          var n2 = new r2(), l = t3.element(e3, "themeElements");
          for (let e4 of t3.elements(l))
            switch (e4.localName) {
              case "clrScheme":
                n2.colorScheme = a2(e4, t3);
                break;
              case "fontScheme":
                n2.fontScheme = s(e4, t3);
            }
          return n2;
        }, t2.parseColorScheme = a2, t2.parseFontScheme = s, t2.parseFontInfo = n;
      }, 593: (e2, t2) => {
        function r2(e3) {
          return e3 && "object" == typeof e3 && !Array.isArray(e3);
        }
        Object.defineProperty(t2, "__esModule", { value: true }), t2.asArray = t2.formatCssRules = t2.parseCssRules = t2.mergeDeep = t2.isString = t2.isObject = t2.blobToBase64 = t2.keyBy = t2.resolvePath = t2.splitPath = t2.escapeClassName = void 0, t2.escapeClassName = function(e3) {
          return null == e3 ? void 0 : e3.replace(/[ .]+/g, "-").replace(/[&]+/g, "and").toLowerCase();
        }, t2.splitPath = function(e3) {
          let t3 = e3.lastIndexOf("/") + 1;
          return [0 == t3 ? "" : e3.substring(0, t3), 0 == t3 ? e3 : e3.substring(t3)];
        }, t2.resolvePath = function(e3, t3) {
          try {
            const r3 = "http://docx/";
            return new URL(e3, r3 + t3).toString().substring(r3.length);
          } catch (r3) {
            return `${t3}${e3}`;
          }
        }, t2.keyBy = function(e3, t3) {
          return e3.reduce((e4, r3) => (e4[t3(r3)] = r3, e4), {});
        }, t2.blobToBase64 = function(e3) {
          return new Promise((t3, r3) => {
            const a2 = new FileReader();
            a2.onloadend = () => t3(a2.result), a2.onerror = () => r3(), a2.readAsDataURL(e3);
          });
        }, t2.isObject = r2, t2.isString = function(e3) {
          return e3 && "string" == typeof e3 || e3 instanceof String;
        }, t2.mergeDeep = function e3(t3, ...a2) {
          var s;
          if (!a2.length)
            return t3;
          const n = a2.shift();
          if (r2(t3) && r2(n))
            for (const a3 in n)
              r2(n[a3]) ? e3(null !== (s = t3[a3]) && void 0 !== s ? s : t3[a3] = {}, n[a3]) : t3[a3] = n[a3];
          return e3(t3, ...a2);
        }, t2.parseCssRules = function(e3) {
          const t3 = {};
          for (const r3 of e3.split(";")) {
            const [e4, a2] = r3.split(":");
            t3[e4] = a2;
          }
          return t3;
        }, t2.formatCssRules = function(e3) {
          return Object.entries(e3).map((e4, t3) => `${e4}: ${t3}`).join(";");
        }, t2.asArray = function(e3) {
          return Array.isArray(e3) ? e3 : [e3];
        };
      }, 320: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.parseVmlElement = t2.VmlElement = void 0;
        const a2 = r2(149), s = r2(120), n = r2(472);
        class l {
          constructor() {
            this.type = s.DomType.VmlElement, this.attrs = {}, this.chidren = [];
          }
        }
        function o(e3) {
          var t3;
          return { stroke: n.default.attr(e3, "color"), "stroke-width": null !== (t3 = n.default.lengthAttr(e3, "weight", a2.LengthUsage.Emu)) && void 0 !== t3 ? t3 : "1px" };
        }
        function i(e3) {
          return e3.split(",");
        }
        t2.VmlElement = l, t2.parseVmlElement = function e3(t3) {
          var r3 = new l();
          switch (t3.localName) {
            case "rect":
              r3.tagName = "rect", Object.assign(r3.attrs, { width: "100%", height: "100%" });
              break;
            case "oval":
              r3.tagName = "ellipse", Object.assign(r3.attrs, { cx: "50%", cy: "50%", rx: "50%", ry: "50%" });
              break;
            case "line":
              r3.tagName = "line";
              break;
            case "shape":
              r3.tagName = "g";
              break;
            default:
              return null;
          }
          for (const e4 of n.default.attrs(t3))
            switch (e4.localName) {
              case "style":
                r3.cssStyleText = e4.value;
                break;
              case "fillcolor":
                r3.attrs.fill = e4.value;
                break;
              case "from":
                const [t4, a3] = i(e4.value);
                Object.assign(r3.attrs, { x1: t4, y1: a3 });
                break;
              case "to":
                const [s2, n2] = i(e4.value);
                Object.assign(r3.attrs, { x2: s2, y2: n2 });
            }
          for (const a3 of n.default.elements(t3))
            switch (a3.localName) {
              case "stroke":
                Object.assign(r3.attrs, o(a3));
                break;
              case "fill":
                Object.assign(r3.attrs, {});
                break;
              case "imagedata":
                r3.tagName = "image", Object.assign(r3.attrs, { width: "100%", height: "100%" }), r3.imageHref = { id: n.default.attr(a3, "id"), title: n.default.attr(a3, "title") };
                break;
              default:
                const t4 = e3(a3);
                t4 && r3.chidren.push(t4);
            }
          return r3;
        };
      }, 213: (e2, t2, r2) => {
        Object.defineProperty(t2, "__esModule", { value: true }), t2.deobfuscate = t2.WordDocument = void 0;
        const a2 = r2(461), s = r2(380), n = r2(522), l = r2(448), o = r2(593), i = r2(527), c = r2(240), u = r2(985), p = r2(665), d = r2(162), h = r2(893), m = r2(735), f = r2(287), g = r2(177), b = [{ type: a2.RelationshipTypes.OfficeDocument, target: "word/document.xml" }, { type: a2.RelationshipTypes.ExtendedProperties, target: "docProps/app.xml" }, { type: a2.RelationshipTypes.CoreProperties, target: "docProps/core.xml" }, { type: a2.RelationshipTypes.CustomProperties, target: "docProps/custom.xml" }];
        class y {
          constructor() {
            this.parts = [], this.partsMap = {};
          }
          static async load(e3, t3, r3) {
            var a3 = new y();
            return a3._options = r3, a3._parser = t3, a3._package = await n.OpenXmlPackage.load(e3, r3), a3.rels = await a3._package.loadRelationships(), await Promise.all(b.map((e4) => {
              var t4;
              const r4 = null !== (t4 = a3.rels.find((t5) => t5.type === e4.type)) && void 0 !== t4 ? t4 : e4;
              return a3.loadRelationshipPart(r4.target, r4.type);
            })), a3;
          }
          save(e3 = "blob") {
            return this._package.save(e3);
          }
          async loadRelationshipPart(e3, t3) {
            var r3;
            if (this.partsMap[e3])
              return this.partsMap[e3];
            if (!this._package.get(e3))
              return null;
            let n2 = null;
            switch (t3) {
              case a2.RelationshipTypes.OfficeDocument:
                this.documentPart = n2 = new l.DocumentPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.FontTable:
                this.fontTablePart = n2 = new s.FontTablePart(this._package, e3);
                break;
              case a2.RelationshipTypes.Numbering:
                this.numberingPart = n2 = new i.NumberingPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.Styles:
                this.stylesPart = n2 = new c.StylesPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.Theme:
                this.themePart = n2 = new h.ThemePart(this._package, e3);
                break;
              case a2.RelationshipTypes.Footnotes:
                this.footnotesPart = n2 = new m.FootnotesPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.Endnotes:
                this.endnotesPart = n2 = new m.EndnotesPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.Footer:
                n2 = new u.FooterPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.Header:
                n2 = new u.HeaderPart(this._package, e3, this._parser);
                break;
              case a2.RelationshipTypes.CoreProperties:
                this.corePropsPart = n2 = new d.CorePropsPart(this._package, e3);
                break;
              case a2.RelationshipTypes.ExtendedProperties:
                this.extendedPropsPart = n2 = new p.ExtendedPropsPart(this._package, e3);
                break;
              case a2.RelationshipTypes.CustomProperties:
                n2 = new g.CustomPropsPart(this._package, e3);
                break;
              case a2.RelationshipTypes.Settings:
                this.settingsPart = n2 = new f.SettingsPart(this._package, e3);
            }
            if (null == n2)
              return Promise.resolve(null);
            if (this.partsMap[e3] = n2, this.parts.push(n2), await n2.load(), (null === (r3 = n2.rels) || void 0 === r3 ? void 0 : r3.length) > 0) {
              const [e4] = (0, o.splitPath)(n2.path);
              await Promise.all(n2.rels.map((t4) => this.loadRelationshipPart((0, o.resolvePath)(t4.target, e4), t4.type)));
            }
            return n2;
          }
          async loadDocumentImage(e3, t3) {
            const r3 = await this.loadResource(null != t3 ? t3 : this.documentPart, e3, "blob");
            return this.blobToURL(r3);
          }
          async loadNumberingImage(e3) {
            const t3 = await this.loadResource(this.numberingPart, e3, "blob");
            return this.blobToURL(t3);
          }
          async loadFont(e3, t3) {
            const r3 = await this.loadResource(this.fontTablePart, e3, "uint8array");
            return r3 ? this.blobToURL(new Blob([v(r3, t3)])) : r3;
          }
          blobToURL(e3) {
            return e3 ? this._options.useBase64URL ? (0, o.blobToBase64)(e3) : URL.createObjectURL(e3) : null;
          }
          findPartByRelId(e3, t3 = null) {
            var r3, a3 = (null !== (r3 = t3.rels) && void 0 !== r3 ? r3 : this.rels).find((t4) => t4.id == e3);
            const s2 = t3 ? (0, o.splitPath)(t3.path)[0] : "";
            return a3 ? this.partsMap[(0, o.resolvePath)(a3.target, s2)] : null;
          }
          getPathById(e3, t3) {
            const r3 = e3.rels.find((e4) => e4.id == t3), [a3] = (0, o.splitPath)(e3.path);
            return r3 ? (0, o.resolvePath)(r3.target, a3) : null;
          }
          loadResource(e3, t3, r3) {
            const a3 = this.getPathById(e3, t3);
            return a3 ? this._package.load(a3, r3) : Promise.resolve(null);
          }
        }
        function v(e3, t3) {
          const r3 = t3.replace(/{|}|-/g, ""), a3 = new Array(16);
          for (let e4 = 0; e4 < 16; e4++)
            a3[16 - e4 - 1] = parseInt(r3.substr(2 * e4, 2), 16);
          for (let t4 = 0; t4 < 32; t4++)
            e3[t4] = e3[t4] ^ a3[t4 % 16];
          return e3;
        }
        t2.WordDocument = y, t2.deobfuscate = v;
      }, 583: (e2) => {
        e2.exports = "data:image/svg+xml,%3Csvg xmlns=%27http://www.w3.org/2000/svg%27 viewBox=%270 0 20 100%27 preserveAspectRatio=%27none%27%3E%3Cpath d=%27m0,75 l5,0 l5,25 l10,-100%27 stroke=%27black%27 fill=%27none%27 vector-effect=%27non-scaling-stroke%27/%3E%3C/svg%3E";
      }, 626: (t2) => {
        t2.exports = e;
      } }, r = {};
      function a(e2) {
        var s = r[e2];
        if (void 0 !== s)
          return s.exports;
        var n = r[e2] = { id: e2, exports: {} };
        return t[e2](n, n.exports, a), n.exports;
      }
      return a.m = t, a.n = (e2) => {
        var t2 = e2 && e2.__esModule ? () => e2.default : () => e2;
        return a.d(t2, { a: t2 }), t2;
      }, a.d = (e2, t2) => {
        for (var r2 in t2)
          a.o(t2, r2) && !a.o(e2, r2) && Object.defineProperty(e2, r2, { enumerable: true, get: t2[r2] });
      }, a.o = (e2, t2) => Object.prototype.hasOwnProperty.call(e2, t2), a.r = (e2) => {
        "undefined" != typeof Symbol && Symbol.toStringTag && Object.defineProperty(e2, Symbol.toStringTag, { value: "Module" }), Object.defineProperty(e2, "__esModule", { value: true });
      }, a.b = document.baseURI || self.location.href, a(667);
    })());
  }
});
export default require_docx_preview_min();
/*! Bundled license information:

jszip/dist/jszip.min.js:
  (*!
  
  JSZip v3.10.1 - A JavaScript class for generating and reading zip files
  <http://stuartk.com/jszip>
  
  (c) 2009-2016 Stuart Knightley <stuart [at] stuartk.com>
  Dual licenced under the MIT license or GPLv3. See https://raw.github.com/Stuk/jszip/main/LICENSE.markdown.
  
  JSZip uses the library pako released under the MIT license :
  https://github.com/nodeca/pako/blob/main/LICENSE
  *)
*/
//# sourceMappingURL=docx-preview.js.map
